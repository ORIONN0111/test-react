{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar littleStateMachine = require('little-state-machine');\n\nvar React = require('react');\n\nvar reactSimpleAnimate = require('react-simple-animate');\n\nvar styled = require('@emotion/styled');\n\nvar isUndefined$1 = require('lodash/isUndefined');\n\nvar isObject$1 = require('lodash/isObject');\n\nvar _ = require('lodash');\n\nvar useDeepCompareEffect = require('use-deep-compare-effect');\n\nvar uuid = require('uuid');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);\n\nvar isUndefined__default = /*#__PURE__*/_interopDefaultLegacy(isUndefined$1);\n\nvar isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject$1);\n\nvar ___default = /*#__PURE__*/_interopDefaultLegacy(_);\n\nvar useDeepCompareEffect__default = /*#__PURE__*/_interopDefaultLegacy(useDeepCompareEffect);\n\nvar isCheckBoxInput = element => element.type === 'checkbox';\n\nvar isDateObject = value => value instanceof Date;\n\nvar isNullOrUndefined = value => value == null;\n\nconst isObjectType = value => typeof value === 'object';\n\nvar isObject = value => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);\n\nvar getEventValue = event => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;\n\nvar getNodeParentName = name => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar compact = value => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = val => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\n\nconst EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change'\n};\nconst VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nconst INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nconst HookFormContext = React__default[\"default\"].createContext(null);\n/**\r\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @returns return all useForm methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\n\nconst useFormContext = () => React__default[\"default\"].useContext(HookFormContext);\n\nvar getProxyFormState = function (formState, _proxyFormState, localProxyFormState) {\n  let isRoot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const result = {};\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key;\n\n        if (_proxyFormState[_key] !== VALIDATION_MODE.all) {\n          _proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      }\n    });\n  }\n\n  return result;\n};\n\nvar isEmptyObject = value => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, isRoot) => {\n  const {\n    name,\n    ...formState\n  } = formStateData;\n  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find(key => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));\n};\n\nvar convertToArrayPayload = value => Array.isArray(value) ? value : [value];\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName ? name === signalName : !name || !signalName || name === signalName || convertToArrayPayload(name).some(currentName => currentName && (currentName.startsWith(signalName) || signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n  const _props = React__default[\"default\"].useRef(props);\n\n  _props.current = props;\n  React__default[\"default\"].useEffect(() => {\n    const tearDown = subscription => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n\n    const subscription = !props.disabled && _props.current.subject.subscribe({\n      next: _props.current.callback\n    });\n\n    return () => tearDown(subscription);\n  }, [props.disabled]);\n}\n/**\r\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\r\n *\r\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, control } = useForm({\r\n *     defaultValues: {\r\n *     firstName: \"firstName\"\r\n *   }});\r\n *   const { dirtyFields } = useFormState({\r\n *     control\r\n *   });\r\n *   const onSubmit = (data) => console.log(data);\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\n\n\nfunction useFormState(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    disabled,\n    name,\n    exact\n  } = props || {};\n  const [formState, updateFormState] = React__default[\"default\"].useState(control._formState);\n\n  const _localProxyFormState = React__default[\"default\"].useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  });\n\n  const _name = React__default[\"default\"].useRef(name);\n\n  const _mounted = React__default[\"default\"].useRef(true);\n\n  _name.current = name;\n  const callback = React__default[\"default\"].useCallback(value => _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current) && updateFormState({ ...control._formState,\n    ...value\n  }), [control, exact]);\n  useSubscribe({\n    disabled,\n    callback,\n    subject: control._subjects.state\n  });\n  React__default[\"default\"].useEffect(() => {\n    _mounted.current = true;\n    return () => {\n      _mounted.current = false;\n    };\n  }, []);\n  return getProxyFormState(formState, control._proxyFormState, _localProxyFormState.current, false);\n}\n\nvar isString = value => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal) => {\n  const isArray = Array.isArray(names);\n\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names);\n  }\n\n  if (isArray) {\n    return names.map(fieldName => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n  }\n\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n\nvar isFunction = value => typeof value === 'function';\n\nvar objectHasFunction = data => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\r\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\r\n *\r\n * @remarks\r\n *\r\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\r\n *\r\n * @example\r\n * ```tsx\r\n * const { watch } = useForm();\r\n * const values = useWatch({\r\n *   name: \"fieldName\"\r\n *   control,\r\n * })\r\n * ```\r\n */\n\n\nfunction useWatch(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact\n  } = props || {};\n\n  const _name = React__default[\"default\"].useRef(name);\n\n  _name.current = name;\n  const callback = React__default[\"default\"].useCallback(formState => {\n    if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n      const fieldValues = generateWatchOutput(_name.current, control._names, formState.values || control._formValues);\n      updateValue(isUndefined(_name.current) || isObject(fieldValues) && !objectHasFunction(fieldValues) ? { ...fieldValues\n      } : Array.isArray(fieldValues) ? [...fieldValues] : isUndefined(fieldValues) ? defaultValue : fieldValues);\n    }\n  }, [control, exact, defaultValue]);\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback\n  });\n  const [value, updateValue] = React__default[\"default\"].useState(isUndefined(defaultValue) ? control._getWatch(name) : defaultValue);\n  React__default[\"default\"].useEffect(() => {\n    control._removeUnmounted();\n  });\n  return value;\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? { ...errors[name],\n  types: { ...(errors[name] && errors[name].types ? errors[name].types : {}),\n    [type]: message || true\n  }\n} : {};\n\nvar isKey = value => /^\\w*$/.test(value);\n\nvar stringToPath = input => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n\n  return object;\n}\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const {\n        _f,\n        ...currentField\n      } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || [..._names.watch].some(watchName => name.startsWith(watchName) && /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar isWeb = typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined' && typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n  let copy;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) && (isArray || isObject(data))) {\n    copy = isArray ? [] : {};\n\n    for (const key in data) {\n      if (isFunction(data[key])) {\n        copy = data;\n        break;\n      }\n\n      copy[key] = cloneObject(data[key]);\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (currentPathsLength === index && (isObject(objectRef) && isEmptyObject(objectRef) || Array.isArray(objectRef) && !objectRef.filter(data => !isUndefined(data)).length)) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n\nfunction createSubject() {\n  let _observers = [];\n\n  const next = value => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = observer => {\n    _observers.push(observer);\n\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter(o => o !== observer);\n      }\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n\n    next,\n    subscribe,\n    unsubscribe\n  };\n}\n\nvar isPrimitive = value => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nvar getValidationModes = mode => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched\n});\n\nvar isBoolean = value => typeof value === 'boolean';\n\nvar isFileInput = element => element.type === 'file';\n\nvar isHTMLElement = value => {\n  const owner = value ? value.ownerDocument : 0;\n  const ElementClass = owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement;\n  return value instanceof ElementClass;\n};\n\nvar isMultipleSelect = element => element.type === `select-multiple`;\n\nvar isRadioInput = element => element.type === 'radio';\n\nvar isRadioOrCheckbox = ref => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = ref => isHTMLElement(ref) && ref.isConnected;\n\nfunction markFieldsDirty(data) {\n  let fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key]) ? markFieldsDirty(data[key], []) : { ...markFieldsDirty(data[key])\n          };\n        } else {\n          getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nconst defaultResult = {\n  value: false,\n  isValid: false\n};\nconst validResult = {\n  value: true,\n  isValid: true\n};\n\nvar getCheckboxValue = options => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options.filter(option => option && option.checked && !option.disabled).map(option => option.value);\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n\n    return options[0].checked && !options[0].disabled ? // @ts-expect-error expected to work in the browser\n    options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === '' ? validResult : {\n      value: options[0].value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n\n  return defaultResult;\n};\n\nvar getFieldValueAs = (value, _ref) => {\n  let {\n    valueAsNumber,\n    valueAsDate,\n    setValueAs\n  } = _ref;\n  return isUndefined(value) ? value : valueAsNumber ? value === '' || isNullOrUndefined(value) ? NaN : +value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;\n};\n\nconst defaultReturn = {\n  isValid: false,\n  value: null\n};\n\nvar getRadioValue = options => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {\n  isValid: true,\n  value: option.value\n} : previous, defaultReturn) : defaultReturn;\n\nfunction getFieldValue(_f) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every(ref => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(_ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value;\n    });\n  }\n\n  if (isCheckBoxInput(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n  const fields = {};\n\n  for (const name of fieldsNames) {\n    const field = get(_fields, name);\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation\n  };\n};\n\nvar isRegex = value => value instanceof RegExp;\n\nvar getRuleValue = rule => isUndefined(rule) ? undefined : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule;\n\nvar hasValidation = options => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return {\n        name\n      };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name\n  };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n\n  return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nvar isMessage = value => isString(value) || React__default[\"default\"].isValidElement(value);\n\nfunction getValidateError(result, ref) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n\n  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref\n    };\n  }\n}\n\nvar getValueAndMessage = validationData => isObject(validationData) && !isRegex(validationData) ? validationData : {\n  value: validationData,\n  message: ''\n};\n\nvar validateField = async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation) => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled\n  } = field._f;\n\n  if (!mount || disabled) {\n    return {};\n  }\n\n  const inputRef = refs ? refs[0] : ref;\n\n  const setCustomValidity = message => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n\n  const error = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = (valueAsNumber || isFileInput(ref)) && !ref.value || inputValue === '' || Array.isArray(inputValue) && !inputValue.length;\n  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n\n  const getMinMaxMessage = function (exceedMax, maxLengthMessage, minLengthMessage) {\n    let maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n    let minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message)\n    };\n  };\n\n  if (required && (!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {\n    const {\n      value,\n      message\n    } = isMessage(required) ? {\n      value: !!required,\n      message: required\n    } : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message)\n      };\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n      const valueNumber = ref.valueAsNumber || +inputValue;\n\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate = ref.valueAsDate || new Date(inputValue);\n\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > maxLengthOutput.value;\n    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const {\n      value: patternValue,\n      message\n    } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message)\n      };\n\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = { ...validateError,\n          ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message)\n        };\n\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {};\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\n\n        if (validateError) {\n          validationResult = { ...validateError,\n            ...appendErrorsCurry(key, validateError.message)\n          };\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult\n        };\n\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true\n};\n\nfunction createFormControl() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let _options = { ...defaultOptions,\n    ...props\n  };\n  let _formState = {\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {}\n  };\n  let _fields = {};\n\n  let _defaultValues = cloneObject(_options.defaultValues) || {};\n\n  let _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);\n\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false\n  };\n  let _names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  };\n  let delayErrorCallback;\n  let timer = 0;\n  let validateFields = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  };\n  const _subjects = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject()\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce = callback => wait => {\n    clearTimeout(timer);\n    timer = window.setTimeout(callback, wait);\n  };\n\n  const _updateValid = async shouldSkipRender => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuildInValidation(_fields, true);\n\n      if (!shouldSkipRender && isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n\n        _subjects.state.next({\n          isValid\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray = function (name) {\n    let values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let method = arguments.length > 2 ? arguments[2] : undefined;\n    let args = arguments.length > 3 ? arguments[3] : undefined;\n    let shouldSetValues = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let shouldUpdateFieldsAndState = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\n    if (args && method) {\n      _stateFlags.action = true;\n\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (_proxyFormState.errors && shouldUpdateFieldsAndState && Array.isArray(get(_formState.errors, name))) {\n        const errors = method(get(_formState.errors, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(get(_formState.touchedFields, name))) {\n        const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name, error) => {\n    set(_formState.errors, name, error);\n\n    _subjects.state.next({\n      errors: _formState.errors\n    });\n  };\n\n  const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n    const field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue);\n      _stateFlags.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n    let isFieldDirty = false;\n    const output = {\n      name\n    };\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n    if (_proxyFormState.isDirty) {\n      const isPreviousFormDirty = _formState.isDirty;\n      _formState.isDirty = output.isDirty = _getDirty();\n      isFieldDirty = isPreviousFormDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && (!isBlurEvent || shouldDirty)) {\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n      isCurrentFieldPristine ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      isFieldDirty = isFieldDirty || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n    }\n\n    if (isBlurEvent && !isPreviousFieldTouched) {\n      set(_formState.touchedFields, name, isBlurEvent);\n      output.touchedFields = _formState.touchedFields;\n      isFieldDirty = isFieldDirty || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent;\n    }\n\n    isFieldDirty && shouldRender && _subjects.state.next(output);\n    return isFieldDirty ? output : {};\n  };\n\n  const shouldRenderByError = async (name, isValid, error, fieldState) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid = _proxyFormState.isValid && _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n    }\n\n    if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {\n      const updatedFormState = { ...fieldState,\n        ...(shouldUpdateValid ? {\n          isValid\n        } : {}),\n        errors: _formState.errors,\n        name\n      };\n      _formState = { ..._formState,\n        ...updatedFormState\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (_proxyFormState.isValidating && !Object.values(validateFields).some(v => v)) {\n      _subjects.state.next({\n        isValidating: false\n      });\n\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async name => _options.resolver ? await _options.resolver({ ..._formValues\n  }, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation)) : {};\n\n  const executeSchemaAndUpdateState = async names => {\n    const {\n      errors\n    } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuildInValidation = async function (fields, shouldOnlyCheckValid) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      valid: true\n    };\n\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const {\n          _f: fieldReference,\n          ...fieldValue\n        } = field;\n\n        if (fieldReference) {\n          const fieldError = await validateField(field, get(_formValues, fieldReference.name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation);\n\n          if (fieldError[fieldReference.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          if (!shouldOnlyCheckValid) {\n            fieldError[fieldReference.name] ? set(_formState.errors, fieldReference.name, fieldError[fieldReference.name]) : unset(_formState.errors, fieldReference.name);\n          }\n        }\n\n        fieldValue && (await executeBuildInValidation(fieldValue, shouldOnlyCheckValid, context));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field = get(_fields, name);\n      field && (field._f.refs ? field._f.refs.every(ref => !live(ref)) : !live(field._f.ref)) && unregister(name);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty = (name, data) => (name && data && set(_formValues, name, data), !deepEqual(getValues(), _defaultValues));\n\n  const _getWatch = (names, defaultValue, isGlobal) => {\n    const fieldValues = { ...(_stateFlags.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? {\n        [names]: defaultValue\n      } : defaultValue)\n    };\n    return generateWatchOutput(names, _names, fieldValues, isGlobal);\n  };\n\n  const _getFieldArray = name => compact(get(_stateFlags.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n\n  const setFieldValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n    let fieldValue = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled && set(_formValues, name, getFieldValueAs(value, fieldReference));\n        fieldValue = isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? '' : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(selectRef => selectRef.selected = fieldValue.includes(selectRef.value));\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1 ? fieldReference.refs.forEach(checkboxRef => !checkboxRef.disabled && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find(data => data === checkboxRef.value) : fieldValue === checkboxRef.value)) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(radioRef => radioRef.checked = radioRef.value === fieldValue);\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.watch.next({\n              name\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n    options.shouldValidate && trigger(name);\n  };\n\n  const setValues = (name, value, options) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n\n    const isFieldArray = _names.array.has(name);\n\n    const cloneValue = cloneObject(value);\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues\n      });\n\n      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, cloneValue)\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({});\n\n    _subjects.watch.next({\n      name\n    });\n  };\n\n  const onChange = async event => {\n    const target = event.target;\n    let name = target.name;\n    const field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type ? getFieldValue(field._f) : getEventValue(event);\n      const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n      const watched = isWatched(name, _names, isBlurEvent);\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n      !isBlurEvent && _subjects.watch.next({\n        name,\n        type: event.type\n      });\n\n      if (shouldSkipValidation) {\n        return shouldRender && _subjects.state.next({\n          name,\n          ...(watched ? {} : fieldState)\n        });\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({});\n      validateFields[name] = validateFields[name] ? +1 : 1;\n\n      _subjects.state.next({\n        isValidating: true\n      });\n\n      if (_options.resolver) {\n        const {\n          errors\n        } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n        const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (await validateField(field, get(_formValues, name), shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n        isValid = await _updateValid(true);\n      }\n\n      field._f.deps && trigger(field._f.deps);\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger = async function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name);\n\n    _subjects.state.next({\n      isValidating: true\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n      isValid = isEmptyObject(errors);\n      validationResult = name ? !fieldNames.some(name => get(errors, name)) : isValid;\n    } else if (name) {\n      validationResult = (await Promise.all(fieldNames.map(async fieldName => {\n        const field = get(_fields, fieldName);\n        return await executeBuildInValidation(field && field._f ? {\n          [fieldName]: field\n        } : field);\n      }))).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuildInValidation(_fields);\n    }\n\n    _subjects.state.next({ ...(!isString(name) || _proxyFormState.isValid && isValid !== _formState.isValid ? {} : {\n        name\n      }),\n      ...(_options.resolver ? {\n        isValid\n      } : {}),\n      errors: _formState.errors,\n      isValidating: false\n    });\n\n    options.shouldFocus && !validationResult && focusFieldBy(_fields, key => get(_formState.errors, key), name ? fieldNames : _names.mount);\n    return validationResult;\n  };\n\n  const getValues = fieldNames => {\n    const values = { ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {})\n    };\n    return isUndefined(fieldNames) ? values : isString(fieldNames) ? get(values, fieldNames) : fieldNames.map(name => get(values, name));\n  };\n\n  const getFieldState = (name, formState) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name)\n  });\n\n  const clearErrors = name => {\n    name ? convertToArrayPayload(name).forEach(inputName => unset(_formState.errors, inputName)) : _formState.errors = {};\n\n    _subjects.state.next({\n      errors: _formState.errors\n    });\n  };\n\n  const setError = (name, error, options) => {\n    const ref = (get(_fields, name, {\n      _f: {}\n    })._f || {}).ref;\n    set(_formState.errors, name, { ...error,\n      ref\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch = (name, defaultValue) => isFunction(name) ? _subjects.watch.subscribe({\n    next: info => name(_getWatch(undefined, defaultValue), info)\n  }) : _getWatch(name, defaultValue, true);\n\n  const unregister = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({ ..._formState,\n      ...(!options.keepDirty ? {} : {\n        isDirty: _getDirty()\n      })\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n    set(_fields, name, {\n      _f: { ...(field && field._f ? field._f : {\n          ref: {\n            name\n          }\n        }),\n        name,\n        mount: true,\n        ...options\n      }\n    });\n\n    _names.mount.add(name);\n\n    field ? disabledIsDefined && set(_formValues, name, options.disabled ? undefined : get(_formValues, name, getFieldValue(field._f))) : updateValidAndValue(name, true, options.value);\n    return { ...(disabledIsDefined ? {\n        disabled: options.disabled\n      } : {}),\n      ...(_options.shouldUseNativeValidation ? {\n        required: !!options.required,\n        min: getRuleValue(options.min),\n        max: getRuleValue(options.max),\n        minLength: getRuleValue(options.minLength),\n        maxLength: getRuleValue(options.maxLength),\n        pattern: getRuleValue(options.pattern)\n      } : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: ref => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n          const fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll('input,select,textarea')[0] || ref : ref : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (radioOrCheckbox ? refs.find(option => option === fieldRef) : fieldRef === field._f.ref) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: { ...field._f,\n              ...(radioOrCheckbox ? {\n                refs: [...refs.filter(live), fieldRef, ...(!!Array.isArray(get(_defaultValues, name)) ? [{}] : [])],\n                ref: {\n                  type: fieldRef.type,\n                  name\n                }\n              } : {\n                ref: fieldRef\n              })\n            }\n          });\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _stateFlags.action) && _names.unMount.add(name);\n        }\n      }\n    };\n  };\n\n  const handleSubmit = (onValid, onInvalid) => async e => {\n    if (e) {\n      e.preventDefault && e.preventDefault();\n      e.persist && e.persist();\n    }\n\n    let hasNoPromiseError = true;\n    let fieldValues = cloneObject(_formValues);\n\n    _subjects.state.next({\n      isSubmitting: true\n    });\n\n    try {\n      if (_options.resolver) {\n        const {\n          errors,\n          values\n        } = await _executeSchema();\n        _formState.errors = errors;\n        fieldValues = values;\n      } else {\n        await executeBuildInValidation(_fields);\n      }\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n          isSubmitting: true\n        });\n\n        await onValid(fieldValues, e);\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors\n          }, e);\n        }\n\n        _options.shouldFocusError && focusFieldBy(_fields, key => get(_formState.errors, key), _names.mount);\n      }\n    } catch (err) {\n      hasNoPromiseError = false;\n      throw err;\n    } finally {\n      _formState.isSubmitted = true;\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors\n      });\n    }\n  };\n\n  const resetField = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue ? _getDirty(name, get(_defaultValues, name)) : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState\n      });\n    }\n  };\n\n  const reset = function (formValues) {\n    let keepStateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values = formValues && !isEmptyObject(formValues) ? cloneUpdatedValues : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName) ? set(values, fieldName, get(_formValues, fieldName)) : setValue(fieldName, get(values, fieldName));\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;\n\n              try {\n                isHTMLElement(fieldReference) && fieldReference.closest('form').reset();\n                break;\n              } catch (_a) {}\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values\n      });\n\n      _subjects.watch.next({\n        values\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: ''\n    };\n    _stateFlags.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _stateFlags.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,\n      isDirty: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual(formValues, _defaultValues)),\n      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,\n      dirtyFields: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},\n      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n\n  const setFocus = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    const field = get(_fields, name)._f;\n\n    const fieldRef = field.refs ? field.refs[0] : field.ref;\n    fieldRef.focus();\n    options.shouldSelect && fieldRef.select();\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n\n      get _fields() {\n        return _fields;\n      },\n\n      get _formValues() {\n        return _formValues;\n      },\n\n      get _stateFlags() {\n        return _stateFlags;\n      },\n\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n\n      get _defaultValues() {\n        return _defaultValues;\n      },\n\n      get _names() {\n        return _names;\n      },\n\n      set _names(value) {\n        _names = value;\n      },\n\n      get _formState() {\n        return _formState;\n      },\n\n      set _formState(value) {\n        _formState = value;\n      },\n\n      get _options() {\n        return _options;\n      },\n\n      set _options(value) {\n        _options = { ..._options,\n          ...value\n        };\n      }\n\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState\n  };\n}\n/**\r\n * Custom hook to mange the entire form.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\r\n *\r\n * @param props - form configuration and validation parameters.\r\n *\r\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   console.log(watch(\"example\"));\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input defaultValue=\"test\" {...register(\"example\")} />\r\n *       <input {...register(\"exampleRequired\", { required: true })} />\r\n *       {errors.exampleRequired && <span>This field is required</span>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\n\n\nfunction useForm() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const _formControl = React__default[\"default\"].useRef();\n\n  const [formState, updateFormState] = React__default[\"default\"].useState({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {}\n  });\n\n  if (_formControl.current) {\n    _formControl.current.control._options = props;\n  } else {\n    _formControl.current = { ...createFormControl(props),\n      formState\n    };\n  }\n\n  const control = _formControl.current.control;\n  const callback = React__default[\"default\"].useCallback(value => {\n    if (shouldRenderFormState(value, control._proxyFormState, true)) {\n      control._formState = { ...control._formState,\n        ...value\n      };\n      updateFormState({ ...control._formState\n      });\n    }\n  }, [control]);\n  useSubscribe({\n    subject: control._subjects.state,\n    callback\n  });\n  React__default[\"default\"].useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n\n      control._subjects.state.next({});\n    }\n\n    control._removeUnmounted();\n  });\n  _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n  return _formControl.current;\n}\n\nvar colors = {\n  primary: '#0e101c',\n  secondary: '#bf1650',\n  lightBlue: '#516391',\n  blue: '#1e2a4a',\n  lightPink: '#ec5990',\n  errorPink: '#fbecf2',\n  buttonBlue: '#191d3a',\n  link: '#ff7aa8',\n  green: '#1bda2b'\n};\nconst paraGraphDefaultStyle = {\n  fontSize: 13,\n  lineHeight: '20px'\n};\nconst Button = styled__default[\"default\"].button`\n  appearance: none;\n  margin: 0;\n  border: 0;\n  color: white;\n  padding: 5px !important;\n  border-radius: 0 !important;\n  background: ${props => props.hideBackground ? `` : `${colors.blue} !important`};\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`;\nButton.defaultProps = {\n  type: 'button'\n};\nconst CircleButton = styled__default[\"default\"](Button)`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 4px 0 auto;\n  background: none !important;\n  display: flex;\n  width: 25px;\n  height: 25px;\n  justify-content: center;\n  line-height: 14px !important;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n\n  &:active {\n    background: black;\n  }\n`;\nconst Input = styled__default[\"default\"].input`\n  &::placeholder {\n    color: #b3b3b3;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n`;\nconst Table = styled__default[\"default\"].table`\n  transition: 0.3s all;\n\n  &:hover {\n    background: ${colors.primary};\n  }\n`;\n\nconst Header = _ref3 => {\n  let {\n    setVisible,\n    control\n  } = _ref3;\n  const {\n    isValid\n  } = useFormState({\n    control\n  });\n  return React__namespace.createElement(\"header\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: 10,\n      backgroundColor: 'transparent'\n    }\n  }, React__namespace.createElement(\"p\", {\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0,\n      fontWeight: 400,\n      fontSize: 12\n    })\n  }, React__namespace.createElement(\"span\", {\n    style: {\n      transition: '0.5s all',\n      color: isValid ? colors.green : colors.lightPink\n    }\n  }, \"\\u25A0\"), ' ', \"React Hook Form\"), React__namespace.createElement(CircleButton, {\n    title: \"Close dev panel\",\n    onClick: () => setVisible(false)\n  }, \"\\u2715\"));\n};\n\nconst PanelTable = _ref4 => {\n  let {\n    refObject,\n    hasError,\n    isDirty,\n    fieldsValues,\n    isNative,\n    errorMessage,\n    errorType,\n    type,\n    isTouched,\n    name,\n    collapseAll\n  } = _ref4;\n  const [collapse, setCollapse] = React__namespace.useState(false);\n  React__namespace.useEffect(() => {\n    setCollapse(!collapseAll);\n  }, [collapseAll]);\n  let value = fieldsValues ? get(fieldsValues, name) : '';\n  let isValueWrappedInPre = false;\n\n  if (!isUndefined__default[\"default\"](value)) {\n    if (isObject__default[\"default\"](value)) {\n      try {\n        value = React__namespace.createElement(\"pre\", {\n          style: {\n            margin: 0\n          }\n        }, React__namespace.createElement(\"code\", {\n          style: {\n            fontSize: 12\n          }\n        }, JSON.stringify(value, null, 2)));\n        isValueWrappedInPre = true;\n      } catch (_a) {\n        value = React__namespace.createElement(\"span\", null, \"[Nested Object]\");\n      }\n    } else if (typeof value !== 'string') {\n      value = String(value);\n    }\n  }\n\n  return React__namespace.createElement(Table, {\n    style: {\n      padding: '5px 8px',\n      width: '100%',\n      transition: '.3s all',\n      borderLeft: `2px solid ${hasError ? colors.secondary : colors.buttonBlue}`,\n      background: 'none'\n    }\n  }, React__namespace.createElement(\"thead\", null, React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    valign: \"top\",\n    style: {\n      width: 85,\n      lineHeight: '22px'\n    }\n  }, React__namespace.createElement(Button, {\n    onClick: () => setCollapse(!collapse),\n    title: \"Toggle field table\",\n    style: {\n      border: `1px solid ${colors.lightBlue}`,\n      borderRadius: 2,\n      padding: '3px 5px',\n      display: 'inline-block',\n      fontSize: 9,\n      lineHeight: '13px',\n      width: 20,\n      textAlign: 'center',\n      marginRight: 8\n    }\n  }, collapse ? '+' : '-'), React__namespace.createElement(Button, {\n    onClick: () => {\n      if (refObject.scrollIntoView) {\n        refObject.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    },\n    title: \"Scroll into view\",\n    style: Object.assign({\n      border: `1px solid ${colors.lightBlue}`,\n      borderRadius: 2,\n      padding: '3px 5px',\n      display: 'inline-block',\n      fontSize: 9,\n      lineHeight: '13px',\n      textAlign: 'center',\n      width: 'calc(100% - 30px)'\n    }, isNative ? {} : {\n      cursor: 'not-allowed',\n      background: colors.lightBlue\n    })\n  }, isNative ? 'Native' : 'Custom')), React__namespace.createElement(\"td\", {\n    style: {\n      display: 'block',\n      maxWidth: 140\n    }\n  }, React__namespace.createElement(\"p\", {\n    style: Object.assign(Object.assign({\n      margin: 0,\n      padding: 0,\n      top: 0,\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }, paraGraphDefaultStyle), {\n      lineHeight: '24px'\n    }),\n    title: name\n  }, name)))), !collapse && React__namespace.createElement(\"tbody\", null, type && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Type:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, type)), errorType && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"ERROR Type:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, errorType)), errorMessage && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"MESSAGE:\"), React__namespace.createElement(\"td\", {\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, typeof errorMessage === 'string' ? errorMessage.trim() : JSON.stringify(errorMessage))), !isUndefined__default[\"default\"](value) && React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Value:\"), React__namespace.createElement(\"td\", {\n    \"data-testid\": `${name}-field-value`,\n    style: Object.assign({\n      display: 'block',\n      maxWidth: 100\n    }, paraGraphDefaultStyle)\n  }, !isValueWrappedInPre && React__namespace.createElement(\"p\", {\n    title: value,\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0\n    })\n  }, value), isValueWrappedInPre && React__namespace.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, paraGraphDefaultStyle), {\n      margin: 0,\n      padding: 0\n    })\n  }, value))), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Touched:\"), React__namespace.createElement(\"td\", null, React__namespace.createElement(\"code\", {\n    style: Object.assign(Object.assign({\n      color: isTouched ? colors.green : colors.lightPink\n    }, paraGraphDefaultStyle), {\n      fontSize: 12\n    })\n  }, isTouched ? 'true' : 'false'))), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n    align: \"right\",\n    style: Object.assign({\n      paddingRight: 5,\n      fontWeight: 500,\n      verticalAlign: 'top'\n    }, paraGraphDefaultStyle)\n  }, \"Dirty:\"), React__namespace.createElement(\"td\", null, React__namespace.createElement(\"code\", {\n    style: Object.assign(Object.assign({\n      color: isDirty ? colors.green : colors.lightPink\n    }, paraGraphDefaultStyle), {\n      fontSize: 12\n    })\n  }, isDirty ? 'true' : 'false')))));\n};\n\nconst FormStateTable = _ref5 => {\n  let {\n    formState,\n    showFormState,\n    setShowFormState\n  } = _ref5;\n  return React__namespace.createElement(\"div\", {\n    style: {\n      alignSelf: 'end'\n    }\n  }, React__namespace.createElement(reactSimpleAnimate.Animate, {\n    play: showFormState,\n    start: {\n      opacity: 0\n    },\n    end: {\n      opacity: 1\n    },\n    render: _ref6 => {\n      let {\n        style\n      } = _ref6;\n      return React__namespace.createElement(\"table\", {\n        style: Object.assign({\n          padding: '5px 10px',\n          display: 'block',\n          background: 'black',\n          borderTop: `1px solid ${colors.lightPink}`,\n          pointerEvents: 'none'\n        }, style)\n      }, React__namespace.createElement(\"tbody\", null, React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({\n          width: 90\n        }, paraGraphDefaultStyle)\n      }, \"Valid:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isValid ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isValid ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Dirty:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isDirty ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isDirty ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Submitted:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isSubmitted ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isSubmitted ? 'true' : 'false')), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Count:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.submitCount ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.submitCount)), React__namespace.createElement(\"tr\", null, React__namespace.createElement(\"td\", {\n        align: \"right\",\n        style: Object.assign({}, paraGraphDefaultStyle)\n      }, \"Submitting:\"), React__namespace.createElement(\"td\", {\n        style: Object.assign({\n          color: formState.isSubmitting ? colors.green : colors.lightPink\n        }, paraGraphDefaultStyle)\n      }, formState.isSubmitting ? 'true' : 'false'))));\n    }\n  }), React__namespace.createElement(Button, {\n    style: {\n      margin: 0,\n      width: '100%',\n      padding: '8px 10px',\n      textTransform: 'none',\n      fontSize: 12,\n      lineHeight: '14px',\n      cursor: 'pointer'\n    },\n    title: \"Toggle form state panel\",\n    onClick: () => {\n      setShowFormState(!showFormState);\n    }\n  }, React__namespace.createElement(\"span\", {\n    style: {\n      transition: '0.5s all',\n      color: formState.isValid ? colors.green : colors.lightPink\n    }\n  }, \"\\u25A0\"), ' ', \"Form State: \", showFormState ? 'OFF' : 'ON'));\n};\n\nfunction setVisible(state, payload) {\n  return Object.assign(Object.assign({}, state), {\n    visible: payload\n  });\n}\n\nfunction setCollapse(state, payload) {\n  return Object.assign(Object.assign({}, state), {\n    isCollapse: payload\n  });\n}\n\nlet childIndex = 0;\n\nfunction PanelChildren(_ref7) {\n  let {\n    fields,\n    searchTerm,\n    touchedFields,\n    errors,\n    dirtyFields,\n    state,\n    fieldsValues\n  } = _ref7;\n  return React__namespace.createElement(React__namespace.Fragment, null, fields && Object.entries(fields).filter(_ref8 => {\n    let [name] = _ref8;\n    return (name && name.toLowerCase && name.toLowerCase().includes(searchTerm) || !name && !searchTerm || searchTerm === '') && name;\n  }).map((_ref9, index) => {\n    let [name, value] = _ref9;\n    childIndex++;\n\n    if (!(value === null || value === void 0 ? void 0 : value._f)) {\n      return React__namespace.createElement(PanelChildren, Object.assign({\n        key: name + childIndex\n      }, {\n        fields: value,\n        searchTerm,\n        touchedFields,\n        errors,\n        dirtyFields,\n        state,\n        fieldsValues\n      }));\n    } else {\n      const error = get(errors, value._f.name);\n      const errorMessage = get(error, 'message', undefined);\n      const errorType = get(error, 'type', undefined);\n      const type = get(value, 'ref.type', undefined);\n      const isTouched = !!get(touchedFields, value._f.name);\n      const isNative = !!(value && value._f.ref.type);\n      const isDirty = !!get(dirtyFields, value._f.name);\n      const hasError = !!error;\n      const ref = get(value, '_f.ref');\n      return React__namespace.createElement(\"section\", {\n        key: (value === null || value === void 0 ? void 0 : value._f.name) + childIndex,\n        style: {\n          borderBottom: `1px dashed ${colors.secondary}`,\n          margin: 0\n        }\n      }, React__namespace.createElement(PanelTable, {\n        refObject: ref,\n        index: index,\n        collapseAll: state.isCollapse,\n        name: value === null || value === void 0 ? void 0 : value._f.name,\n        isTouched: isTouched,\n        type: type,\n        hasError: hasError,\n        isNative: isNative,\n        errorMessage: errorMessage,\n        errorType: errorType,\n        isDirty: isDirty,\n        fieldsValues: fieldsValues\n      }));\n    }\n  }));\n}\n\nconst Panel = _ref10 => {\n  let {\n    control,\n    control: {\n      _fields\n    }\n  } = _ref10;\n  const formState = useFormState({\n    control\n  });\n  const {\n    dirtyFields,\n    touchedFields,\n    errors\n  } = formState;\n  formState.isDirty;\n  const {\n    state,\n    actions\n  } = littleStateMachine.useStateMachine({\n    setCollapse\n  });\n  const [, setData] = React__namespace.useState({});\n  const [showFormState, setShowFormState] = React__namespace.useState(false);\n  const fieldsValues = useWatch({\n    control\n  });\n  const {\n    register,\n    watch\n  } = useForm();\n  const searchTerm = watch('search', '');\n  React.useEffect(() => {\n    setData({});\n  }, []);\n  return React__namespace.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateRows: '56px auto',\n      height: 'calc(100vh - 40px)'\n    }\n  }, React__namespace.createElement(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: `1fr 1fr`,\n      gridTemplateRows: '28px 28px'\n    }\n  }, React__namespace.createElement(Button, {\n    style: {\n      borderRight: `1px solid ${colors.primary}`,\n      textTransform: 'none',\n      fontSize: 11,\n      lineHeight: 1\n    },\n    title: \"Update values and state the form\",\n    onClick: () => setData({})\n  }, \"\\u267A REFRESH\"), React__namespace.createElement(Button, {\n    style: {\n      borderRight: `1px solid ${colors.primary}`,\n      textTransform: 'none',\n      fontSize: 11,\n      lineHeight: 1\n    },\n    title: \"Toggle entire fields\",\n    onClick: () => {\n      actions.setCollapse(!state.isCollapse);\n    }\n  }, state.isCollapse ? '[-] COLLAPSE' : '[+] EXPAND'), React__namespace.createElement(Input, Object.assign({\n    style: {\n      display: 'inline-block',\n      borderRadius: 0,\n      width: '100%',\n      margin: 0,\n      padding: '5px 10px',\n      WebkitAppearance: 'none',\n      appearance: 'none',\n      fontSize: 14,\n      border: 0,\n      color: 'white',\n      gridColumnStart: 1,\n      gridColumnEnd: 4,\n      background: 'black'\n    }\n  }, register('search'), {\n    placeholder: \"Filter name...\",\n    type: \"search\"\n  }))), React__namespace.createElement(\"div\", {\n    style: {\n      overflow: 'auto'\n    }\n  }, React__namespace.createElement(PanelChildren, {\n    fields: _fields,\n    searchTerm: searchTerm,\n    errors: errors,\n    touchedFields: touchedFields,\n    dirtyFields: dirtyFields,\n    fieldsValues: fieldsValues,\n    state: state\n  })), React__namespace.createElement(FormStateTable, {\n    formState: formState,\n    showFormState: showFormState,\n    setShowFormState: setShowFormState\n  }));\n};\n\nconst Logo = _ref11 => {\n  let {\n    style,\n    actions\n  } = _ref11;\n  return React__namespace.createElement(\"svg\", {\n    fill: \"white\",\n    viewBox: \"0 0 100 100\",\n    style: Object.assign({\n      height: 14,\n      padding: 3,\n      borderRadius: 2,\n      background: colors.lightPink\n    }, style),\n    onClick: () => {\n      actions.setVisible(true);\n    },\n    \"aria-label\": \"React Hook Form Logo\"\n  }, React__namespace.createElement(\"path\", {\n    d: \"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\"\n  }), React__namespace.createElement(\"path\", {\n    style: {\n      transform: 'translateX(-25px)'\n    },\n    d: \"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    d: \"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    style: {\n      transform: 'translateX(-25px)'\n    },\n    d: \"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n  }), React__namespace.createElement(\"path\", {\n    d: \"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n  }));\n};\n\nfunction getPositionByPlacement(placement) {\n  let defaultX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let defaultY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const [x, y] = placement.split('-');\n  return {\n    [x]: defaultX,\n    [y]: defaultY\n  };\n}\n\nconst DevToolUI = _ref12 => {\n  let {\n    control,\n    placement = 'top-right'\n  } = _ref12;\n  const {\n    state,\n    actions\n  } = littleStateMachine.useStateMachine({\n    setVisible\n  });\n  const position = getPositionByPlacement(placement, 0, 0);\n  return React__namespace.createElement(React__namespace.Fragment, null, React__namespace.createElement(reactSimpleAnimate.Animate, {\n    play: state.visible,\n    duration: 0.2,\n    start: Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      transform: placement.includes('right') ? 'translateX(280px)' : 'translateX(-280px)',\n      zIndex: 99999\n    }),\n    end: Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      transform: 'translateX(0)',\n      zIndex: 99999\n    })\n  }, React__namespace.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, position), {\n      position: 'fixed',\n      height: '100vh',\n      width: 250,\n      zIndex: 99999,\n      background: colors.buttonBlue,\n      display: 'grid',\n      textAlign: 'left',\n      color: 'white',\n      fontSize: 14,\n      gridTemplateRows: '40px auto',\n      fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\"\n    })\n  }, React__namespace.createElement(Header, {\n    setVisible: actions.setVisible,\n    control: control\n  }), React__namespace.createElement(Panel, {\n    control: control\n  }))), !state.visible && React__namespace.createElement(Button, {\n    title: \"Show dev panel\",\n    hideBackground: true,\n    style: Object.assign(Object.assign({\n      position: 'fixed',\n      zIndex: 99999\n    }, getPositionByPlacement(placement, 3, 3)), {\n      padding: 3,\n      margin: 0,\n      background: 'none'\n    })\n  }, React__namespace.createElement(Logo, {\n    actions: actions\n  })));\n};\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction proxyToObject(proxy) {\n  return Reflect.ownKeys(proxy).reduce((perv, key) => {\n    perv[key] = proxy[key];\n    return perv;\n  }, {});\n}\n\nfunction nestToFlat(flatKeys, obj, defaultValue) {\n  return flatKeys.reduce((perv, name) => {\n    // nested field may be `undefined`\n    perv[name] = ___default[\"default\"].get(obj, name) || defaultValue;\n    return perv;\n  }, {});\n}\n\nconst id = uuid.v4();\n\nfunction useExportControlToExtension(control) {\n  const nestedFormValues = useWatch({\n    control\n  });\n  const formState = useFormState({\n    control\n  });\n  const [isExtensionEnabled, setIsExtensionEnabled] = React.useState(false);\n\n  const handleInitMessage = message => {\n    if (message.data.source !== 'react-hook-form-bridge' || message.data.type !== 'INIT') {\n      return;\n    }\n\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'WELCOME'\n    });\n    setIsExtensionEnabled(true);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('message', handleInitMessage);\n    return () => window.removeEventListener('message', handleInitMessage);\n  }, []);\n  useDeepCompareEffect__default[\"default\"](() => {\n    if (!isExtensionEnabled) {\n      return;\n    }\n\n    const _a = proxyToObject(formState),\n          {\n      errors: nestedErrors,\n      dirtyFields: nestedDirtyFields,\n      touchedFields: nestedTouchedFields\n    } = _a,\n          formStatus = __rest(_a, [\"errors\", \"dirtyFields\", \"touchedFields\"]);\n\n    const flatFieldNames = [...control._names.mount];\n    const formValues = nestToFlat(flatFieldNames, nestedFormValues, '');\n    const dirtyFields = nestToFlat(flatFieldNames, nestedDirtyFields, false);\n    const touchedFields = nestToFlat(flatFieldNames, nestedTouchedFields, false);\n    const flatErrors = nestToFlat(flatFieldNames, nestedErrors);\n    const errors = Object.entries(flatErrors).reduce((perv, _ref13) => {\n      let [key, value] = _ref13;\n      perv[key] = {\n        type: value === null || value === void 0 ? void 0 : value.type,\n        message: value === null || value === void 0 ? void 0 : value.message\n      };\n      return perv;\n    }, {});\n    const nativeFields = flatFieldNames.reduce((perv, name) => {\n      var _a, _b, _c;\n\n      perv[name] = !!((_c = (_b = (_a = ___default[\"default\"].get(control._fields, name)) === null || _a === void 0 ? void 0 : _a._f) === null || _b === void 0 ? void 0 : _b.ref) === null || _c === void 0 ? void 0 : _c.type);\n      return perv;\n    }, {});\n    const updateMessagePayload = {\n      id,\n      data: {\n        formValues,\n        formState: Object.assign({\n          errors,\n          dirtyFields,\n          touchedFields,\n          nativeFields\n        }, formStatus)\n      }\n    };\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'UPDATE',\n      payload: updateMessagePayload\n    });\n  }, [isExtensionEnabled, nestedFormValues, proxyToObject(formState)]);\n  return {\n    isExtensionEnabled\n  };\n}\n\nif (typeof window !== 'undefined') {\n  littleStateMachine.createStore({\n    visible: false,\n    isCollapse: false,\n    filterName: ''\n  }, {\n    name: '__REACT_HOOK_FORM_DEVTOOLS__',\n    middleWares: [],\n    storageType: window.localStorage\n  });\n}\n\nconst DevTool = props => {\n  var _a, _b;\n\n  const methods = useFormContext();\n  const {\n    isExtensionEnabled\n  } = useExportControlToExtension((_a = props === null || props === void 0 ? void 0 : props.control) !== null && _a !== void 0 ? _a : methods.control);\n\n  if (isExtensionEnabled) {\n    return null;\n  }\n\n  return React__namespace.createElement(littleStateMachine.StateMachineProvider, null, React__namespace.createElement(DevToolUI, {\n    control: (_b = props === null || props === void 0 ? void 0 : props.control) !== null && _b !== void 0 ? _b : methods.control,\n    placement: props === null || props === void 0 ? void 0 : props.placement\n  }));\n};\n\nexports.DevTool = DevTool;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,sBAAgBA,OAAD,IACbA,OAAO,CAACC,IAAR,KAAiB,UADnB;;ACFA,mBAAgBC,KAAD,IAAmCA,KAAK,YAAYC,IAAnE;;ACAA,wBAAgBD,KAAD,IAA+CA,KAAK,IAAI,IAAvE;;ACGO,MAAME,YAAY,GAAIF,KAAD,IAAoB,OAAOA,KAAP,KAAiB,QAA1D;;AAEP,eAAkCA,KAAnB,IACb,CAACG,iBAAiB,CAACH,KAAD,CAAlB,IACA,CAACI,KAAK,CAACC,OAAN,CAAcL,KAAd,CADD,IAEAE,YAAY,CAACF,KAAD,CAFZ,IAGA,CAACM,YAAY,CAACN,KAAD,CAJf;;ACAA,IAAeO,gBAACC,KAAD,IACbC,QAAQ,CAACD,KAAD,CAAR,IAAoBA,KAAe,CAACE,MAApC,GACIC,eAAe,CAAEH,KAAe,CAACE,MAAlB,CAAf,GACGF,KAAe,CAACE,MAAhB,CAAuBE,OAD1B,GAEGJ,KAAe,CAACE,MAAhB,CAAuBV,KAH9B,GAIIQ,KALN;;ACLA,wBAAgBK,IAAD,IACbA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkBD,IAAI,CAACE,MAAL,CAAY,aAAZ,CAAlB,KAAiDF,IADnD;;ACIA,yBAAe,CAACG,KAAD,EAAgCH,IAAhC,KACbG,KAAK,CAACC,GAAN,CAAUC,iBAAiB,CAACL,IAAD,CAA3B,CADF;;ACJA,cAAwBb,KAAT,IACbI,KAAK,CAACC,OAAN,CAAcL,KAAd,IAAuBA,KAAK,CAACmB,MAAN,CAAaC,OAAb,CAAvB,GAA+C,EADjD;;ACAA,kBAAgBC,GAAD,IAAoCA,GAAG,KAAKC,SAA3D;;ACKA,UAAe,CAAIC,GAAJ,EAAYC,IAAZ,EAA0BC,YAA1B,KAAyD;EACtE,IAAI,CAACD,IAAD,IAAS,CAACf,QAAQ,CAACc,GAAD,CAAtB,EAA6B;IAC3B,OAAOE,YAAP;EACD;;EAED,MAAMC,MAAM,GAAGC,OAAO,CAACH,IAAI,CAACI,KAAL,CAAW,WAAX,CAAD,CAAP,CAAiCC,MAAjC,CACb,CAACH,MAAD,EAASI,GAAT,KACE3B,iBAAiB,CAACuB,MAAD,CAAjB,GAA4BA,MAA5B,GAAqCA,MAAM,CAACI,GAAD,CAFhC,EAGbP,GAHa,CAAf;EAMA,OAAOQ,WAAW,CAACL,MAAD,CAAX,IAAuBA,MAAM,KAAKH,GAAlC,GACHQ,WAAW,CAACR,GAAG,CAACC,IAAD,CAAJ,CAAX,GACEC,YADF,GAEEF,GAAG,CAACC,IAAD,CAHF,GAIHE,MAJJ;AAKD,CAhBD;;ACHO,MAAMM,MAAM,GAAG;EACpBC,IAAI,EAAE,MADc;EAEpBC,SAAS,EAAE,UAFS;EAGpBC,MAAM,EAAE;AAHY,CAAf;AAMA,MAAMC,eAAe,GAAmB;EAC7CC,MAAM,EAAE,QADqC;EAE7CC,QAAQ,EAAE,UAFmC;EAG7CC,QAAQ,EAAE,UAHmC;EAI7CC,SAAS,EAAE,WAJkC;EAK7CC,GAAG,EAAE;AALwC,CAAxC;AAQA,MAAMC,sBAAsB,GAAG;EACpCC,GAAG,EAAE,KAD+B;EAEpCC,GAAG,EAAE,KAF+B;EAGpCC,SAAS,EAAE,WAHyB;EAIpCC,SAAS,EAAE,WAJyB;EAKpCC,OAAO,EAAE,SAL2B;EAMpCC,QAAQ,EAAE,UAN0B;EAOpCC,QAAQ,EAAE;AAP0B,CAA/B;ACZP,MAAMC,eAAe,GAAGC,0BAAMC,aAAND,CAA0C,IAA1CA,CAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BG;;AACI,MAAME,cAAc,GAAG,MAG5BF,0BAAMG,UAANH,CAAiBD,eAAjBC,CAHK;;ACjCP,IAAeI,8BACbC,SADa,EAEbC,eAFa,EAGbC,mBAHa,EAKX;EAAA,IADFC,MACE,uEADO,IACP;EACF,MAAMjC,MAAM,GAAG,EAAf;;EAEA,KAAK,MAAMI,GAAX,IAAkB0B,SAAlB,EAA6B;IAC3BI,MAAM,CAACC,cAAP,CAAsBnC,MAAtB,EAA8BI,GAA9B,EAAmC;MACjCgC,GAAG,EAAE,MAAK;QACR,MAAMC,IAAI,GAAGjC,GAAb;;QAEA,IAAI2B,eAAe,CAACM,IAAD,CAAf,KAA0B3B,eAAe,CAACK,GAA9C,EAAmD;UACjDgB,eAAe,CAACM,IAAD,CAAf,GAAwB,CAACJ,MAAD,IAAWvB,eAAe,CAACK,GAAnD;QACD;;QAEDiB,mBAAmB,KAAKA,mBAAmB,CAACK,IAAD,CAAnB,GAA4B,IAAjC,CAAnB;QACA,OAAOP,SAAS,CAACO,IAAD,CAAhB;MACD;IAVgC,CAAnC;EAYD;;EAED,OAAOrC,MAAP;AACD,CAxBD;;ACCA,oBAAgB1B,KAAD,IACbS,QAAQ,CAACT,KAAD,CAAR,IAAmB,CAAC4D,MAAM,CAACI,IAAP,CAAYhE,KAAZ,EAAmBiE,MADzC;;ACAA,4BAAe,CACbC,aADa,EAEbT,eAFa,EAGbE,MAHa,KAIX;EACF,MAAM;IAAE9C,IAAF;IAAQ,GAAG2C;EAAX,IAAyBU,aAA/B;EAEA,OACEC,aAAa,CAACX,SAAD,CAAb,IACAI,MAAM,CAACI,IAAP,CAAYR,SAAZ,EAAuBS,MAAvB,IAAiCL,MAAM,CAACI,IAAP,CAAYP,eAAZ,EAA6BQ,MAD9D,IAEAL,MAAM,CAACI,IAAP,CAAYR,SAAZ,EAAuBY,IAAvB,CACGtC,GAAD,IACE2B,eAAe,CAAC3B,GAAD,CAAf,MACC,CAAC6B,MAAD,IAAWvB,eAAe,CAACK,GAD5B,CAFJ,CAHF;AASD,CAhBD;;ACJA,4BAAmBzC,KAAJ,IAAkBI,KAAK,CAACC,OAAN,CAAcL,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAhE;;ACEA,IAAeqE,yBACbxD,IADa,EAEbyD,UAFa,EAGbC,KAHa,KAKbA,KAAK,IAAID,UAAT,GACIzD,IAAI,KAAKyD,UADb,GAEI,CAACzD,IAAD,IACA,CAACyD,UADD,IAEAzD,IAAI,KAAKyD,UAFT,IAGAE,qBAAqB,CAAC3D,IAAD,CAArB,CAA4B4D,IAA5B,CACGC,WAAD,IACEA,WAAW,KACVA,WAAW,CAACC,UAAZ,CAAuBL,UAAvB,KACCA,UAAU,CAACK,UAAX,CAAsBD,WAAtB,CAFS,CAFf,CAVN;;ACQM,SAAUE,YAAV,CAA0BC,KAA1B,EAAyC;EAC7C,MAAMC,MAAM,GAAG3B,0BAAM4B,MAAN5B,CAAa0B,KAAb1B,CAAf;;EACA2B,MAAM,CAACE,OAAP,GAAiBH,KAAjB;EAEA1B,0BAAM8B,SAAN9B,CAAgB,MAAK;IACnB,MAAM+B,QAAQ,GAAIC,YAAD,IAAuC;MACtD,IAAIA,YAAJ,EAAkB;QAChBA,YAAY,CAACC,WAAb;MACD;IACF,CAJD;;IAMA,MAAMD,YAAY,GAChB,CAACN,KAAK,CAACQ,QAAP,IACAP,MAAM,CAACE,OAAP,CAAeM,OAAf,CAAuBC,SAAvB,CAAiC;MAC/BC,IAAI,EAAEV,MAAM,CAACE,OAAP,CAAeS;IADU,CAAjC,CAFF;;IAMA,OAAO,MAAMP,QAAQ,CAACC,YAAD,CAArB;EACD,CAdDhC,EAcG,CAAC0B,KAAK,CAACQ,QAAP,CAdHlC;AAeF;ACfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BG;;;AACH,SAASuC,YAAT,CACEb,KADF,EACyC;EAEvC,MAAMc,OAAO,GAAGtC,cAAc,EAA9B;EACA,MAAM;IAAEuC,OAAO,GAAGD,OAAO,CAACC,OAApB;IAA6BP,QAA7B;IAAuCxE,IAAvC;IAA6C0D;EAA7C,IAAuDM,KAAK,IAAI,EAAtE;EACA,MAAM,CAACrB,SAAD,EAAYqC,eAAZ,IAA+B1C,0BAAM2C,QAAN3C,CAAeyC,OAAO,CAACG,UAAvB5C,CAArC;;EACA,MAAM6C,oBAAoB,GAAG7C,0BAAM4B,MAAN5B,CAAa;IACxC8C,OAAO,EAAE,KAD+B;IAExCC,WAAW,EAAE,KAF2B;IAGxCC,aAAa,EAAE,KAHyB;IAIxCC,YAAY,EAAE,KAJ0B;IAKxCC,OAAO,EAAE,KAL+B;IAMxCC,MAAM,EAAE;EANgC,CAAbnD,CAA7B;;EAQA,MAAMoD,KAAK,GAAGpD,0BAAM4B,MAAN5B,CAAatC,IAAbsC,CAAd;;EACA,MAAMqD,QAAQ,GAAGrD,0BAAM4B,MAAN5B,CAAa,IAAbA,CAAjB;;EAEAoD,KAAK,CAACvB,OAAN,GAAgBnE,IAAhB;EAEA,MAAM4E,QAAQ,GAAGtC,0BAAMsD,WAANtD,CACdnD,KAAD,IACEwG,QAAQ,CAACxB,OAAT,IACAX,qBAAqB,CACnBkC,KAAK,CAACvB,OADa,EAEnBhF,KAAK,CAACa,IAFa,EAGnB0D,KAHmB,CADrB,IAMAmC,qBAAqB,CAAC1G,KAAD,EAAQgG,oBAAoB,CAAChB,OAA7B,CANrB,IAOAa,eAAe,CAAC,EACd,GAAGD,OAAO,CAACG,UADG;IAEd,GAAG/F;EAFW,CAAD,CATFmD,EAaf,CAACyC,OAAD,EAAUrB,KAAV,CAbepB,CAAjB;EAgBAyB,YAAY,CAAC;IACXS,QADW;IAEXI,QAFW;IAGXH,OAAO,EAAEM,OAAO,CAACe,SAAR,CAAkBC;EAHhB,CAAD,CAAZ;EAMAzD,0BAAM8B,SAAN9B,CAAgB,MAAK;IACnBqD,QAAQ,CAACxB,OAAT,GAAmB,IAAnB;IACA,OAAO,MAAK;MACVwB,QAAQ,CAACxB,OAAT,GAAmB,KAAnB;IACD,CAFD;EAGD,CALD7B,EAKG,EALHA;EAOA,OAAOI,iBAAiB,CACtBC,SADsB,EAEtBoC,OAAO,CAACnC,eAFc,EAGtBuC,oBAAoB,CAAChB,OAHC,EAItB,KAJsB,CAAxB;AAMF;;AClGA,eAAgBhF,KAAD,IAAqC,OAAOA,KAAP,KAAiB,QAArE;;ACIA,IAAe6G,uBACb7F,KADa,EAEb8F,MAFa,EAGbC,UAHa,EAIbC,QAJa,KAKX;EACF,MAAM3G,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcW,KAAd,CAAhB;;EACA,IAAIiG,QAAQ,CAACjG,KAAD,CAAZ,EAAqB;IACnBgG,QAAQ,IAAIF,MAAM,CAACI,KAAP,CAAaC,GAAb,CAAiBnG,KAAjB,CAAZ;IACA,OAAO8C,GAAG,CAACiD,UAAD,EAAa/F,KAAb,CAAV;EACD;;EAED,IAAIX,OAAJ,EAAa;IACX,OAAOW,KAAK,CAACoG,GAAN,CACJC,SAAD,KACEL,QAAQ,IAAIF,MAAM,CAACI,KAAP,CAAaC,GAAb,CAAiBE,SAAjB,CAAZ,EACAvD,GAAG,CAACiD,UAAD,EAAaM,SAAb,CAFL,CADK,CAAP;EAMD;;EAEDL,QAAQ,KAAKF,MAAM,CAACQ,QAAP,GAAkB,IAAvB,CAAR;EACA,OAAOP,UAAP;AACD,CAvBD;;ACJA,iBAAgB/G,KAAD,IACb,OAAOA,KAAP,KAAiB,UADnB;;ACEA,IAAeuH,oBAAIC,IAAJ,IAAwB;EACrC,KAAK,MAAM1F,GAAX,IAAkB0F,IAAlB,EAAwB;IACtB,IAAIC,UAAU,CAACD,IAAI,CAAC1F,GAAD,CAAL,CAAd,EAA2B;MACzB,OAAO,IAAP;IACD;EACF;;EACD,OAAO,KAAP;AACD,CAPD;ACgIA;;;;;;;;;;;;;;;AAeG;;;AACG,SAAU4F,QAAV,CACJ7C,KADI,EAC+B;EAEnC,MAAMc,OAAO,GAAGtC,cAAc,EAA9B;EACA,MAAM;IACJuC,OAAO,GAAGD,OAAO,CAACC,OADd;IAEJ/E,IAFI;IAGJY,YAHI;IAIJ4D,QAJI;IAKJd;EALI,IAMFM,KAAK,IAAI,EANb;;EAOA,MAAM0B,KAAK,GAAGpD,0BAAM4B,MAAN5B,CAAatC,IAAbsC,CAAd;;EAEAoD,KAAK,CAACvB,OAAN,GAAgBnE,IAAhB;EAEA,MAAM4E,QAAQ,GAAGtC,0BAAMsD,WAANtD,CACdK,SAAD,IAAkE;IAChE,IACEa,qBAAqB,CACnBkC,KAAK,CAACvB,OADa,EAEnBxB,SAAS,CAAC3C,IAFS,EAGnB0D,KAHmB,CADvB,EAME;MACA,MAAMoD,WAAW,GAAGd,mBAAmB,CACrCN,KAAK,CAACvB,OAD+B,EAErCY,OAAO,CAACkB,MAF6B,EAGrCtD,SAAS,CAACoE,MAAV,IAAoBhC,OAAO,CAACiC,WAHS,CAAvC;MAMAC,WAAW,CACT/F,WAAW,CAACwE,KAAK,CAACvB,OAAP,CAAX,IACGvE,QAAQ,CAACkH,WAAD,CAAR,IAAyB,CAACJ,iBAAiB,CAACI,WAAD,CAD9C,GAEI,EAAE,GAAGA;MAAL,CAFJ,GAGIvH,KAAK,CAACC,OAAN,CAAcsH,WAAd,IACA,CAAC,GAAGA,WAAJ,CADA,GAEA5F,WAAW,CAAC4F,WAAD,CAAX,GACAlG,YADA,GAEAkG,WARK,CAAX;IAUD;EACF,CA1BcxE,EA2Bf,CAACyC,OAAD,EAAUrB,KAAV,EAAiB9C,YAAjB,CA3Be0B,CAAjB;EA8BAyB,YAAY,CAAC;IACXS,QADW;IAEXC,OAAO,EAAEM,OAAO,CAACe,SAAR,CAAkBO,KAFhB;IAGXzB;EAHW,CAAD,CAAZ;EAMA,MAAM,CAACzF,KAAD,EAAQ8H,WAAR,IAAuB3E,0BAAM2C,QAAN3C,CAC3BpB,WAAW,CAACN,YAAD,CAAX,GACImE,OAAO,CAACmC,SAAR,CAAkBlH,IAAlB,CADJ,GAEIY,YAHuB0B,CAA7B;EAMAA,0BAAM8B,SAAN9B,CAAgB,MAAK;IACnByC,OAAO,CAACoC,gBAAR;EACD,CAFD7E;EAIA,OAAOnD,KAAP;AACF;;AC1MA,IAAeiI,gBACbpH,IADa,EAEbqH,wBAFa,EAGb5B,MAHa,EAIbvG,IAJa,EAKboI,OALa,KAObD,wBAAwB,GACpB,EACE,GAAG5B,MAAM,CAACzF,IAAD,CADX;EAEEuH,KAAK,EAAE,EACL,IAAI9B,MAAM,CAACzF,IAAD,CAAN,IAAgByF,MAAM,CAACzF,IAAD,CAAN,CAAcuH,KAA9B,GAAsC9B,MAAM,CAACzF,IAAD,CAAN,CAAcuH,KAApD,GAA4D,EAAhE,CADK;IAEL,CAACrI,IAAD,GAAQoI,OAAO,IAAI;EAFd;AAFT,CADoB,GAQpB,EAfN;;ACNA,IAAeE,QAACrI,KAAD,IAAmB,QAAQsI,IAAR,CAAatI,KAAb,CAAlC;;ACEA,mBAAgBuI,KAAD,IACb5G,OAAO,CAAC4G,KAAK,CAACC,OAAN,CAAc,WAAd,EAA2B,EAA3B,EAA+B5G,KAA/B,CAAqC,OAArC,CAAD,CADT;;ACIwB,aACtB6G,MADsB,EAEtBjH,IAFsB,EAGtBxB,KAHsB,EAGP;EAEf,IAAI0I,KAAK,GAAG,CAAC,CAAb;EACA,MAAMC,QAAQ,GAAGN,KAAK,CAAC7G,IAAD,CAAL,GAAc,CAACA,IAAD,CAAd,GAAuBoH,YAAY,CAACpH,IAAD,CAApD;EACA,MAAMyC,MAAM,GAAG0E,QAAQ,CAAC1E,MAAxB;EACA,MAAM4E,SAAS,GAAG5E,MAAM,GAAG,CAA3B;;EAEA,OAAO,EAAEyE,KAAF,GAAUzE,MAAjB,EAAyB;IACvB,MAAMnC,GAAG,GAAG6G,QAAQ,CAACD,KAAD,CAApB;IACA,IAAII,QAAQ,GAAG9I,KAAf;;IAEA,IAAI0I,KAAK,KAAKG,SAAd,EAAyB;MACvB,MAAME,QAAQ,GAAGN,MAAM,CAAC3G,GAAD,CAAvB;MACAgH,QAAQ,GACNrI,QAAQ,CAACsI,QAAD,CAAR,IAAsB3I,KAAK,CAACC,OAAN,CAAc0I,QAAd,CAAtB,GACIA,QADJ,GAEI,CAACC,KAAK,CAAC,CAACL,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAV,CAAN,GACA,EADA,GAEA,EALN;IAMD;;IACDD,MAAM,CAAC3G,GAAD,CAAN,GAAcgH,QAAd;IACAL,MAAM,GAAGA,MAAM,CAAC3G,GAAD,CAAf;EACD;;EACD,OAAO2G,MAAP;AACF;;AC5BA,MAAMQ,YAAY,GAAG,CACnBC,MADmB,EAEnBzD,QAFmB,EAGnB0D,WAHmB,KAIjB;EACF,KAAK,MAAMrH,GAAX,IAAkBqH,WAAW,IAAIvF,MAAM,CAACI,IAAP,CAAYkF,MAAZ,CAAjC,EAAsD;IACpD,MAAME,KAAK,GAAGtF,GAAG,CAACoF,MAAD,EAASpH,GAAT,CAAjB;;IAEA,IAAIsH,KAAJ,EAAW;MACT,MAAM;QAAEC,EAAF;QAAM,GAAGC;MAAT,IAA0BF,KAAhC;;MAEA,IAAIC,EAAE,IAAI5D,QAAQ,CAAC4D,EAAE,CAACxI,IAAJ,CAAlB,EAA6B;QAC3B,IAAIwI,EAAE,CAACE,GAAH,CAAOC,KAAP,IAAgBzH,WAAW,CAACsH,EAAE,CAACE,GAAH,CAAOC,KAAP,EAAD,CAA/B,EAAiD;UAC/C;QACD,CAFD,MAEO,IAAIH,EAAE,CAACI,IAAP,EAAa;UAClBJ,EAAE,CAACI,IAAH,CAAQ,CAAR,EAAWD,KAAX;;UACA;QACD;MACF,CAPD,MAOO,IAAI/I,QAAQ,CAAC6I,YAAD,CAAZ,EAA4B;QACjCL,YAAY,CAACK,YAAD,EAAe7D,QAAf,CAAZ;MACD;IACF;EACF;AACF,CAvBD;;ACHA,IAAeiE,aACb7I,IADa,EAEbiG,MAFa,EAGb6C,WAHa,KAKb,CAACA,WAAD,KACC7C,MAAM,CAACQ,QAAP,IACCR,MAAM,CAACI,KAAP,CAAajG,GAAb,CAAiBJ,IAAjB,CADD,IAEC,CAAC,GAAGiG,MAAM,CAACI,KAAX,EAAkBzC,IAAlB,CACGmF,SAAD,IACE/I,IAAI,CAAC8D,UAAL,CAAgBiF,SAAhB,KACA,SAAStB,IAAT,CAAczH,IAAI,CAACgJ,KAAL,CAAWD,SAAS,CAAC3F,MAArB,CAAd,CAHJ,CAHF,CALF;;ACFA,IAAe6F,eAAOC,MAAP,KAAkB,WAAlB,IACb,OAAOA,MAAM,CAACC,WAAd,KAA8B,WADjB,IAEb,OAAOC,QAAP,KAAoB,WAFtB;;ACIwB,qBAAezC,IAAf,EAAsB;EAC5C,IAAI0C,IAAJ;EACA,MAAM7J,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcmH,IAAd,CAAhB;;EAEA,IAAIA,IAAI,YAAYvH,IAApB,EAA0B;IACxBiK,IAAI,GAAG,IAAIjK,IAAJ,CAASuH,IAAT,CAAP;EACD,CAFD,MAEO,IAAIA,IAAI,YAAY2C,GAApB,EAAyB;IAC9BD,IAAI,GAAG,IAAIC,GAAJ,CAAQ3C,IAAR,CAAP;EACD,CAFM,MAEA,IACL,EAAEsC,KAAK,KAAKtC,IAAI,YAAY4C,IAAhB,IAAwB5C,IAAI,YAAY6C,QAA7C,CAAP,MACChK,OAAO,IAAII,QAAQ,CAAC+G,IAAD,CADpB,CADK,EAGL;IACA0C,IAAI,GAAG7J,OAAO,GAAG,EAAH,GAAQ,EAAtB;;IACA,KAAK,MAAMyB,GAAX,IAAkB0F,IAAlB,EAAwB;MACtB,IAAIC,UAAU,CAACD,IAAI,CAAC1F,GAAD,CAAL,CAAd,EAA2B;QACzBoI,IAAI,GAAG1C,IAAP;QACA;MACD;;MACD0C,IAAI,CAACpI,GAAD,CAAJ,GAAYwI,WAAW,CAAC9C,IAAI,CAAC1F,GAAD,CAAL,CAAvB;IACD;EACF,CAZM,MAYA;IACL,OAAO0F,IAAP;EACD;;EAED,OAAO0C,IAAP;AACF;;ACvBA,SAASK,OAAT,CAAiB9B,MAAjB,EAA8B+B,UAA9B,EAA6D;EAC3D,MAAMvG,MAAM,GAAGuG,UAAU,CAACX,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,EAAwB5F,MAAvC;EACA,IAAIyE,KAAK,GAAG,CAAZ;;EAEA,OAAOA,KAAK,GAAGzE,MAAf,EAAuB;IACrBwE,MAAM,GAAG1G,WAAW,CAAC0G,MAAD,CAAX,GAAsBC,KAAK,EAA3B,GAAgCD,MAAM,CAAC+B,UAAU,CAAC9B,KAAK,EAAN,CAAX,CAA/C;EACD;;EAED,OAAOD,MAAP;AACD;;AAEa,SAAUgC,KAAV,CAAgBhC,MAAhB,EAA6BjH,IAA7B,EAAyC;EACrD,MAAMgJ,UAAU,GAAGnC,KAAK,CAAC7G,IAAD,CAAL,GAAc,CAACA,IAAD,CAAd,GAAuBoH,YAAY,CAACpH,IAAD,CAAtD;EACA,MAAMkJ,WAAW,GACfF,UAAU,CAACvG,MAAX,IAAqB,CAArB,GAAyBwE,MAAzB,GAAkC8B,OAAO,CAAC9B,MAAD,EAAS+B,UAAT,CAD3C;EAEA,MAAM1I,GAAG,GAAG0I,UAAU,CAACA,UAAU,CAACvG,MAAX,GAAoB,CAArB,CAAtB;EACA,IAAI0G,cAAJ;;EAEA,IAAID,WAAJ,EAAiB;IACf,OAAOA,WAAW,CAAC5I,GAAD,CAAlB;EACD;;EAED,KAAK,IAAI8I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAAU,CAACX,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,EAAwB5F,MAA5C,EAAoD2G,CAAC,EAArD,EAAyD;IACvD,IAAIlC,KAAK,GAAG,CAAC,CAAb;IACA,IAAImC,SAAJ;IACA,MAAMC,YAAY,GAAGN,UAAU,CAACX,KAAX,CAAiB,CAAjB,EAAoB,EAAEe,CAAC,GAAG,CAAN,CAApB,CAArB;IACA,MAAMG,kBAAkB,GAAGD,YAAY,CAAC7G,MAAb,GAAsB,CAAjD;;IAEA,IAAI2G,CAAC,GAAG,CAAR,EAAW;MACTD,cAAc,GAAGlC,MAAjB;IACD;;IAED,OAAO,EAAEC,KAAF,GAAUoC,YAAY,CAAC7G,MAA9B,EAAsC;MACpC,MAAM+G,IAAI,GAAGF,YAAY,CAACpC,KAAD,CAAzB;MACAmC,SAAS,GAAGA,SAAS,GAAGA,SAAS,CAACG,IAAD,CAAZ,GAAqBvC,MAAM,CAACuC,IAAD,CAAhD;;MAEA,IACED,kBAAkB,KAAKrC,KAAvB,KACEjI,QAAQ,CAACoK,SAAD,CAAR,IAAuB1G,aAAa,CAAC0G,SAAD,CAArC,IACEzK,KAAK,CAACC,OAAN,CAAcwK,SAAd,KACC,CAACA,SAAS,CAAC1J,MAAV,CAAkBqG,IAAD,IAAU,CAACzF,WAAW,CAACyF,IAAD,CAAvC,EAA+CvD,MAHpD,CADF,EAKE;QACA0G,cAAc,GAAG,OAAOA,cAAc,CAACK,IAAD,CAAxB,GAAiC,OAAOvC,MAAM,CAACuC,IAAD,CAA5D;MACD;;MAEDL,cAAc,GAAGE,SAAjB;IACD;EACF;;EAED,OAAOpC,MAAP;AACF;;ACxCc,SAAUwC,aAAV,GAAuB;EACnC,IAAIC,UAAU,GAAkB,EAAhC;;EAEA,MAAM1F,IAAI,GAAIxF,KAAD,IAAa;IACxB,KAAK,MAAMmL,QAAX,IAAuBD,UAAvB,EAAmC;MACjCC,QAAQ,CAAC3F,IAAT,CAAcxF,KAAd;IACD;EACF,CAJD;;EAMA,MAAMuF,SAAS,GAAI4F,QAAD,IAAwC;IACxDD,UAAU,CAACE,IAAX,CAAgBD,QAAhB;;IACA,OAAO;MACL/F,WAAW,EAAE,MAAK;QAChB8F,UAAU,GAAGA,UAAU,CAAC/J,MAAX,CAAmBkK,CAAD,IAAOA,CAAC,KAAKF,QAA/B,CAAb;MACD;IAHI,CAAP;EAKD,CAPD;;EASA,MAAM/F,WAAW,GAAG,MAAK;IACvB8F,UAAU,GAAG,EAAb;EACD,CAFD;;EAIA,OAAO;IACL,IAAII,SAAJ,GAAa;MACX,OAAOJ,UAAP;IACD,CAHI;;IAIL1F,IAJK;IAKLD,SALK;IAMLH;EANK,CAAP;AAQF;;ACzCA,kBAAgBpF,KAAD,IACbG,iBAAiB,CAACH,KAAD,CAAjB,IAA4B,CAACE,YAAY,CAACF,KAAD,CAD3C;;ACAc,SAAUuL,SAAV,CAAoBC,OAApB,EAAkCC,OAAlC,EAA8C;EAC1D,IAAIC,WAAW,CAACF,OAAD,CAAX,IAAwBE,WAAW,CAACD,OAAD,CAAvC,EAAkD;IAChD,OAAOD,OAAO,KAAKC,OAAnB;EACD;;EAED,IAAInL,YAAY,CAACkL,OAAD,CAAZ,IAAyBlL,YAAY,CAACmL,OAAD,CAAzC,EAAoD;IAClD,OAAOD,OAAO,CAACG,OAAR,OAAsBF,OAAO,CAACE,OAAR,EAA7B;EACD;;EAED,MAAMC,KAAK,GAAGhI,MAAM,CAACI,IAAP,CAAYwH,OAAZ,CAAd;EACA,MAAMK,KAAK,GAAGjI,MAAM,CAACI,IAAP,CAAYyH,OAAZ,CAAd;;EAEA,IAAIG,KAAK,CAAC3H,MAAN,KAAiB4H,KAAK,CAAC5H,MAA3B,EAAmC;IACjC,OAAO,KAAP;EACD;;EAED,KAAK,MAAMnC,GAAX,IAAkB8J,KAAlB,EAAyB;IACvB,MAAME,IAAI,GAAGN,OAAO,CAAC1J,GAAD,CAApB;;IAEA,IAAI,CAAC+J,KAAK,CAACE,QAAN,CAAejK,GAAf,CAAL,EAA0B;MACxB,OAAO,KAAP;IACD;;IAED,IAAIA,GAAG,KAAK,KAAZ,EAAmB;MACjB,MAAMkK,IAAI,GAAGP,OAAO,CAAC3J,GAAD,CAApB;;MAEA,IACGxB,YAAY,CAACwL,IAAD,CAAZ,IAAsBxL,YAAY,CAAC0L,IAAD,CAAnC,IACCvL,QAAQ,CAACqL,IAAD,CAAR,IAAkBrL,QAAQ,CAACuL,IAAD,CAD3B,IAEC5L,KAAK,CAACC,OAAN,CAAcyL,IAAd,KAAuB1L,KAAK,CAACC,OAAN,CAAc2L,IAAd,CAFxB,GAGI,CAACT,SAAS,CAACO,IAAD,EAAOE,IAAP,CAHd,GAIIF,IAAI,KAAKE,IALf,EAME;QACA,OAAO,KAAP;MACD;IACF;EACF;;EAED,OAAO,IAAP;AACF;;ACzCA,IAAeC,qBACbC,IADa,KAQT;EACJC,UAAU,EAAE,CAACD,IAAD,IAASA,IAAI,KAAK9J,eAAe,CAACG,QAD1C;EAEJ6J,QAAQ,EAAEF,IAAI,KAAK9J,eAAe,CAACC,MAF/B;EAGJgK,UAAU,EAAEH,IAAI,KAAK9J,eAAe,CAACE,QAHjC;EAIJgK,OAAO,EAAEJ,IAAI,KAAK9J,eAAe,CAACK,GAJ9B;EAKJ8J,SAAS,EAAEL,IAAI,KAAK9J,eAAe,CAACI;AALhC,CARS,CAAf;;ACHA,gBAAgBxC,KAAD,IAAsC,OAAOA,KAAP,KAAiB,SAAtE;;ACEA,kBAAgBF,OAAD,IACbA,OAAO,CAACC,IAAR,KAAiB,MADnB;;ACFA,IAAeyM,gBAACxM,KAAD,IAAyC;EACtD,MAAMyM,KAAK,GAAGzM,KAAK,GAAKA,KAAqB,CAAC0M,aAA3B,GAAwD,CAA3E;EACA,MAAMC,YAAY,GAChBF,KAAK,IAAIA,KAAK,CAACG,WAAf,GAA6BH,KAAK,CAACG,WAAN,CAAkB5C,WAA/C,GAA6DA,WAD/D;EAEA,OAAOhK,KAAK,YAAY2M,YAAxB;AACD,CALD;;ACEA,IAAeE,mBAAC/M,OAAD,IACbA,OAAO,CAACC,IAAR,KAAiB,iBADnB;;ACAA,mBAAgBD,OAAD,IACbA,OAAO,CAACC,IAAR,KAAiB,OADnB;;ACGA,IAAe+M,oBAACvD,GAAD,IACbwD,YAAY,CAACxD,GAAD,CAAZ,IAAqB5I,eAAe,CAAC4I,GAAD,CADtC;;ACDA,IAAeyD,OAACzD,GAAD,IAAciD,aAAa,CAACjD,GAAD,CAAb,IAAsBA,GAAG,CAAC0D,WAAvD;;ACGA,SAASC,eAAT,CAA4B1F,IAA5B,EAAqE;EAAA,IAAhC0B,MAAgC,uEAAF,EAAE;EACnE,MAAMiE,iBAAiB,GAAG/M,KAAK,CAACC,OAAN,CAAcmH,IAAd,CAA1B;;EAEA,IAAI/G,QAAQ,CAAC+G,IAAD,CAAR,IAAkB2F,iBAAtB,EAAyC;IACvC,KAAK,MAAMrL,GAAX,IAAkB0F,IAAlB,EAAwB;MACtB,IACEpH,KAAK,CAACC,OAAN,CAAcmH,IAAI,CAAC1F,GAAD,CAAlB,KACCrB,QAAQ,CAAC+G,IAAI,CAAC1F,GAAD,CAAL,CAAR,IAAuB,CAACyF,iBAAiB,CAACC,IAAI,CAAC1F,GAAD,CAAL,CAF5C,EAGE;QACAoH,MAAM,CAACpH,GAAD,CAAN,GAAc1B,KAAK,CAACC,OAAN,CAAcmH,IAAI,CAAC1F,GAAD,CAAlB,IAA2B,EAA3B,GAAgC,EAA9C;QACAoL,eAAe,CAAC1F,IAAI,CAAC1F,GAAD,CAAL,EAAYoH,MAAM,CAACpH,GAAD,CAAlB,CAAf;MACD,CAND,MAMO,IAAI,CAAC3B,iBAAiB,CAACqH,IAAI,CAAC1F,GAAD,CAAL,CAAtB,EAAmC;QACxCoH,MAAM,CAACpH,GAAD,CAAN,GAAc,IAAd;MACD;IACF;EACF;;EAED,OAAOoH,MAAP;AACD;;AAED,SAASkE,+BAAT,CACE5F,IADF,EAEET,UAFF,EAGEsG,qBAHF,EAG4B;EAE1B,MAAMF,iBAAiB,GAAG/M,KAAK,CAACC,OAAN,CAAcmH,IAAd,CAA1B;;EAEA,IAAI/G,QAAQ,CAAC+G,IAAD,CAAR,IAAkB2F,iBAAtB,EAAyC;IACvC,KAAK,MAAMrL,GAAX,IAAkB0F,IAAlB,EAAwB;MACtB,IACEpH,KAAK,CAACC,OAAN,CAAcmH,IAAI,CAAC1F,GAAD,CAAlB,KACCrB,QAAQ,CAAC+G,IAAI,CAAC1F,GAAD,CAAL,CAAR,IAAuB,CAACyF,iBAAiB,CAACC,IAAI,CAAC1F,GAAD,CAAL,CAF5C,EAGE;QACA,IACEC,WAAW,CAACgF,UAAD,CAAX,IACA2E,WAAW,CAAC2B,qBAAqB,CAACvL,GAAD,CAAtB,CAFb,EAGE;UACAuL,qBAAqB,CAACvL,GAAD,CAArB,GAA6B1B,KAAK,CAACC,OAAN,CAAcmH,IAAI,CAAC1F,GAAD,CAAlB,IACzBoL,eAAe,CAAC1F,IAAI,CAAC1F,GAAD,CAAL,EAAY,EAAZ,CADU,GAEzB,EAAE,GAAGoL,eAAe,CAAC1F,IAAI,CAAC1F,GAAD,CAAL;UAApB,CAFJ;QAGD,CAPD,MAOO;UACLsL,+BAA+B,CAC7B5F,IAAI,CAAC1F,GAAD,CADyB,EAE7B3B,iBAAiB,CAAC4G,UAAD,CAAjB,GAAgC,EAAhC,GAAqCA,UAAU,CAACjF,GAAD,CAFlB,EAG7BuL,qBAAqB,CAACvL,GAAD,CAHQ,CAA/B;QAKD;MACF,CAlBD,MAkBO;QACLuL,qBAAqB,CAACvL,GAAD,CAArB,GAA6B,CAACyJ,SAAS,CAAC/D,IAAI,CAAC1F,GAAD,CAAL,EAAYiF,UAAU,CAACjF,GAAD,CAAtB,CAAvC;MACD;IACF;EACF;;EAED,OAAOuL,qBAAP;AACD;;AAED,qBAAe,CAAIC,aAAJ,EAAsBvG,UAAtB,KACbqG,+BAA+B,CAC7BE,aAD6B,EAE7BvG,UAF6B,EAG7BmG,eAAe,CAACnG,UAAD,CAHc,CADjC;;ACxDA,MAAMwG,aAAa,GAAwB;EACzCvN,KAAK,EAAE,KADkC;EAEzCqG,OAAO,EAAE;AAFgC,CAA3C;AAKA,MAAMmH,WAAW,GAAG;EAAExN,KAAK,EAAE,IAAT;EAAeqG,OAAO,EAAE;AAAxB,CAApB;;AAEA,IAAeoH,mBAACC,OAAD,IAAsD;EACnE,IAAItN,KAAK,CAACC,OAAN,CAAcqN,OAAd,CAAJ,EAA4B;IAC1B,IAAIA,OAAO,CAACzJ,MAAR,GAAiB,CAArB,EAAwB;MACtB,MAAM2D,MAAM,GAAG8F,OAAO,CACnBvM,MADY,CACJwM,MAAD,IAAYA,MAAM,IAAIA,MAAM,CAAC/M,OAAjB,IAA4B,CAAC+M,MAAM,CAACtI,QAD3C,EAEZ+B,GAFY,CAEPuG,MAAD,IAAYA,MAAM,CAAC3N,KAFX,CAAf;MAGA,OAAO;QAAEA,KAAK,EAAE4H,MAAT;QAAiBvB,OAAO,EAAE,CAAC,CAACuB,MAAM,CAAC3D;MAAnC,CAAP;IACD;;IAED,OAAOyJ,OAAO,CAAC,CAAD,CAAP,CAAW9M,OAAX,IAAsB,CAAC8M,OAAO,CAAC,CAAD,CAAP,CAAWrI,QAAlC,GACL;IACEqI,OAAO,CAAC,CAAD,CAAP,CAAWE,UAAX,IAAyB,CAAC7L,WAAW,CAAC2L,OAAO,CAAC,CAAD,CAAP,CAAWE,UAAX,CAAsB5N,KAAvB,CAArC,GACE+B,WAAW,CAAC2L,OAAO,CAAC,CAAD,CAAP,CAAW1N,KAAZ,CAAX,IAAiC0N,OAAO,CAAC,CAAD,CAAP,CAAW1N,KAAX,KAAqB,EAAtD,GACEwN,WADF,GAEE;MAAExN,KAAK,EAAE0N,OAAO,CAAC,CAAD,CAAP,CAAW1N,KAApB;MAA2BqG,OAAO,EAAE;IAApC,CAHJ,GAIEmH,WANC,GAOHD,aAPJ;EAQD;;EAED,OAAOA,aAAP;AACD,CApBD;;ACTA,sBAAe,CACbvN,KADa;EAAA,IAEb;IAAE6N,aAAF;IAAiBC,WAAjB;IAA8BC;EAA9B,CAFa;EAAA,OAIbhM,WAAW,CAAC/B,KAAD,CAAX,GACIA,KADJ,GAEI6N,aAAa,GACb7N,KAAK,KAAK,EAAV,IAAgBG,iBAAiB,CAACH,KAAD,CAAjC,GACEgO,GADF,GAEE,CAAChO,KAHU,GAIb8N,WAAW,IAAI7G,QAAQ,CAACjH,KAAD,CAAvB,GACA,IAAIC,IAAJ,CAASD,KAAT,CADA,GAEA+N,UAAU,GACVA,UAAU,CAAC/N,KAAD,CADA,GAEVA,KAdS;AAAA,CAAf;;ACAA,MAAMiO,aAAa,GAAqB;EACtC5H,OAAO,EAAE,KAD6B;EAEtCrG,KAAK,EAAE;AAF+B,CAAxC;;AAKA,IAAekO,gBAACR,OAAD,IACbtN,KAAK,CAACC,OAAN,CAAcqN,OAAd,IACIA,OAAO,CAAC7L,MAAR,CACE,CAACsM,QAAD,EAAWR,MAAX,KACEA,MAAM,IAAIA,MAAM,CAAC/M,OAAjB,IAA4B,CAAC+M,MAAM,CAACtI,QAApC,GACI;EACEgB,OAAO,EAAE,IADX;EAEErG,KAAK,EAAE2N,MAAM,CAAC3N;AAFhB,CADJ,GAKImO,QAPR,EAQEF,aARF,CADJ,GAWIA,aAZN;;ACCwB,uBAAc5E,EAAd,EAA6B;EACnD,MAAME,GAAG,GAAGF,EAAE,CAACE,GAAf;;EAEA,IAAIF,EAAE,CAACI,IAAH,GAAUJ,EAAE,CAACI,IAAH,CAAQ2E,KAAR,CAAe7E,GAAD,IAASA,GAAG,CAAClE,QAA3B,CAAV,GAAiDkE,GAAG,CAAClE,QAAzD,EAAmE;IACjE;EACD;;EAED,IAAIgJ,WAAW,CAAC9E,GAAD,CAAf,EAAsB;IACpB,OAAOA,GAAG,CAAC+E,KAAX;EACD;;EAED,IAAIvB,YAAY,CAACxD,GAAD,CAAhB,EAAuB;IACrB,OAAO2E,aAAa,CAAC7E,EAAE,CAACI,IAAJ,CAAb,CAAuBzJ,KAA9B;EACD;;EAED,IAAI6M,gBAAgB,CAACtD,GAAD,CAApB,EAA2B;IACzB,OAAO,CAAC,GAAGA,GAAG,CAACgF,eAAR,EAAyBnH,GAAzB,CAA6B;MAAA,IAAC;QAAEpH;MAAF,CAAD;MAAA,OAAeA,KAAf;IAAA,CAA7B,CAAP;EACD;;EAED,IAAIwO,eAAU,CAACjF,GAAD,CAAd,EAAqB;IACnB,OAAOkE,gBAAgB,CAACpE,EAAE,CAACI,IAAJ,CAAhB,CAA0BzJ,KAAjC;EACD;;EAED,OAAOyO,eAAe,CAAC1M,WAAW,CAACwH,GAAG,CAACvJ,KAAL,CAAX,GAAyBqJ,EAAE,CAACE,GAAH,CAAOvJ,KAAhC,GAAwCuJ,GAAG,CAACvJ,KAA7C,EAAoDqJ,EAApD,CAAtB;AACF;;ACxBA,IAAeqF,sBACbvF,WADa,EAEbwF,OAFa,EAGbC,YAHa,EAIbC,yBAJa,KAKX;EACF,MAAM3F,MAAM,GAA2C,EAAvD;;EAEA,KAAK,MAAMrI,IAAX,IAAmBsI,WAAnB,EAAgC;IAC9B,MAAMC,KAAK,GAAUtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAxB;IAEAuI,KAAK,IAAI0F,GAAG,CAAC5F,MAAD,EAASrI,IAAT,EAAeuI,KAAK,CAACC,EAArB,CAAZ;EACD;;EAED,OAAO;IACLuF,YADK;IAEL5N,KAAK,EAAE,CAAC,GAAGmI,WAAJ,CAFF;IAGLD,MAHK;IAIL2F;EAJK,CAAP;AAMD,CApBD;;ACXA,cAAgB7O,KAAD,IAAqCA,KAAK,YAAY+O,MAArE;;ACSA,mBACEC,IADa,IAGbjN,WAAW,CAACiN,IAAD,CAAX,GACI1N,SADJ,GAEI2N,OAAO,CAACD,IAAD,CAAP,GACAA,IAAI,CAACE,MADL,GAEAzO,QAAQ,CAACuO,IAAD,CAAR,GACAC,OAAO,CAACD,IAAI,CAAChP,KAAN,CAAP,GACEgP,IAAI,CAAChP,KAAL,CAAWkP,MADb,GAEEF,IAAI,CAAChP,KAHP,GAIAgP,IAXN;;ACPA,oBAAgBtB,OAAD,IACbA,OAAO,CAACyB,KAAR,KACCzB,OAAO,CAAC1K,QAAR,IACC0K,OAAO,CAAC9K,GADT,IAEC8K,OAAO,CAAC/K,GAFT,IAGC+K,OAAO,CAAC7K,SAHT,IAIC6K,OAAO,CAAC5K,SAJT,IAKC4K,OAAO,CAAC3K,OALT,IAMC2K,OAAO,CAACzK,QAPV,CADF;;ACEwB,2BACtBqD,MADsB,EAEtBqI,OAFsB,EAGtB9N,IAHsB,EAGV;EAKZ,MAAMuO,KAAK,GAAGtL,GAAG,CAACwC,MAAD,EAASzF,IAAT,CAAjB;;EAEA,IAAIuO,KAAK,IAAI/G,KAAK,CAACxH,IAAD,CAAlB,EAA0B;IACxB,OAAO;MACLuO,KADK;MAELvO;IAFK,CAAP;EAID;;EAED,MAAMG,KAAK,GAAGH,IAAI,CAACe,KAAL,CAAW,GAAX,CAAd;;EAEA,OAAOZ,KAAK,CAACiD,MAAb,EAAqB;IACnB,MAAMoD,SAAS,GAAGrG,KAAK,CAACqO,IAAN,CAAW,GAAX,CAAlB;IACA,MAAMjG,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAUtH,SAAV,CAAjB;IACA,MAAMiI,UAAU,GAAGxL,GAAG,CAACwC,MAAD,EAASe,SAAT,CAAtB;;IAEA,IAAI+B,KAAK,IAAI,CAAChJ,KAAK,CAACC,OAAN,CAAc+I,KAAd,CAAV,IAAkCvI,IAAI,KAAKwG,SAA/C,EAA0D;MACxD,OAAO;QAAExG;MAAF,CAAP;IACD;;IAED,IAAIyO,UAAU,IAAIA,UAAU,CAACvP,IAA7B,EAAmC;MACjC,OAAO;QACLc,IAAI,EAAEwG,SADD;QAEL+H,KAAK,EAAEE;MAFF,CAAP;IAID;;IAEDtO,KAAK,CAACuO,GAAN;EACD;;EAED,OAAO;IACL1O;EADK,CAAP;AAGF;;AC7CA,IAAe2O,kBACb7F,WADa,EAEb8F,SAFa,EAGbC,WAHa,EAIbC,cAJa,EAQbzD,IARa,KAeX;EACF,IAAIA,IAAI,CAACI,OAAT,EAAkB;IAChB,OAAO,KAAP;EACD,CAFD,MAEO,IAAI,CAACoD,WAAD,IAAgBxD,IAAI,CAACK,SAAzB,EAAoC;IACzC,OAAO,EAAEkD,SAAS,IAAI9F,WAAf,CAAP;EACD,CAFM,MAEA,IAAI+F,WAAW,GAAGC,cAAc,CAACvD,QAAlB,GAA6BF,IAAI,CAACE,QAAjD,EAA2D;IAChE,OAAO,CAACzC,WAAR;EACD,CAFM,MAEA,IAAI+F,WAAW,GAAGC,cAAc,CAACtD,UAAlB,GAA+BH,IAAI,CAACG,UAAnD,EAA+D;IACpE,OAAO1C,WAAP;EACD;;EACD,OAAO,IAAP;AACD,CA1BD;;ACIA,IAAeiG,mBAAIrG,GAAJ,EAAY1I,IAAZ,KACb,CAACc,OAAO,CAACmC,GAAG,CAACyF,GAAD,EAAM1I,IAAN,CAAJ,CAAP,CAAwBoD,MAAzB,IAAmCwG,KAAK,CAAClB,GAAD,EAAM1I,IAAN,CAD1C;;ACCA,gBAAgBb,KAAD,IACbiH,QAAQ,CAACjH,KAAD,CAAR,IAAmBmD,0BAAM0M,cAAN1M,CAAqBnD,KAArBmD,CADrB;;ACDc,SAAU2M,gBAAV,CACZpO,MADY,EAEZ6H,GAFY,EAGK;EAAA,IAAjBxJ,IAAiB,uEAAV,UAAU;;EAEjB,IACEgQ,SAAS,CAACrO,MAAD,CAAT,IACCtB,KAAK,CAACC,OAAN,CAAcqB,MAAd,KAAyBA,MAAM,CAAC0M,KAAP,CAAa2B,SAAb,CAD1B,IAECC,SAAS,CAACtO,MAAD,CAAT,IAAqB,CAACA,MAHzB,EAIE;IACA,OAAO;MACL3B,IADK;MAELoI,OAAO,EAAE4H,SAAS,CAACrO,MAAD,CAAT,GAAoBA,MAApB,GAA6B,EAFjC;MAGL6H;IAHK,CAAP;EAKD;AACH;;AChBA,yBAAgB0G,cAAD,IACbxP,QAAQ,CAACwP,cAAD,CAAR,IAA4B,CAAChB,OAAO,CAACgB,cAAD,CAApC,GACIA,cADJ,GAEI;EACEjQ,KAAK,EAAEiQ,cADT;EAEE9H,OAAO,EAAE;AAFX,CAHN;;ACsBA,IAAe+H,uBACb9G,KADa,EAEb+G,UAFa,EAGbjI,wBAHa,EAIb2G,yBAJa,KAKmB;EAChC,MAAM;IACJtF,GADI;IAEJE,IAFI;IAGJzG,QAHI;IAIJH,SAJI;IAKJC,SALI;IAMJF,GANI;IAOJD,GAPI;IAQJI,OARI;IASJE,QATI;IAUJpC,IAVI;IAWJgN,aAXI;IAYJsB,KAZI;IAaJ9J;EAbI,IAcF+D,KAAK,CAACC,EAdV;;EAeA,IAAI,CAAC8F,KAAD,IAAU9J,QAAd,EAAwB;IACtB,OAAO,EAAP;EACD;;EACD,MAAM+K,QAAQ,GAAqB3G,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAP,GAAcF,GAArD;;EACA,MAAM8G,iBAAiB,GAAIlI,OAAD,IAA+B;IACvD,IAAI0G,yBAAyB,IAAIuB,QAAQ,CAACE,cAA1C,EAA0D;MACxDF,QAAQ,CAACC,iBAAT,CAA2BL,SAAS,CAAC7H,OAAD,CAAT,GAAqB,EAArB,GAA0BA,OAAO,IAAI,GAAhE;MACAiI,QAAQ,CAACE,cAAT;IACD;EACF,CALD;;EAMA,MAAMlB,KAAK,GAAwB,EAAnC;EACA,MAAMmB,OAAO,GAAGxD,YAAY,CAACxD,GAAD,CAA5B;EACA,MAAMiF,UAAU,GAAG7N,eAAe,CAAC4I,GAAD,CAAlC;EACA,MAAMuD,iBAAiB,GAAGyD,OAAO,IAAI/B,UAArC;EACA,MAAMgC,OAAO,GACV,CAAC3C,aAAa,IAAIQ,WAAW,CAAC9E,GAAD,CAA7B,KAAuC,CAACA,GAAG,CAACvJ,KAA7C,IACAmQ,UAAU,KAAK,EADf,IAEC/P,KAAK,CAACC,OAAN,CAAc8P,UAAd,KAA6B,CAACA,UAAU,CAAClM,MAH5C;EAIA,MAAMwM,iBAAiB,GAAGxI,YAAY,CAACyI,IAAb,CACxB,IADwB,EAExB7P,IAFwB,EAGxBqH,wBAHwB,EAIxBkH,KAJwB,CAA1B;;EAMA,MAAMuB,gBAAgB,GAAG,UACvBC,SADuB,EAEvBC,gBAFuB,EAGvBC,gBAHuB,EAMrB;IAAA,IAFFC,OAEE,uEAFQrO,sBAAsB,CAACG,SAE/B;IAAA,IADFmO,OACE,uEADQtO,sBAAsB,CAACI,SAC/B;IACF,MAAMqF,OAAO,GAAGyI,SAAS,GAAGC,gBAAH,GAAsBC,gBAA/C;IACA1B,KAAK,CAACvO,IAAD,CAAL,GAAc;MACZd,IAAI,EAAE6Q,SAAS,GAAGG,OAAH,GAAaC,OADhB;MAEZ7I,OAFY;MAGZoB,GAHY;MAIZ,GAAGkH,iBAAiB,CAACG,SAAS,GAAGG,OAAH,GAAaC,OAAvB,EAAgC7I,OAAhC;IAJR,CAAd;EAMD,CAdD;;EAgBA,IACEnF,QAAQ,KACN,CAAC8J,iBAAD,KAAuB0D,OAAO,IAAIrQ,iBAAiB,CAACgQ,UAAD,CAAnD,CAAD,IACEH,SAAS,CAACG,UAAD,CAAT,IAAyB,CAACA,UAD5B,IAEE3B,UAAU,IAAI,CAACf,gBAAgB,CAAChE,IAAD,CAAhB,CAAuBpD,OAFxC,IAGEkK,OAAO,IAAI,CAACrC,aAAa,CAACzE,IAAD,CAAb,CAAoBpD,OAJ3B,CADV,EAME;IACA,MAAM;MAAErG,KAAF;MAASmI;IAAT,IAAqB4H,SAAS,CAAC/M,QAAD,CAAT,GACvB;MAAEhD,KAAK,EAAE,CAAC,CAACgD,QAAX;MAAqBmF,OAAO,EAAEnF;IAA9B,CADuB,GAEvBiO,kBAAkB,CAACjO,QAAD,CAFtB;;IAIA,IAAIhD,KAAJ,EAAW;MACToP,KAAK,CAACvO,IAAD,CAAL,GAAc;QACZd,IAAI,EAAE2C,sBAAsB,CAACM,QADjB;QAEZmF,OAFY;QAGZoB,GAAG,EAAE6G,QAHO;QAIZ,GAAGK,iBAAiB,CAAC/N,sBAAsB,CAACM,QAAxB,EAAkCmF,OAAlC;MAJR,CAAd;;MAMA,IAAI,CAACD,wBAAL,EAA+B;QAC7BmI,iBAAiB,CAAClI,OAAD,CAAjB;QACA,OAAOiH,KAAP;MACD;IACF;EACF;;EAED,IAAI,CAACoB,OAAD,KAAa,CAACrQ,iBAAiB,CAACyC,GAAD,CAAlB,IAA2B,CAACzC,iBAAiB,CAACwC,GAAD,CAA1D,CAAJ,EAAsE;IACpE,IAAIiO,SAAJ;IACA,IAAIM,SAAJ;IACA,MAAMC,SAAS,GAAGF,kBAAkB,CAACtO,GAAD,CAApC;IACA,MAAMyO,SAAS,GAAGH,kBAAkB,CAACrO,GAAD,CAApC;;IAEA,IAAI,CAACzC,iBAAiB,CAACgQ,UAAD,CAAlB,IAAkC,CAACnH,KAAK,CAACmH,UAAD,CAA5C,EAAoE;MAClE,MAAMkB,WAAW,GACd9H,GAAwB,CAACsE,aAAzB,IAA0C,CAACsC,UAD9C;;MAEA,IAAI,CAAChQ,iBAAiB,CAACgR,SAAS,CAACnR,KAAX,CAAtB,EAAyC;QACvC4Q,SAAS,GAAGS,WAAW,GAAGF,SAAS,CAACnR,KAApC;MACD;;MACD,IAAI,CAACG,iBAAiB,CAACiR,SAAS,CAACpR,KAAX,CAAtB,EAAyC;QACvCkR,SAAS,GAAGG,WAAW,GAAGD,SAAS,CAACpR,KAApC;MACD;IACF,CATD,MASO;MACL,MAAMsR,SAAS,GACZ/H,GAAwB,CAACuE,WAAzB,IAAwC,IAAI7N,IAAJ,CAASkQ,UAAT,CAD3C;;MAEA,IAAIlJ,QAAQ,CAACkK,SAAS,CAACnR,KAAX,CAAZ,EAA+B;QAC7B4Q,SAAS,GAAGU,SAAS,GAAG,IAAIrR,IAAJ,CAASkR,SAAS,CAACnR,KAAnB,CAAxB;MACD;;MACD,IAAIiH,QAAQ,CAACmK,SAAS,CAACpR,KAAX,CAAZ,EAA+B;QAC7BkR,SAAS,GAAGI,SAAS,GAAG,IAAIrR,IAAJ,CAASmR,SAAS,CAACpR,KAAnB,CAAxB;MACD;IACF;;IAED,IAAI4Q,SAAS,IAAIM,SAAjB,EAA4B;MAC1BP,gBAAgB,CACd,CAAC,CAACC,SADY,EAEdO,SAAS,CAAChJ,OAFI,EAGdiJ,SAAS,CAACjJ,OAHI,EAIdzF,sBAAsB,CAACC,GAJT,EAKdD,sBAAsB,CAACE,GALT,CAAhB;;MAOA,IAAI,CAACsF,wBAAL,EAA+B;QAC7BmI,iBAAiB,CAACjB,KAAK,CAACvO,IAAD,CAAL,CAAasH,OAAd,CAAjB;QACA,OAAOiH,KAAP;MACD;IACF;EACF;;EAED,IAAI,CAACvM,SAAS,IAAIC,SAAd,KAA4B,CAAC0N,OAA7B,IAAwCvJ,QAAQ,CAACkJ,UAAD,CAApD,EAAkE;IAChE,MAAMoB,eAAe,GAAGN,kBAAkB,CAACpO,SAAD,CAA1C;IACA,MAAM2O,eAAe,GAAGP,kBAAkB,CAACnO,SAAD,CAA1C;IACA,MAAM8N,SAAS,GACb,CAACzQ,iBAAiB,CAACoR,eAAe,CAACvR,KAAjB,CAAlB,IACAmQ,UAAU,CAAClM,MAAX,GAAoBsN,eAAe,CAACvR,KAFtC;IAGA,MAAMkR,SAAS,GACb,CAAC/Q,iBAAiB,CAACqR,eAAe,CAACxR,KAAjB,CAAlB,IACAmQ,UAAU,CAAClM,MAAX,GAAoBuN,eAAe,CAACxR,KAFtC;;IAIA,IAAI4Q,SAAS,IAAIM,SAAjB,EAA4B;MAC1BP,gBAAgB,CACdC,SADc,EAEdW,eAAe,CAACpJ,OAFF,EAGdqJ,eAAe,CAACrJ,OAHF,CAAhB;;MAKA,IAAI,CAACD,wBAAL,EAA+B;QAC7BmI,iBAAiB,CAACjB,KAAK,CAACvO,IAAD,CAAL,CAAasH,OAAd,CAAjB;QACA,OAAOiH,KAAP;MACD;IACF;EACF;;EAED,IAAIrM,OAAO,IAAI,CAACyN,OAAZ,IAAuBvJ,QAAQ,CAACkJ,UAAD,CAAnC,EAAiD;IAC/C,MAAM;MAAEnQ,KAAK,EAAEyR,YAAT;MAAuBtJ;IAAvB,IAAmC8I,kBAAkB,CAAClO,OAAD,CAA3D;;IAEA,IAAIkM,OAAO,CAACwC,YAAD,CAAP,IAAyB,CAACtB,UAAU,CAACuB,KAAX,CAAiBD,YAAjB,CAA9B,EAA8D;MAC5DrC,KAAK,CAACvO,IAAD,CAAL,GAAc;QACZd,IAAI,EAAE2C,sBAAsB,CAACK,OADjB;QAEZoF,OAFY;QAGZoB,GAHY;QAIZ,GAAGkH,iBAAiB,CAAC/N,sBAAsB,CAACK,OAAxB,EAAiCoF,OAAjC;MAJR,CAAd;;MAMA,IAAI,CAACD,wBAAL,EAA+B;QAC7BmI,iBAAiB,CAAClI,OAAD,CAAjB;QACA,OAAOiH,KAAP;MACD;IACF;EACF;;EAED,IAAInM,QAAJ,EAAc;IACZ,IAAIwE,UAAU,CAACxE,QAAD,CAAd,EAA0B;MACxB,MAAMvB,MAAM,GAAG,MAAMuB,QAAQ,CAACkN,UAAD,CAA7B;MACA,MAAMwB,aAAa,GAAG7B,gBAAgB,CAACpO,MAAD,EAAS0O,QAAT,CAAtC;;MAEA,IAAIuB,aAAJ,EAAmB;QACjBvC,KAAK,CAACvO,IAAD,CAAL,GAAc,EACZ,GAAG8Q,aADS;UAEZ,GAAGlB,iBAAiB,CAClB/N,sBAAsB,CAACO,QADL,EAElB0O,aAAa,CAACxJ,OAFI;QAFR,CAAd;;QAOA,IAAI,CAACD,wBAAL,EAA+B;UAC7BmI,iBAAiB,CAACsB,aAAa,CAACxJ,OAAf,CAAjB;UACA,OAAOiH,KAAP;QACD;MACF;IACF,CAjBD,MAiBO,IAAI3O,QAAQ,CAACwC,QAAD,CAAZ,EAAwB;MAC7B,IAAI2O,gBAAgB,GAAG,EAAvB;;MAEA,KAAK,MAAM9P,GAAX,IAAkBmB,QAAlB,EAA4B;QAC1B,IAAI,CAACkB,aAAa,CAACyN,gBAAD,CAAd,IAAoC,CAAC1J,wBAAzC,EAAmE;UACjE;QACD;;QAED,MAAMyJ,aAAa,GAAG7B,gBAAgB,CACpC,MAAM7M,QAAQ,CAACnB,GAAD,CAAR,CAAcqO,UAAd,CAD8B,EAEpCC,QAFoC,EAGpCtO,GAHoC,CAAtC;;QAMA,IAAI6P,aAAJ,EAAmB;UACjBC,gBAAgB,GAAG,EACjB,GAAGD,aADc;YAEjB,GAAGlB,iBAAiB,CAAC3O,GAAD,EAAM6P,aAAa,CAACxJ,OAApB;UAFH,CAAnB;UAKAkI,iBAAiB,CAACsB,aAAa,CAACxJ,OAAf,CAAjB;;UAEA,IAAID,wBAAJ,EAA8B;YAC5BkH,KAAK,CAACvO,IAAD,CAAL,GAAc+Q,gBAAd;UACD;QACF;MACF;;MAED,IAAI,CAACzN,aAAa,CAACyN,gBAAD,CAAlB,EAAsC;QACpCxC,KAAK,CAACvO,IAAD,CAAL,GAAc;UACZ0I,GAAG,EAAE6G,QADO;UAEZ,GAAGwB;QAFS,CAAd;;QAIA,IAAI,CAAC1J,wBAAL,EAA+B;UAC7B,OAAOkH,KAAP;QACD;MACF;IACF;EACF;;EAEDiB,iBAAiB,CAAC,IAAD,CAAjB;EACA,OAAOjB,KAAP;AACD,CAnOD;;ACyDA,MAAMyC,cAAc,GAAG;EACrB3F,IAAI,EAAE9J,eAAe,CAACG,QADD;EAErBoN,cAAc,EAAEvN,eAAe,CAACE,QAFX;EAGrBwP,gBAAgB,EAAE;AAHG,CAAvB;;AAMgB,6BAIkC;EAAA,IAAhDjN,KAAgD,uEAAF,EAAE;EAEhD,IAAIkN,QAAQ,GAAG,EACb,GAAGF,cADU;IAEb,GAAGhN;EAFU,CAAf;EAIA,IAAIkB,UAAU,GAA4B;IACxCE,OAAO,EAAE,KAD+B;IAExCG,YAAY,EAAE,KAF0B;IAGxCF,WAAW,EAAE,EAH2B;IAIxCwJ,WAAW,EAAE,KAJ2B;IAKxCsC,WAAW,EAAE,CAL2B;IAMxC7L,aAAa,EAAE,EANyB;IAOxC8L,YAAY,EAAE,KAP0B;IAQxCC,kBAAkB,EAAE,KARoB;IASxC7L,OAAO,EAAE,KAT+B;IAUxCC,MAAM,EAAE;EAVgC,CAA1C;EAYA,IAAIqI,OAAO,GAAG,EAAd;;EACA,IAAIwD,cAAc,GAAG7H,WAAW,CAACyH,QAAQ,CAACzE,aAAV,CAAX,IAAuC,EAA5D;;EACA,IAAIzF,WAAW,GAAGkK,QAAQ,CAACK,gBAAT,GACd,EADc,GAEd9H,WAAW,CAAC6H,cAAD,CAFf;;EAGA,IAAIE,WAAW,GAAG;IAChBC,MAAM,EAAE,KADQ;IAEhBnD,KAAK,EAAE,KAFS;IAGhBjI,KAAK,EAAE;EAHS,CAAlB;EAKA,IAAIJ,MAAM,GAAU;IAClBqI,KAAK,EAAE,IAAIhF,GAAJ,EADW;IAElBoI,OAAO,EAAE,IAAIpI,GAAJ,EAFS;IAGlBqI,KAAK,EAAE,IAAIrI,GAAJ,EAHW;IAIlBjD,KAAK,EAAE,IAAIiD,GAAJ;EAJW,CAApB;EAMA,IAAIsI,kBAAJ;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,cAAc,GAAsC,EAAxD;EACA,MAAMlP,eAAe,GAAG;IACtBwC,OAAO,EAAE,KADa;IAEtBC,WAAW,EAAE,KAFS;IAGtBC,aAAa,EAAE,KAHO;IAItBC,YAAY,EAAE,KAJQ;IAKtBC,OAAO,EAAE,KALa;IAMtBC,MAAM,EAAE;EANc,CAAxB;EAQA,MAAMK,SAAS,GAA2B;IACxCO,KAAK,EAAE+D,aAAa,EADoB;IAExCuH,KAAK,EAAEvH,aAAa,EAFoB;IAGxCrE,KAAK,EAAEqE,aAAa;EAHoB,CAA1C;EAMA,MAAM2H,0BAA0B,GAAG3G,kBAAkB,CAAC8F,QAAQ,CAAC7F,IAAV,CAArD;EACA,MAAM2G,yBAAyB,GAAG5G,kBAAkB,CAAC8F,QAAQ,CAACpC,cAAV,CAApD;EACA,MAAMmD,gCAAgC,GACpCf,QAAQ,CAACnD,YAAT,KAA0BxM,eAAe,CAACK,GAD5C;;EAGA,MAAMsQ,QAAQ,GACStN,QAArB,IACCuN,IAAD,IAAiB;IACfC,YAAY,CAACP,KAAD,CAAZ;IACAA,KAAK,GAAG3I,MAAM,CAACmJ,UAAP,CAAkBzN,QAAlB,EAA4BuN,IAA5B,CAAR;EACD,CALH;;EAOA,MAAMG,YAAY,GAAG,MAAOC,gBAAP,IAAqC;IACxD,IAAI/M,OAAO,GAAG,KAAd;;IAEA,IAAI5C,eAAe,CAAC4C,OAApB,EAA6B;MAC3BA,OAAO,GAAG0L,QAAQ,CAACsB,QAAT,GACNlP,aAAa,CAAC,CAAC,MAAMmP,cAAc,EAArB,EAAyBhN,MAA1B,CADP,GAEN,MAAMiN,wBAAwB,CAAC5E,OAAD,EAAU,IAAV,CAFlC;;MAIA,IAAI,CAACyE,gBAAD,IAAqB/M,OAAO,KAAKN,UAAU,CAACM,OAAhD,EAAyD;QACvDN,UAAU,CAACM,OAAX,GAAqBA,OAArB;;QACAM,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;UACnBa;QADmB,CAArB;MAGD;IACF;;IAED,OAAOA,OAAP;EACD,CAjBD;;EAmBA,MAAMmN,iBAAiB,GAA0B,UAC/C3S,IAD+C,EAO7C;IAAA,IALF+G,MAKE,uEALO,EAKP;IAAA,IAJF6L,MAIE;IAAA,IAHFC,IAGE;IAAA,IAFFC,eAEE,uEAFgB,IAEhB;IAAA,IADFC,0BACE,uEAD2B,IAC3B;;IACF,IAAIF,IAAI,IAAID,MAAZ,EAAoB;MAClBpB,WAAW,CAACC,MAAZ,GAAqB,IAArB;;MACA,IAAIsB,0BAA0B,IAAIxT,KAAK,CAACC,OAAN,CAAcyD,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAjB,CAAlC,EAAqE;QACnE,MAAM8G,WAAW,GAAG8L,MAAM,CAAC3P,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAJ,EAAqB6S,IAAI,CAACG,IAA1B,EAAgCH,IAAI,CAACI,IAArC,CAA1B;QACAH,eAAe,IAAI7E,GAAG,CAACH,OAAD,EAAU9N,IAAV,EAAgB8G,WAAhB,CAAtB;MACD;;MAED,IACElE,eAAe,CAAC6C,MAAhB,IACAsN,0BADA,IAEAxT,KAAK,CAACC,OAAN,CAAcyD,GAAG,CAACiC,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CAAjB,CAHF,EAIE;QACA,MAAMyF,MAAM,GAAGmN,MAAM,CACnB3P,GAAG,CAACiC,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CADgB,EAEnB6S,IAAI,CAACG,IAFc,EAGnBH,IAAI,CAACI,IAHc,CAArB;QAKAH,eAAe,IAAI7E,GAAG,CAAC/I,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,EAA0ByF,MAA1B,CAAtB;QACAsJ,eAAe,CAAC7J,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CAAf;MACD;;MAED,IACE4C,eAAe,CAAC0C,aAAhB,IACAyN,0BADA,IAEAxT,KAAK,CAACC,OAAN,CAAcyD,GAAG,CAACiC,UAAU,CAACI,aAAZ,EAA2BtF,IAA3B,CAAjB,CAHF,EAIE;QACA,MAAMsF,aAAa,GAAGsN,MAAM,CAC1B3P,GAAG,CAACiC,UAAU,CAACI,aAAZ,EAA2BtF,IAA3B,CADuB,EAE1B6S,IAAI,CAACG,IAFqB,EAG1BH,IAAI,CAACI,IAHqB,CAA5B;QAKAH,eAAe,IAAI7E,GAAG,CAAC/I,UAAU,CAACI,aAAZ,EAA2BtF,IAA3B,EAAiCsF,aAAjC,CAAtB;MACD;;MAED,IAAI1C,eAAe,CAACyC,WAApB,EAAiC;QAC/BH,UAAU,CAACG,WAAX,GAAyB6N,cAAc,CAAC5B,cAAD,EAAiBtK,WAAjB,CAAvC;MACD;;MAEDlB,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;QACnBS,OAAO,EAAE+N,SAAS,CAACnT,IAAD,EAAO+G,MAAP,CADC;QAEnB1B,WAAW,EAAEH,UAAU,CAACG,WAFL;QAGnBI,MAAM,EAAEP,UAAU,CAACO,MAHA;QAInBD,OAAO,EAAEN,UAAU,CAACM;MAJD,CAArB;IAMD,CA5CD,MA4CO;MACLyI,GAAG,CAACjH,WAAD,EAAchH,IAAd,EAAoB+G,MAApB,CAAH;IACD;EACF,CAvDD;;EAyDA,MAAMqM,YAAY,GAAG,CAACpT,IAAD,EAA0BuO,KAA1B,KAA+C;IAClEN,GAAG,CAAC/I,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,EAA0BuO,KAA1B,CAAH;;IACAzI,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;MACnBc,MAAM,EAAEP,UAAU,CAACO;IADA,CAArB;EAGD,CALD;;EAOA,MAAM4N,mBAAmB,GAAG,CAC1BrT,IAD0B,EAE1BsT,oBAF0B,EAG1BnU,KAH0B,EAI1BuJ,GAJ0B,KAKxB;IACF,MAAMH,KAAK,GAAUtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAxB;;IAEA,IAAIuI,KAAJ,EAAW;MACT,MAAM3H,YAAY,GAAGqC,GAAG,CACtB+D,WADsB,EAEtBhH,IAFsB,EAGtBkB,WAAW,CAAC/B,KAAD,CAAX,GAAqB8D,GAAG,CAACqO,cAAD,EAAiBtR,IAAjB,CAAxB,GAAiDb,KAH3B,CAAxB;MAMA+B,WAAW,CAACN,YAAD,CAAX,IACC8H,GAAG,IAAKA,GAAwB,CAAC6K,cADlC,IAEAD,oBAFA,GAGIrF,GAAG,CACDjH,WADC,EAEDhH,IAFC,EAGDsT,oBAAoB,GAAG1S,YAAH,GAAkB4S,aAAa,CAACjL,KAAK,CAACC,EAAP,CAHlD,CAHP,GAQIiL,aAAa,CAACzT,IAAD,EAAOY,YAAP,CARjB;MAUA4Q,WAAW,CAAClD,KAAZ,IAAqBgE,YAAY,EAAjC;IACD;EACF,CA3BD;;EA6BA,MAAMoB,mBAAmB,GAAG,CAC1B1T,IAD0B,EAE1B2T,UAF0B,EAG1B7K,WAH0B,EAI1B8K,WAJ0B,EAK1BC,YAL0B,KAQxB;IACF,IAAIC,YAAY,GAAG,KAAnB;IACA,MAAMC,MAAM,GAAwD;MAClE/T;IADkE,CAApE;IAGA,MAAMgU,sBAAsB,GAAG/Q,GAAG,CAACiC,UAAU,CAACI,aAAZ,EAA2BtF,IAA3B,CAAlC;;IAEA,IAAI4C,eAAe,CAACwC,OAApB,EAA6B;MAC3B,MAAM6O,mBAAmB,GAAG/O,UAAU,CAACE,OAAvC;MAEAF,UAAU,CAACE,OAAX,GAAqB2O,MAAM,CAAC3O,OAAP,GAAiB+N,SAAS,EAA/C;MACAW,YAAY,GAAGG,mBAAmB,KAAKF,MAAM,CAAC3O,OAA9C;IACD;;IAED,IAAIxC,eAAe,CAACyC,WAAhB,KAAgC,CAACyD,WAAD,IAAgB8K,WAAhD,CAAJ,EAAkE;MAChE,MAAMM,oBAAoB,GAAGjR,GAAG,CAACiC,UAAU,CAACG,WAAZ,EAAyBrF,IAAzB,CAAhC;MACA,MAAMmU,sBAAsB,GAAGzJ,SAAS,CACtCzH,GAAG,CAACqO,cAAD,EAAiBtR,IAAjB,CADmC,EAEtC2T,UAFsC,CAAxC;MAKAQ,sBAAsB,GAClBvK,KAAK,CAAC1E,UAAU,CAACG,WAAZ,EAAyBrF,IAAzB,CADa,GAElBiO,GAAG,CAAC/I,UAAU,CAACG,WAAZ,EAAyCrF,IAAzC,EAA+C,IAA/C,CAFP;MAGA+T,MAAM,CAAC1O,WAAP,GAAqBH,UAAU,CAACG,WAAhC;MACAyO,YAAY,GACVA,YAAY,IACZI,oBAAoB,KAAKjR,GAAG,CAACiC,UAAU,CAACG,WAAZ,EAAyBrF,IAAzB,CAF9B;IAGD;;IAED,IAAI8I,WAAW,IAAI,CAACkL,sBAApB,EAA4C;MAC1C/F,GAAG,CAAC/I,UAAU,CAACI,aAAZ,EAA2CtF,IAA3C,EAAiD8I,WAAjD,CAAH;MACAiL,MAAM,CAACzO,aAAP,GAAuBJ,UAAU,CAACI,aAAlC;MACAwO,YAAY,GACVA,YAAY,IACXlR,eAAe,CAAC0C,aAAhB,IACC0O,sBAAsB,KAAKlL,WAH/B;IAID;;IAEDgL,YAAY,IAAID,YAAhB,IAAgC/N,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqBoP,MAArB,CAAhC;IAEA,OAAOD,YAAY,GAAGC,MAAH,GAAY,EAA/B;EACD,CAlDD;;EAoDA,MAAMK,mBAAmB,GAAG,OAC1BpU,IAD0B,EAE1BwF,OAF0B,EAG1B+I,KAH0B,EAI1B8F,UAJ0B,KAST;IACjB,MAAMC,kBAAkB,GAAGrR,GAAG,CAACiC,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CAA9B;IACA,MAAMuU,iBAAiB,GACrB3R,eAAe,CAAC4C,OAAhB,IAA2BN,UAAU,CAACM,OAAX,KAAuBA,OADpD;;IAGA,IAAIxB,KAAK,CAACwQ,UAAN,IAAoBjG,KAAxB,EAA+B;MAC7BqD,kBAAkB,GAAGM,QAAQ,CAAC,MAAMkB,YAAY,CAACpT,IAAD,EAAOuO,KAAP,CAAnB,CAA7B;MACAqD,kBAAkB,CAAC5N,KAAK,CAACwQ,UAAP,CAAlB;IACD,CAHD,MAGO;MACLpC,YAAY,CAACP,KAAD,CAAZ;MACAD,kBAAkB,GAAG,IAArB;MACArD,KAAK,GACDN,GAAG,CAAC/I,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,EAA0BuO,KAA1B,CADF,GAED3E,KAAK,CAAC1E,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CAFT;IAGD;;IAED,IACE,CAACuO,KAAK,GAAG,CAAC7D,SAAS,CAAC4J,kBAAD,EAAqB/F,KAArB,CAAb,GAA2C+F,kBAAjD,KACA,CAAChR,aAAa,CAAC+Q,UAAD,CADd,IAEAE,iBAHF,EAIE;MACA,MAAME,gBAAgB,GAAG,EACvB,GAAGJ,UADoB;QAEvB,IAAIE,iBAAiB,GAAG;UAAE/O;QAAF,CAAH,GAAiB,EAAtC,CAFuB;QAGvBC,MAAM,EAAEP,UAAU,CAACO,MAHI;QAIvBzF;MAJuB,CAAzB;MAOAkF,UAAU,GAAG,EACX,GAAGA,UADQ;QAEX,GAAGuP;MAFQ,CAAb;;MAKA3O,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB8P,gBAArB;IACD;;IAED3C,cAAc,CAAC9R,IAAD,CAAd;;IAEA,IACE4C,eAAe,CAAC2C,YAAhB,IACA,CAACxC,MAAM,CAACgE,MAAP,CAAc+K,cAAd,EAA8BlO,IAA9B,CAAoC8Q,CAAD,IAAOA,CAA1C,CAFH,EAGE;MACA5O,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;QACnBY,YAAY,EAAE;MADK,CAArB;;MAGAuM,cAAc,GAAG,EAAjB;IACD;EACF,CAxDD;;EA0DA,MAAMW,cAAc,GAAG,MAAOzS,IAAP,IACrBkR,QAAQ,CAACsB,QAAT,GACI,MAAMtB,QAAQ,CAACsB,QAAT,CACJ,EAAE,GAAGxL;EAAL,CADI,EAEJkK,QAAQ,CAACyD,OAFL,EAGJ9G,kBAAkB,CAChB7N,IAAI,IAAIiG,MAAM,CAACqI,KADC,EAEhBR,OAFgB,EAGhBoD,QAAQ,CAACnD,YAHO,EAIhBmD,QAAQ,CAAClD,yBAJO,CAHd,CADV,GAWK,EAZP;;EAcA,MAAM4G,2BAA2B,GAAG,MAAOzU,KAAP,IAAsC;IACxE,MAAM;MAAEsF;IAAF,IAAa,MAAMgN,cAAc,EAAvC;;IAEA,IAAItS,KAAJ,EAAW;MACT,KAAK,MAAMH,IAAX,IAAmBG,KAAnB,EAA0B;QACxB,MAAMoO,KAAK,GAAGtL,GAAG,CAACwC,MAAD,EAASzF,IAAT,CAAjB;QACAuO,KAAK,GACDN,GAAG,CAAC/I,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,EAA0BuO,KAA1B,CADF,GAED3E,KAAK,CAAC1E,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CAFT;MAGD;IACF,CAPD,MAOO;MACLkF,UAAU,CAACO,MAAX,GAAoBA,MAApB;IACD;;IAED,OAAOA,MAAP;EACD,CAfD;;EAiBA,MAAMiN,wBAAwB,GAAG,gBAC/BrK,MAD+B,EAE/BwM,oBAF+B,EAM7B;IAAA,IAHFF,OAGE,uEAHQ;MACRG,KAAK,EAAE;IADC,CAGR;;IACF,KAAK,MAAM9U,IAAX,IAAmBqI,MAAnB,EAA2B;MACzB,MAAME,KAAK,GAAGF,MAAM,CAACrI,IAAD,CAApB;;MAEA,IAAIuI,KAAJ,EAAW;QACT,MAAM;UAAEC,EAAE,EAAEuM,cAAN;UAAsB,GAAGpB;QAAzB,IAAwCpL,KAA9C;;QAEA,IAAIwM,cAAJ,EAAoB;UAClB,MAAMC,UAAU,GAAG,MAAM3F,aAAa,CACpC9G,KADoC,EAEpCtF,GAAG,CAAC+D,WAAD,EAAc+N,cAAc,CAAC/U,IAA7B,CAFiC,EAGpCiS,gCAHoC,EAIpCf,QAAQ,CAAClD,yBAJ2B,CAAtC;;UAOA,IAAIgH,UAAU,CAACD,cAAc,CAAC/U,IAAhB,CAAd,EAAqC;YACnC2U,OAAO,CAACG,KAAR,GAAgB,KAAhB;;YAEA,IAAID,oBAAJ,EAA0B;cACxB;YACD;UACF;;UAED,IAAI,CAACA,oBAAL,EAA2B;YACzBG,UAAU,CAACD,cAAc,CAAC/U,IAAhB,CAAV,GACIiO,GAAG,CACD/I,UAAU,CAACO,MADV,EAEDsP,cAAc,CAAC/U,IAFd,EAGDgV,UAAU,CAACD,cAAc,CAAC/U,IAAhB,CAHT,CADP,GAMI4J,KAAK,CAAC1E,UAAU,CAACO,MAAZ,EAAoBsP,cAAc,CAAC/U,IAAnC,CANT;UAOD;QACF;;QAED2T,UAAU,KACP,MAAMjB,wBAAwB,CAC7BiB,UAD6B,EAE7BkB,oBAF6B,EAG7BF,OAH6B,CADvB,CAAV;MAMD;IACF;;IAED,OAAOA,OAAO,CAACG,KAAf;EACD,CAlDD;;EAoDA,MAAM3N,gBAAgB,GAAG,MAAK;IAC5B,KAAK,MAAMnH,IAAX,IAAmBiG,MAAM,CAACyL,OAA1B,EAAmC;MACjC,MAAMnJ,KAAK,GAAUtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAxB;MAEAuI,KAAK,KACFA,KAAK,CAACC,EAAN,CAASI,IAAT,GACGL,KAAK,CAACC,EAAN,CAASI,IAAT,CAAc2E,KAAd,CAAqB7E,GAAD,IAAS,CAACyD,IAAI,CAACzD,GAAD,CAAlC,CADH,GAEG,CAACyD,IAAI,CAAC5D,KAAK,CAACC,EAAN,CAASE,GAAV,CAHN,CAAL,IAIEuM,UAAU,CAACjV,IAAD,CAJZ;IAKD;;IAEDiG,MAAM,CAACyL,OAAP,GAAiB,IAAIpI,GAAJ,EAAjB;EACD,CAZD;;EAcA,MAAM6J,SAAS,GAAe,CAACnT,IAAD,EAAO2G,IAAP,MAC5B3G,IAAI,IAAI2G,IAAR,IAAgBsH,GAAG,CAACjH,WAAD,EAAchH,IAAd,EAAoB2G,IAApB,CAAnB,EACA,CAAC+D,SAAS,CAACwK,SAAS,EAAV,EAAc5D,cAAd,CAFkB,CAA9B;;EAKA,MAAMpK,SAAS,GAAgC,CAC7C/G,KAD6C,EAE7CS,YAF6C,EAG7CuF,QAH6C,KAI3C;IACF,MAAMW,WAAW,GAAG,EAClB,IAAI0K,WAAW,CAAClD,KAAZ,GACAtH,WADA,GAEA9F,WAAW,CAACN,YAAD,CAAX,GACA0Q,cADA,GAEAlL,QAAQ,CAACjG,KAAD,CAAR,GACA;QAAE,CAACA,KAAD,GAASS;MAAX,CADA,GAEAA,YANJ;IADkB,CAApB;IAUA,OAAOoF,mBAAmB,CAAC7F,KAAD,EAAQ8F,MAAR,EAAgBa,WAAhB,EAA6BX,QAA7B,CAA1B;EACD,CAhBD;;EAkBA,MAAMgP,cAAc,GAClBnV,IADqB,IAGrBc,OAAO,CACLmC,GAAG,CACDuO,WAAW,CAAClD,KAAZ,GAAoBtH,WAApB,GAAkCsK,cADjC,EAEDtR,IAFC,EAGDgE,KAAK,CAACuN,gBAAN,GAAyBtO,GAAG,CAACqO,cAAD,EAAiBtR,IAAjB,EAAuB,EAAvB,CAA5B,GAAyD,EAHxD,CADE,CAHT;;EAWA,MAAMyT,aAAa,GAAG,UACpBzT,IADoB,EAEpBb,KAFoB,EAIlB;IAAA,IADF0N,OACE,uEADwB,EACxB;IACF,MAAMtE,KAAK,GAAUtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAxB;IACA,IAAI2T,UAAU,GAAYxU,KAA1B;;IAEA,IAAIoJ,KAAJ,EAAW;MACT,MAAMwM,cAAc,GAAGxM,KAAK,CAACC,EAA7B;;MAEA,IAAIuM,cAAJ,EAAoB;QAClB,CAACA,cAAc,CAACvQ,QAAhB,IACEyJ,GAAG,CAACjH,WAAD,EAAchH,IAAd,EAAoB4N,eAAe,CAACzO,KAAD,EAAQ4V,cAAR,CAAnC,CADL;QAGApB,UAAU,GACR1K,KAAK,IAAI0C,aAAa,CAACoJ,cAAc,CAACrM,GAAhB,CAAtB,IAA8CpJ,iBAAiB,CAACH,KAAD,CAA/D,GACI,EADJ,GAEIA,KAHN;;QAKA,IAAI6M,gBAAgB,CAAC+I,cAAc,CAACrM,GAAhB,CAApB,EAA0C;UACxC,CAAC,GAAGqM,cAAc,CAACrM,GAAf,CAAmBmE,OAAvB,EAAgCuI,OAAhC,CACGC,SAAD,IACGA,SAAS,CAACC,QAAV,GACC3B,UACD,CAACzI,QADA,CACSmK,SAAS,CAAClW,KADnB,CAHN;QAMD,CAPD,MAOO,IAAI4V,cAAc,CAACnM,IAAnB,EAAyB;UAC9B,IAAI9I,eAAe,CAACiV,cAAc,CAACrM,GAAhB,CAAnB,EAAyC;YACvCqM,cAAc,CAACnM,IAAf,CAAoBxF,MAApB,GAA6B,CAA7B,GACI2R,cAAc,CAACnM,IAAf,CAAoBwM,OAApB,CACGG,WAAD,IACE,CAACA,WAAW,CAAC/Q,QAAb,KACC+Q,WAAW,CAACxV,OAAZ,GAAsBR,KAAK,CAACC,OAAN,CAAcmU,UAAd,IACnB,CAAC,CAAEA,UAAiB,CAACpQ,IAAlB,CACAoD,IAAD,IAAkBA,IAAI,KAAK4O,WAAW,CAACpW,KADtC,CADgB,GAInBwU,UAAU,KAAK4B,WAAW,CAACpW,KAL/B,CAFJ,CADJ,GAUI4V,cAAc,CAACnM,IAAf,CAAoB,CAApB,MACCmM,cAAc,CAACnM,IAAf,CAAoB,CAApB,EAAuB7I,OAAvB,GAAiC,CAAC,CAAC4T,UADpC,CAVJ;UAYD,CAbD,MAaO;YACLoB,cAAc,CAACnM,IAAf,CAAoBwM,OAApB,CACGI,QAAD,IACGA,QAAQ,CAACzV,OAAT,GAAmByV,QAAQ,CAACrW,KAAT,KAAmBwU,UAF3C;UAID;QACF,CApBM,MAoBA,IAAInG,WAAW,CAACuH,cAAc,CAACrM,GAAhB,CAAf,EAAqC;UAC1CqM,cAAc,CAACrM,GAAf,CAAmBvJ,KAAnB,GAA2B,EAA3B;QACD,CAFM,MAEA;UACL4V,cAAc,CAACrM,GAAf,CAAmBvJ,KAAnB,GAA2BwU,UAA3B;;UAEA,IAAI,CAACoB,cAAc,CAACrM,GAAf,CAAmBxJ,IAAxB,EAA8B;YAC5B4G,SAAS,CAACO,KAAV,CAAgB1B,IAAhB,CAAqB;cACnB3E;YADmB,CAArB;UAGD;QACF;MACF;IACF;;IAED,CAAC6M,OAAO,CAAC+G,WAAR,IAAuB/G,OAAO,CAAC4I,WAAhC,KACE/B,mBAAmB,CACjB1T,IADiB,EAEjB2T,UAFiB,EAGjB9G,OAAO,CAAC4I,WAHS,EAIjB5I,OAAO,CAAC+G,WAJS,EAKjB,IALiB,CADrB;IASA/G,OAAO,CAAC6I,cAAR,IAA0BC,OAAO,CAAC3V,IAAD,CAAjC;EACD,CAvED;;EAyEA,MAAM4V,SAAS,GAAG,CAKhB5V,IALgB,EAMhBb,KANgB,EAOhB0N,OAPgB,KAQd;IACF,KAAK,MAAMgJ,QAAX,IAAuB1W,KAAvB,EAA8B;MAC5B,MAAMwU,UAAU,GAAGxU,KAAK,CAAC0W,QAAD,CAAxB;MACA,MAAMrP,SAAS,GAAG,GAAGxG,IAAQ,YAAQ,EAArC;MACA,MAAMuI,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAUtH,SAAV,CAAjB;MAEA,CAACP,MAAM,CAAC0L,KAAP,CAAavR,GAAb,CAAiBJ,IAAjB,KACC,CAAC6K,WAAW,CAAC8I,UAAD,CADb,IAEEpL,KAAK,IAAI,CAACA,KAAK,CAACC,EAFnB,KAGA,CAAC/I,YAAY,CAACkU,UAAD,CAHb,GAIIiC,SAAS,CAACpP,SAAD,EAAYmN,UAAZ,EAAwB9G,OAAxB,CAJb,GAKI4G,aAAa,CAACjN,SAAD,EAAYmN,UAAZ,EAAwB9G,OAAxB,CALjB;IAMD;EACF,CArBD;;EAuBA,MAAMiJ,QAAQ,GAAkC,UAC9C9V,IAD8C,EAE9Cb,KAF8C,EAI5C;IAAA,IADF0N,OACE,uEADQ,EACR;IACF,MAAMtE,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAjB;;IACA,MAAM+V,YAAY,GAAG9P,MAAM,CAAC0L,KAAP,CAAavR,GAAb,CAAiBJ,IAAjB,CAArB;;IACA,MAAMgW,UAAU,GAAGvM,WAAW,CAACtK,KAAD,CAA9B;IAEA8O,GAAG,CAACjH,WAAD,EAAchH,IAAd,EAAoBgW,UAApB,CAAH;;IAEA,IAAID,YAAJ,EAAkB;MAChBjQ,SAAS,CAAC6L,KAAV,CAAgBhN,IAAhB,CAAqB;QACnB3E,IADmB;QAEnB+G,MAAM,EAAEC;MAFW,CAArB;;MAKA,IACE,CAACpE,eAAe,CAACwC,OAAhB,IAA2BxC,eAAe,CAACyC,WAA5C,KACAwH,OAAO,CAAC+G,WAFV,EAGE;QACA1O,UAAU,CAACG,WAAX,GAAyB6N,cAAc,CAAC5B,cAAD,EAAiBtK,WAAjB,CAAvC;;QAEAlB,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;UACnB3E,IADmB;UAEnBqF,WAAW,EAAEH,UAAU,CAACG,WAFL;UAGnBD,OAAO,EAAE+N,SAAS,CAACnT,IAAD,EAAOgW,UAAP;QAHC,CAArB;MAKD;IACF,CAlBD,MAkBO;MACLzN,KAAK,IAAI,CAACA,KAAK,CAACC,EAAhB,IAAsB,CAAClJ,iBAAiB,CAAC0W,UAAD,CAAxC,GACIJ,SAAS,CAAC5V,IAAD,EAAOgW,UAAP,EAAmBnJ,OAAnB,CADb,GAEI4G,aAAa,CAACzT,IAAD,EAAOgW,UAAP,EAAmBnJ,OAAnB,CAFjB;IAGD;;IAEDhE,SAAS,CAAC7I,IAAD,EAAOiG,MAAP,CAAT,IAA2BH,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB,EAArB,CAA3B;;IACAmB,SAAS,CAACO,KAAV,CAAgB1B,IAAhB,CAAqB;MACnB3E;IADmB,CAArB;EAGD,CAvCD;;EAyCA,MAAMyB,QAAQ,GAAkB,MAAO9B,KAAP,IAAgB;IAC9C,MAAME,MAAM,GAAGF,KAAK,CAACE,MAArB;IACA,IAAIG,IAAI,GAAGH,MAAM,CAACG,IAAlB;IACA,MAAMuI,KAAK,GAAUtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAxB;;IAEA,IAAIuI,KAAJ,EAAW;MACT,IAAIgG,KAAJ;MACA,IAAI/I,OAAJ;MACA,MAAMmO,UAAU,GAAG9T,MAAM,CAACX,IAAP,GACfsU,aAAa,CAACjL,KAAK,CAACC,EAAP,CADE,GAEf9I,aAAa,CAACC,KAAD,CAFjB;MAGA,MAAMmJ,WAAW,GACfnJ,KAAK,CAACT,IAAN,KAAeiC,MAAM,CAACC,IAAtB,IAA8BzB,KAAK,CAACT,IAAN,KAAeiC,MAAM,CAACE,SADtD;MAEA,MAAM4U,oBAAoB,GACvB,CAACC,aAAa,CAAC3N,KAAK,CAACC,EAAP,CAAd,IACC,CAAC0I,QAAQ,CAACsB,QADX,IAEC,CAACvP,GAAG,CAACiC,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CAFL,IAGC,CAACuI,KAAK,CAACC,EAAN,CAAS2N,IAHZ,IAIAxH,cAAc,CACZ7F,WADY,EAEZ7F,GAAG,CAACiC,UAAU,CAACI,aAAZ,EAA2BtF,IAA3B,CAFS,EAGZkF,UAAU,CAAC2J,WAHC,EAIZmD,yBAJY,EAKZD,0BALY,CALhB;MAYA,MAAMqE,OAAO,GAAGvN,SAAS,CAAC7I,IAAD,EAAOiG,MAAP,EAAe6C,WAAf,CAAzB;MAEAmF,GAAG,CAACjH,WAAD,EAAchH,IAAd,EAAoB2T,UAApB,CAAH;;MAEA,IAAI7K,WAAJ,EAAiB;QACfP,KAAK,CAACC,EAAN,CAAShH,MAAT,IAAmB+G,KAAK,CAACC,EAAN,CAAShH,MAAT,CAAgB7B,KAAhB,CAAnB;QACAiS,kBAAkB,IAAIA,kBAAkB,CAAC,CAAD,CAAxC;MACD,CAHD,MAGO,IAAIrJ,KAAK,CAACC,EAAN,CAAS/G,QAAb,EAAuB;QAC5B8G,KAAK,CAACC,EAAN,CAAS/G,QAAT,CAAkB9B,KAAlB;MACD;;MAED,MAAM0U,UAAU,GAAGX,mBAAmB,CACpC1T,IADoC,EAEpC2T,UAFoC,EAGpC7K,WAHoC,EAIpC,KAJoC,CAAtC;MAOA,MAAM+K,YAAY,GAAG,CAACvQ,aAAa,CAAC+Q,UAAD,CAAd,IAA8B+B,OAAnD;MAEA,CAACtN,WAAD,IACEhD,SAAS,CAACO,KAAV,CAAgB1B,IAAhB,CAAqB;QACnB3E,IADmB;QAEnBd,IAAI,EAAES,KAAK,CAACT;MAFO,CAArB,CADF;;MAMA,IAAI+W,oBAAJ,EAA0B;QACxB,OACEpC,YAAY,IACZ/N,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;UAAE3E,IAAF;UAAQ,IAAIoW,OAAO,GAAG,EAAH,GAAQ/B,UAAnB;QAAR,CAArB,CAFF;MAID;;MAED,CAACvL,WAAD,IAAgBsN,OAAhB,IAA2BtQ,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB,EAArB,CAA3B;MAEAmN,cAAc,CAAC9R,IAAD,CAAd,GAAuB8R,cAAc,CAAC9R,IAAD,CAAd,GAAuB,CAAC,CAAxB,GAA4B,CAAnD;;MAEA8F,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;QACnBY,YAAY,EAAE;MADK,CAArB;;MAIA,IAAI2L,QAAQ,CAACsB,QAAb,EAAuB;QACrB,MAAM;UAAE/M;QAAF,IAAa,MAAMgN,cAAc,CAAC,CAACzS,IAAD,CAAD,CAAvC;QACA,MAAMqW,yBAAyB,GAAGC,iBAAiB,CACjDpR,UAAU,CAACO,MADsC,EAEjDqI,OAFiD,EAGjD9N,IAHiD,CAAnD;QAKA,MAAMuW,iBAAiB,GAAGD,iBAAiB,CACzC7Q,MADyC,EAEzCqI,OAFyC,EAGzCuI,yBAAyB,CAACrW,IAA1B,IAAkCA,IAHO,CAA3C;QAMAuO,KAAK,GAAGgI,iBAAiB,CAAChI,KAA1B;QACAvO,IAAI,GAAGuW,iBAAiB,CAACvW,IAAzB;QAEAwF,OAAO,GAAGlC,aAAa,CAACmC,MAAD,CAAvB;MACD,CAjBD,MAiBO;QACL8I,KAAK,GAAG,CACN,MAAMc,aAAa,CACjB9G,KADiB,EAEjBtF,GAAG,CAAC+D,WAAD,EAAchH,IAAd,CAFc,EAGjBiS,gCAHiB,EAIjBf,QAAQ,CAAClD,yBAJQ,CADb,EAONhO,IAPM,CAAR;QASAwF,OAAO,GAAG,MAAM8M,YAAY,CAAC,IAAD,CAA5B;MACD;;MAED/J,KAAK,CAACC,EAAN,CAAS2N,IAAT,IACER,OAAO,CACLpN,KAAK,CAACC,EAAN,CAAS2N,IADJ,CADT;MAKA/B,mBAAmB,CAACpU,IAAD,EAAOwF,OAAP,EAAgB+I,KAAhB,EAAuB8F,UAAvB,CAAnB;IACD;EACF,CAvGD;;EAyGA,MAAMsB,OAAO,GAAiC,gBAAO3V,IAAP,EAA6B;IAAA,IAAhB6M,OAAgB,uEAAN,EAAM;IACzE,IAAIrH,OAAJ;IACA,IAAIuL,gBAAJ;IACA,MAAMyF,UAAU,GAAG7S,qBAAqB,CAAC3D,IAAD,CAAxC;;IAEA8F,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;MACnBY,YAAY,EAAE;IADK,CAArB;;IAIA,IAAI2L,QAAQ,CAACsB,QAAb,EAAuB;MACrB,MAAM/M,MAAM,GAAG,MAAMmP,2BAA2B,CAC9C1T,WAAW,CAAClB,IAAD,CAAX,GAAoBA,IAApB,GAA2BwW,UADmB,CAAhD;MAIAhR,OAAO,GAAGlC,aAAa,CAACmC,MAAD,CAAvB;MACAsL,gBAAgB,GAAG/Q,IAAI,GACnB,CAACwW,UAAU,CAAC5S,IAAX,CAAiB5D,IAAD,IAAUiD,GAAG,CAACwC,MAAD,EAASzF,IAAT,CAA7B,CADkB,GAEnBwF,OAFJ;IAGD,CATD,MASO,IAAIxF,IAAJ,EAAU;MACf+Q,gBAAgB,GAAG,CACjB,MAAM0F,OAAO,CAAC7U,GAAR,CACJ4U,UAAU,CAACjQ,GAAX,CAAe,MAAOC,SAAP,IAAoB;QACjC,MAAM+B,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAUtH,SAAV,CAAjB;QACA,OAAO,MAAMkM,wBAAwB,CACnCnK,KAAK,IAAIA,KAAK,CAACC,EAAf,GAAoB;UAAE,CAAChC,SAAD,GAAa+B;QAAf,CAApB,GAA6CA,KADV,CAArC;MAGD,CALD,CADI,CADW,EASjBgF,KATiB,CASXhN,OATW,CAAnB;MAUA,EAAE,CAACwQ,gBAAD,IAAqB,CAAC7L,UAAU,CAACM,OAAnC,KAA+C8M,YAAY,EAA3D;IACD,CAZM,MAYA;MACLvB,gBAAgB,GAAGvL,OAAO,GAAG,MAAMkN,wBAAwB,CAAC5E,OAAD,CAA3D;IACD;;IAEDhI,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB,EACnB,IAAI,CAACyB,QAAQ,CAACpG,IAAD,CAAT,IACH4C,eAAe,CAAC4C,OAAhB,IAA2BA,OAAO,KAAKN,UAAU,CAACM,OAD/C,GAEA,EAFA,GAGA;QAAExF;MAAF,CAHJ,CADmB;MAKnB,IAAIkR,QAAQ,CAACsB,QAAT,GAAoB;QAAEhN;MAAF,CAApB,GAAkC,EAAtC,CALmB;MAMnBC,MAAM,EAAEP,UAAU,CAACO,MANA;MAOnBF,YAAY,EAAE;IAPK,CAArB;;IAUAsH,OAAO,CAAC6J,WAAR,IACE,CAAC3F,gBADH,IAEE3I,YAAY,CACV0F,OADU,EAET7M,GAAD,IAASgC,GAAG,CAACiC,UAAU,CAACO,MAAZ,EAAoBxE,GAApB,CAFF,EAGVjB,IAAI,GAAGwW,UAAH,GAAgBvQ,MAAM,CAACqI,KAHjB,CAFd;IAQA,OAAOyC,gBAAP;EACD,CArDD;;EAuDA,MAAMmE,SAAS,GACbsB,UADgD,IAI9C;IACF,MAAMzP,MAAM,GAAG,EACb,GAAGuK,cADU;MAEb,IAAIE,WAAW,CAAClD,KAAZ,GAAoBtH,WAApB,GAAkC,EAAtC;IAFa,CAAf;IAKA,OAAO9F,WAAW,CAACsV,UAAD,CAAX,GACHzP,MADG,GAEHX,QAAQ,CAACoQ,UAAD,CAAR,GACAvT,GAAG,CAAC8D,MAAD,EAASyP,UAAT,CADH,GAEAA,UAAU,CAACjQ,GAAX,CAAgBvG,IAAD,IAAUiD,GAAG,CAAC8D,MAAD,EAAS/G,IAAT,CAA5B,CAJJ;EAKD,CAfD;;EAiBA,MAAM2W,aAAa,GAAuC,CACxD3W,IADwD,EAExD2C,SAFwD,MAGpD;IACJiU,OAAO,EAAE,CAAC,CAAC3T,GAAG,CAAC,CAACN,SAAS,IAAIuC,UAAd,EAA0BO,MAA3B,EAAmCzF,IAAnC,CADV;IAEJoF,OAAO,EAAE,CAAC,CAACnC,GAAG,CAAC,CAACN,SAAS,IAAIuC,UAAd,EAA0BG,WAA3B,EAAwCrF,IAAxC,CAFV;IAGJ4O,SAAS,EAAE,CAAC,CAAC3L,GAAG,CAAC,CAACN,SAAS,IAAIuC,UAAd,EAA0BI,aAA3B,EAA0CtF,IAA1C,CAHZ;IAIJuO,KAAK,EAAEtL,GAAG,CAAC,CAACN,SAAS,IAAIuC,UAAd,EAA0BO,MAA3B,EAAmCzF,IAAnC;EAJN,CAHoD,CAA1D;;EAUA,MAAM6W,WAAW,GAAsC7W,IAAD,IAAS;IAC7DA,IAAI,GACA2D,qBAAqB,CAAC3D,IAAD,CAArB,CAA4BoV,OAA5B,CAAqC0B,SAAD,IAClClN,KAAK,CAAC1E,UAAU,CAACO,MAAZ,EAAoBqR,SAApB,CADP,CADA,GAIC5R,UAAU,CAACO,MAAX,GAAoB,EAJzB;;IAMAK,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;MACnBc,MAAM,EAAEP,UAAU,CAACO;IADA,CAArB;EAGD,CAVD;;EAYA,MAAMsR,QAAQ,GAAkC,CAAC/W,IAAD,EAAOuO,KAAP,EAAc1B,OAAd,KAAyB;IACvE,MAAMnE,GAAG,GAAG,CAAEzF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,EAAgB;MAAEwI,EAAE,EAAE;IAAN,CAAhB,CAAH,CAAyCA,EAAzC,IAA+C,EAAjD,EAAqDE,GAAjE;IAEAuF,GAAG,CAAC/I,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,EAA0B,EAC3B,GAAGuO,KADwB;MAE3B7F;IAF2B,CAA1B,CAAH;;IAKA5C,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;MACnB3E,IADmB;MAEnByF,MAAM,EAAEP,UAAU,CAACO,MAFA;MAGnBD,OAAO,EAAE;IAHU,CAArB;;IAMAqH,OAAO,IAAIA,OAAO,CAAC6J,WAAnB,IAAkChO,GAAlC,IAAyCA,GAAG,CAACC,KAA7C,IAAsDD,GAAG,CAACC,KAAJ,EAAtD;EACD,CAfD;;EAiBA,MAAMtC,KAAK,GAA+B,CACxCrG,IADwC,EAKxCY,YALwC,KAOxCgG,UAAU,CAAC5G,IAAD,CAAV,GACI8F,SAAS,CAACO,KAAV,CAAgB3B,SAAhB,CAA0B;IACxBC,IAAI,EAAGqS,IAAD,IACJhX,IAAI,CACFkH,SAAS,CAACzG,SAAD,EAAYG,YAAZ,CADP,EAEFoW,IAFE;EAFkB,CAA1B,CADJ,GAYI9P,SAAS,CACPlH,IADO,EAEPY,YAFO,EAGP,IAHO,CAnBf;;EAyBA,MAAMqU,UAAU,GAAoC,UAACjV,IAAD,EAAuB;IAAA,IAAhB6M,OAAgB,uEAAN,EAAM;;IACzE,KAAK,MAAMrG,SAAX,IAAwBxG,IAAI,GAAG2D,qBAAqB,CAAC3D,IAAD,CAAxB,GAAiCiG,MAAM,CAACqI,KAApE,EAA2E;MACzErI,MAAM,CAACqI,KAAP,CAAa2I,MAAb,CAAoBzQ,SAApB;;MACAP,MAAM,CAAC0L,KAAP,CAAasF,MAAb,CAAoBzQ,SAApB;;MAEA,IAAIvD,GAAG,CAAC6K,OAAD,EAAUtH,SAAV,CAAP,EAA6B;QAC3B,IAAI,CAACqG,OAAO,CAACqK,SAAb,EAAwB;UACtBtN,KAAK,CAACkE,OAAD,EAAUtH,SAAV,CAAL;UACAoD,KAAK,CAAC5C,WAAD,EAAcR,SAAd,CAAL;QACD;;QAED,CAACqG,OAAO,CAACsK,SAAT,IAAsBvN,KAAK,CAAC1E,UAAU,CAACO,MAAZ,EAAoBe,SAApB,CAA3B;QACA,CAACqG,OAAO,CAACuK,SAAT,IAAsBxN,KAAK,CAAC1E,UAAU,CAACG,WAAZ,EAAyBmB,SAAzB,CAA3B;QACA,CAACqG,OAAO,CAACwK,WAAT,IAAwBzN,KAAK,CAAC1E,UAAU,CAACI,aAAZ,EAA2BkB,SAA3B,CAA7B;QACA,CAAC0K,QAAQ,CAACK,gBAAV,IACE,CAAC1E,OAAO,CAACyK,gBADX,IAEE1N,KAAK,CAAC0H,cAAD,EAAiB9K,SAAjB,CAFP;MAGD;IACF;;IAEDV,SAAS,CAACO,KAAV,CAAgB1B,IAAhB,CAAqB,EAArB;;IAEAmB,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB,EACnB,GAAGO,UADgB;MAEnB,IAAI,CAAC2H,OAAO,CAACuK,SAAT,GAAqB,EAArB,GAA0B;QAAEhS,OAAO,EAAE+N,SAAS;MAApB,CAA9B;IAFmB,CAArB;;IAKA,CAACtG,OAAO,CAAC0K,WAAT,IAAwBjF,YAAY,EAApC;EACD,CA5BD;;EA8BA,MAAMkF,QAAQ,GAAkC,UAACxX,IAAD,EAAuB;IAAA,IAAhB6M,OAAgB,uEAAN,EAAM;IACrE,IAAItE,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAf;IACA,MAAMyX,iBAAiB,GAAGtI,SAAS,CAACtC,OAAO,CAACrI,QAAT,CAAnC;IAEAyJ,GAAG,CAACH,OAAD,EAAU9N,IAAV,EAAgB;MACjBwI,EAAE,EAAE,EACF,IAAID,KAAK,IAAIA,KAAK,CAACC,EAAf,GAAoBD,KAAK,CAACC,EAA1B,GAA+B;UAAEE,GAAG,EAAE;YAAE1I;UAAF;QAAP,CAAnC,CADE;QAEFA,IAFE;QAGFsO,KAAK,EAAE,IAHL;QAIF,GAAGzB;MAJD;IADa,CAAhB,CAAH;;IAQA5G,MAAM,CAACqI,KAAP,CAAahI,GAAb,CAAiBtG,IAAjB;;IAEAuI,KAAK,GACDkP,iBAAiB,IACjBxJ,GAAG,CACDjH,WADC,EAEDhH,IAFC,EAGD6M,OAAO,CAACrI,QAAR,GACI/D,SADJ,GAEIwC,GAAG,CAAC+D,WAAD,EAAchH,IAAd,EAAoBwT,aAAa,CAACjL,KAAK,CAACC,EAAP,CAAjC,CALN,CAFF,GASD6K,mBAAmB,CAACrT,IAAD,EAAO,IAAP,EAAa6M,OAAO,CAAC1N,KAArB,CATvB;IAWA,OAAO,EACL,IAAIsY,iBAAiB,GAAG;QAAEjT,QAAQ,EAAEqI,OAAO,CAACrI;MAApB,CAAH,GAAoC,EAAzD,CADK;MAEL,IAAI0M,QAAQ,CAAClD,yBAAT,GACA;QACE7L,QAAQ,EAAE,CAAC,CAAC0K,OAAO,CAAC1K,QADtB;QAEEJ,GAAG,EAAE2V,YAAY,CAAC7K,OAAO,CAAC9K,GAAT,CAFnB;QAGED,GAAG,EAAE4V,YAAY,CAAC7K,OAAO,CAAC/K,GAAT,CAHnB;QAIEG,SAAS,EAAEyV,YAAY,CAAS7K,OAAO,CAAC5K,SAAjB,CAJzB;QAKED,SAAS,EAAE0V,YAAY,CAAC7K,OAAO,CAAC7K,SAAT,CALzB;QAMEE,OAAO,EAAEwV,YAAY,CAAC7K,OAAO,CAAC3K,OAAT;MANvB,CADA,GASA,EATJ,CAFK;MAYLlC,IAZK;MAaLyB,QAbK;MAcLD,MAAM,EAAEC,QAdH;MAeLiH,GAAG,EAAGA,GAAD,IAAuC;QAC1C,IAAIA,GAAJ,EAAS;UACP8O,QAAQ,CAACxX,IAAD,EAAO6M,OAAP,CAAR;UACAtE,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAX;UAEA,MAAM2X,QAAQ,GAAGzW,WAAW,CAACwH,GAAG,CAACvJ,KAAL,CAAX,GACbuJ,GAAG,CAACkP,gBAAJ,GACGlP,GAAG,CAACkP,gBAAJ,CAAqB,uBAArB,EAA8C,CAA9C,KAA4DlP,GAD/D,GAEEA,GAHW,GAIbA,GAJJ;UAKA,MAAMmP,eAAe,GAAG5L,iBAAiB,CAAC0L,QAAD,CAAzC;UACA,MAAM/O,IAAI,GAAGL,KAAK,CAACC,EAAN,CAASI,IAAT,IAAiB,EAA9B;;UAEA,IACEiP,eAAe,GACXjP,IAAI,CAACrF,IAAL,CAAWuJ,MAAD,IAAiBA,MAAM,KAAK6K,QAAtC,CADW,GAEXA,QAAQ,KAAKpP,KAAK,CAACC,EAAN,CAASE,GAH5B,EAIE;YACA;UACD;;UAEDuF,GAAG,CAACH,OAAD,EAAU9N,IAAV,EAAgB;YACjBwI,EAAE,EAAE,EACF,GAAGD,KAAK,CAACC,EADP;cAEF,IAAIqP,eAAe,GACf;gBACEjP,IAAI,EAAE,CACJ,GAAGA,IAAI,CAACtI,MAAL,CAAY6L,IAAZ,CADC,EAEJwL,QAFI,EAGJ,IAAI,CAAC,CAACpY,KAAK,CAACC,OAAN,CAAcyD,GAAG,CAACqO,cAAD,EAAiBtR,IAAjB,CAAjB,CAAF,GACA,CAAC,EAAD,CADA,GAEA,EAFJ,CAHI,CADR;gBAQE0I,GAAG,EAAE;kBAAExJ,IAAI,EAAEyY,QAAQ,CAACzY,IAAjB;kBAAuBc;gBAAvB;cARP,CADe,GAWf;gBAAE0I,GAAG,EAAEiP;cAAP,CAXJ;YAFE;UADa,CAAhB,CAAH;UAkBAtE,mBAAmB,CAACrT,IAAD,EAAO,KAAP,EAAcS,SAAd,EAAyBkX,QAAzB,CAAnB;QACD,CAvCD,MAuCO;UACLpP,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,EAAgB,EAAhB,CAAX;;UAEA,IAAIuI,KAAK,CAACC,EAAV,EAAc;YACZD,KAAK,CAACC,EAAN,CAAS8F,KAAT,GAAiB,KAAjB;UACD;;UAED,CAAC4C,QAAQ,CAACK,gBAAT,IAA6B1E,OAAO,CAAC0E,gBAAtC,KACE,EAAEuG,kBAAkB,CAAC7R,MAAM,CAAC0L,KAAR,EAAe3R,IAAf,CAAlB,IAA0CwR,WAAW,CAACC,MAAxD,CADF,IAEExL,MAAM,CAACyL,OAAP,CAAepL,GAAf,CAAmBtG,IAAnB,CAFF;QAGD;MACF;IAlEI,CAAP;EAoED,CA7FD;;EA+FA,MAAM+X,YAAY,GAChB,CAACC,OAAD,EAAUC,SAAV,KAAwB,MAAOC,CAAP,IAAY;IAClC,IAAIA,CAAJ,EAAO;MACLA,CAAC,CAACC,cAAF,IAAoBD,CAAC,CAACC,cAAF,EAApB;MACAD,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACE,OAAF,EAAb;IACD;;IACD,IAAIC,iBAAiB,GAAG,IAAxB;IACA,IAAIvR,WAAW,GAAQ2C,WAAW,CAACzC,WAAD,CAAlC;;IAEAlB,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;MACnByM,YAAY,EAAE;IADK,CAArB;;IAIA,IAAI;MACF,IAAIF,QAAQ,CAACsB,QAAb,EAAuB;QACrB,MAAM;UAAE/M,MAAF;UAAUsB;QAAV,IAAqB,MAAM0L,cAAc,EAA/C;QACAvN,UAAU,CAACO,MAAX,GAAoBA,MAApB;QACAqB,WAAW,GAAGC,MAAd;MACD,CAJD,MAIO;QACL,MAAM2L,wBAAwB,CAAC5E,OAAD,CAA9B;MACD;;MAED,IAAIxK,aAAa,CAAC4B,UAAU,CAACO,MAAZ,CAAjB,EAAsC;QACpCK,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;UACnBc,MAAM,EAAE,EADW;UAEnB2L,YAAY,EAAE;QAFK,CAArB;;QAIA,MAAM4G,OAAO,CAAClR,WAAD,EAAcoR,CAAd,CAAb;MACD,CAND,MAMO;QACL,IAAID,SAAJ,EAAe;UACb,MAAMA,SAAS,CAAC,EAAE,GAAG/S,UAAU,CAACO;UAAhB,CAAD,EAA2ByS,CAA3B,CAAf;QACD;;QAEDhH,QAAQ,CAACD,gBAAT,IACE7I,YAAY,CACV0F,OADU,EAET7M,GAAD,IAASgC,GAAG,CAACiC,UAAU,CAACO,MAAZ,EAAoBxE,GAApB,CAFF,EAGVgF,MAAM,CAACqI,KAHG,CADd;MAMD;IACF,CA3BD,CA2BE,OAAOgK,GAAP,EAAY;MACZD,iBAAiB,GAAG,KAApB;MACA,MAAMC,GAAN;IACD,CA9BD,SA8BU;MACRpT,UAAU,CAAC2J,WAAX,GAAyB,IAAzB;;MACA/I,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;QACnBkK,WAAW,EAAE,IADM;QAEnBuC,YAAY,EAAE,KAFK;QAGnBC,kBAAkB,EAChB/N,aAAa,CAAC4B,UAAU,CAACO,MAAZ,CAAb,IAAoC4S,iBAJnB;QAKnBlH,WAAW,EAAEjM,UAAU,CAACiM,WAAX,GAAyB,CALnB;QAMnB1L,MAAM,EAAEP,UAAU,CAACO;MANA,CAArB;IAQD;EACF,CAtDH;;EAwDA,MAAM8S,UAAU,GAAoC,UAACvY,IAAD,EAAuB;IAAA,IAAhB6M,OAAgB,uEAAN,EAAM;;IACzE,IAAI5J,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAP,EAAwB;MACtB,IAAIkB,WAAW,CAAC2L,OAAO,CAACjM,YAAT,CAAf,EAAuC;QACrCkV,QAAQ,CAAC9V,IAAD,EAAOiD,GAAG,CAACqO,cAAD,EAAiBtR,IAAjB,CAAV,CAAR;MACD,CAFD,MAEO;QACL8V,QAAQ,CAAC9V,IAAD,EAAO6M,OAAO,CAACjM,YAAf,CAAR;QACAqN,GAAG,CAACqD,cAAD,EAAiBtR,IAAjB,EAAuB6M,OAAO,CAACjM,YAA/B,CAAH;MACD;;MAED,IAAI,CAACiM,OAAO,CAACwK,WAAb,EAA0B;QACxBzN,KAAK,CAAC1E,UAAU,CAACI,aAAZ,EAA2BtF,IAA3B,CAAL;MACD;;MAED,IAAI,CAAC6M,OAAO,CAACuK,SAAb,EAAwB;QACtBxN,KAAK,CAAC1E,UAAU,CAACG,WAAZ,EAAyBrF,IAAzB,CAAL;QACAkF,UAAU,CAACE,OAAX,GAAqByH,OAAO,CAACjM,YAAR,GACjBuS,SAAS,CAACnT,IAAD,EAAOiD,GAAG,CAACqO,cAAD,EAAiBtR,IAAjB,CAAV,CADQ,GAEjBmT,SAAS,EAFb;MAGD;;MAED,IAAI,CAACtG,OAAO,CAACsK,SAAb,EAAwB;QACtBvN,KAAK,CAAC1E,UAAU,CAACO,MAAZ,EAAoBzF,IAApB,CAAL;QACA4C,eAAe,CAAC4C,OAAhB,IAA2B8M,YAAY,EAAvC;MACD;;MAEDxM,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB,EAAE,GAAGO;MAAL,CAArB;IACD;EACF,CA3BD;;EA6BA,MAAMsT,KAAK,GAA+B,UACxCtS,UADwC,EAGtC;IAAA,IADFuS,gBACE,uEADiB,EACjB;IACF,MAAMC,aAAa,GAAGxS,UAAU,IAAIoL,cAApC;IACA,MAAMqH,kBAAkB,GAAGlP,WAAW,CAACiP,aAAD,CAAtC;IACA,MAAM3R,MAAM,GACVb,UAAU,IAAI,CAAC5C,aAAa,CAAC4C,UAAD,CAA5B,GACIyS,kBADJ,GAEIrH,cAHN;;IAKA,IAAI,CAACmH,gBAAgB,CAACG,iBAAtB,EAAyC;MACvCtH,cAAc,GAAGoH,aAAjB;IACD;;IAED,IAAI,CAACD,gBAAgB,CAACI,UAAtB,EAAkC;MAChC,IAAIJ,gBAAgB,CAACK,eAArB,EAAsC;QACpC,KAAK,MAAMtS,SAAX,IAAwBP,MAAM,CAACqI,KAA/B,EAAsC;UACpCrL,GAAG,CAACiC,UAAU,CAACG,WAAZ,EAAyBmB,SAAzB,CAAH,GACIyH,GAAG,CAAClH,MAAD,EAASP,SAAT,EAAoBvD,GAAG,CAAC+D,WAAD,EAAcR,SAAd,CAAvB,CADP,GAEIsP,QAAQ,CACNtP,SADM,EAENvD,GAAG,CAAC8D,MAAD,EAASP,SAAT,CAFG,CAFZ;QAMD;MACF,CATD,MASO;QACL,IAAIyC,KAAK,IAAI/H,WAAW,CAACgF,UAAD,CAAxB,EAAsC;UACpC,KAAK,MAAMlG,IAAX,IAAmBiG,MAAM,CAACqI,KAA1B,EAAiC;YAC/B,MAAM/F,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAjB;;YACA,IAAIuI,KAAK,IAAIA,KAAK,CAACC,EAAnB,EAAuB;cACrB,MAAMuM,cAAc,GAAGxV,KAAK,CAACC,OAAN,CAAc+I,KAAK,CAACC,EAAN,CAASI,IAAvB,IACnBL,KAAK,CAACC,EAAN,CAASI,IAAT,CAAc,CAAd,CADmB,GAEnBL,KAAK,CAACC,EAAN,CAASE,GAFb;;cAIA,IAAI;gBACFiD,aAAa,CAACoJ,cAAD,CAAb,IACEA,cAAc,CAACgE,OAAf,CAAuB,MAAvB,EAAgCP,KAAhC,EADF;gBAEA;cACD,CAJD,CAIE,WAAM,CAAE;YACX;UACF;QACF;;QAED1K,OAAO,GAAG,EAAV;MACD;;MAED9G,WAAW,GAAGhD,KAAK,CAACuN,gBAAN,GACVkH,gBAAgB,CAACG,iBAAjB,GACEnP,WAAW,CAAC6H,cAAD,CADb,GAEE,EAHQ,GAIVqH,kBAJJ;;MAMA7S,SAAS,CAAC6L,KAAV,CAAgBhN,IAAhB,CAAqB;QACnBoC;MADmB,CAArB;;MAIAjB,SAAS,CAACO,KAAV,CAAgB1B,IAAhB,CAAqB;QACnBoC;MADmB,CAArB;IAGD;;IAEDd,MAAM,GAAG;MACPqI,KAAK,EAAE,IAAIhF,GAAJ,EADA;MAEPoI,OAAO,EAAE,IAAIpI,GAAJ,EAFF;MAGPqI,KAAK,EAAE,IAAIrI,GAAJ,EAHA;MAIPjD,KAAK,EAAE,IAAIiD,GAAJ,EAJA;MAKP7C,QAAQ,EAAE,KALH;MAMPkC,KAAK,EAAE;IANA,CAAT;IASA6I,WAAW,CAAClD,KAAZ,GACE,CAAC1L,eAAe,CAAC4C,OAAjB,IAA4B,CAAC,CAACiT,gBAAgB,CAAClB,WADjD;IAGA/F,WAAW,CAACnL,KAAZ,GAAoB,CAAC,CAACrC,KAAK,CAACuN,gBAA5B;;IAEAzL,SAAS,CAACC,KAAV,CAAgBpB,IAAhB,CAAqB;MACnBwM,WAAW,EAAEsH,gBAAgB,CAACO,eAAjB,GACT9T,UAAU,CAACiM,WADF,GAET,CAHe;MAInB/L,OAAO,EACLqT,gBAAgB,CAACrB,SAAjB,IAA8BqB,gBAAgB,CAACK,eAA/C,GACI5T,UAAU,CAACE,OADf,GAEI,CAAC,EACCqT,gBAAgB,CAACG,iBAAjB,IACA,CAAClO,SAAS,CAACxE,UAAD,EAAaoL,cAAb,CAFX,CAPY;MAWnBzC,WAAW,EAAE4J,gBAAgB,CAACQ,eAAjB,GACT/T,UAAU,CAAC2J,WADF,GAET,KAbe;MAcnBxJ,WAAW,EACToT,gBAAgB,CAACrB,SAAjB,IAA8BqB,gBAAgB,CAACK,eAA/C,GACI5T,UAAU,CAACG,WADf,GAEIoT,gBAAgB,CAACG,iBAAjB,IAAsC1S,UAAtC,GACAgN,cAAc,CAAC5B,cAAD,EAAiBpL,UAAjB,CADd,GAEA,EAnBa;MAoBnBZ,aAAa,EAAEmT,gBAAgB,CAACpB,WAAjB,GACXnS,UAAU,CAACI,aADA,GAEV,EAtBc;MAuBnBG,MAAM,EAAEgT,gBAAgB,CAACS,UAAjB,GACJhU,UAAU,CAACO,MADP,GAEH,EAzBc;MA0BnB2L,YAAY,EAAE,KA1BK;MA2BnBC,kBAAkB,EAAE;IA3BD,CAArB;EA6BD,CAxGD;;EA0GA,MAAM8H,QAAQ,GAAkC,UAACnZ,IAAD,EAAuB;IAAA,IAAhB6M,OAAgB,uEAAN,EAAM;;IACrE,MAAMtE,KAAK,GAAGtF,GAAG,CAAC6K,OAAD,EAAU9N,IAAV,CAAH,CAAmBwI,EAAjC;;IACA,MAAMmP,QAAQ,GAAGpP,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACK,IAAN,CAAW,CAAX,CAAb,GAA6BL,KAAK,CAACG,GAApD;IACAiP,QAAQ,CAAChP,KAAT;IACAkE,OAAO,CAACuM,YAAR,IAAwBzB,QAAQ,CAAC0B,MAAT,EAAxB;EACD,CALD;;EAOA,OAAO;IACLtU,OAAO,EAAE;MACPyS,QADO;MAEPvC,UAFO;MAGP0B,aAHO;MAIPlE,cAJO;MAKPvL,SALO;MAMPiM,SANO;MAOPb,YAPO;MAQPnL,gBARO;MASPwL,iBATO;MAUPwC,cAVO;MAWPrP,SAXO;MAYPlD,eAZO;;MAaP,IAAIkL,OAAJ,GAAW;QACT,OAAOA,OAAP;MACD,CAfM;;MAgBP,IAAI9G,WAAJ,GAAe;QACb,OAAOA,WAAP;MACD,CAlBM;;MAmBP,IAAIwK,WAAJ,GAAe;QACb,OAAOA,WAAP;MACD,CArBM;;MAsBP,IAAIA,WAAJ,CAAgBrS,KAAhB,EAAqB;QACnBqS,WAAW,GAAGrS,KAAd;MACD,CAxBM;;MAyBP,IAAImS,cAAJ,GAAkB;QAChB,OAAOA,cAAP;MACD,CA3BM;;MA4BP,IAAIrL,MAAJ,GAAU;QACR,OAAOA,MAAP;MACD,CA9BM;;MA+BP,IAAIA,MAAJ,CAAW9G,KAAX,EAAgB;QACd8G,MAAM,GAAG9G,KAAT;MACD,CAjCM;;MAkCP,IAAI+F,UAAJ,GAAc;QACZ,OAAOA,UAAP;MACD,CApCM;;MAqCP,IAAIA,UAAJ,CAAe/F,KAAf,EAAoB;QAClB+F,UAAU,GAAG/F,KAAb;MACD,CAvCM;;MAwCP,IAAI+R,QAAJ,GAAY;QACV,OAAOA,QAAP;MACD,CA1CM;;MA2CP,IAAIA,QAAJ,CAAa/R,KAAb,EAAkB;QAChB+R,QAAQ,GAAG,EACT,GAAGA,QADM;UAET,GAAG/R;QAFM,CAAX;MAID;;IAhDM,CADJ;IAmDLwW,OAnDK;IAoDL6B,QApDK;IAqDLO,YArDK;IAsDL1R,KAtDK;IAuDLyP,QAvDK;IAwDLZ,SAxDK;IAyDLsD,KAzDK;IA0DLD,UA1DK;IA2DL1B,WA3DK;IA4DL5B,UA5DK;IA6DL8B,QA7DK;IA8DLoC,QA9DK;IA+DLxC;EA/DK,CAAP;AAiEF;AC5uCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;;;AACa,mBAIkC;EAAA,IAAhD3S,KAAgD,uEAAF,EAAE;;EAEhD,MAAMsV,YAAY,GAAGhX,0BAAM4B,MAAN5B,EAArB;;EAGA,MAAM,CAACK,SAAD,EAAYqC,eAAZ,IAA+B1C,0BAAM2C,QAAN3C,CAAwC;IAC3E8C,OAAO,EAAE,KADkE;IAE3EG,YAAY,EAAE,KAF6D;IAG3EF,WAAW,EAAE,EAH8D;IAI3EwJ,WAAW,EAAE,KAJ8D;IAK3EsC,WAAW,EAAE,CAL8D;IAM3E7L,aAAa,EAAE,EAN4D;IAO3E8L,YAAY,EAAE,KAP6D;IAQ3EC,kBAAkB,EAAE,KARuD;IAS3E7L,OAAO,EAAE,KATkE;IAU3EC,MAAM,EAAE;EAVmE,CAAxCnD,CAArC;;EAaA,IAAIgX,YAAY,CAACnV,OAAjB,EAA0B;IACxBmV,YAAY,CAACnV,OAAb,CAAqBY,OAArB,CAA6BmM,QAA7B,GAAwClN,KAAxC;EACD,CAFD,MAEO;IACLsV,YAAY,CAACnV,OAAb,GAAuB,EACrB,GAAGoV,iBAAiB,CAACvV,KAAD,CADC;MAErBrB;IAFqB,CAAvB;EAID;;EAED,MAAMoC,OAAO,GAAGuU,YAAY,CAACnV,OAAb,CAAqBY,OAArC;EAEA,MAAMH,QAAQ,GAAGtC,0BAAMsD,WAANtD,CACdnD,KAAD,IAAuB;IACrB,IAAI0G,qBAAqB,CAAC1G,KAAD,EAAQ4F,OAAO,CAACnC,eAAhB,EAAiC,IAAjC,CAAzB,EAAiE;MAC/DmC,OAAO,CAACG,UAAR,GAAqB,EACnB,GAAGH,OAAO,CAACG,UADQ;QAEnB,GAAG/F;MAFgB,CAArB;MAKA6F,eAAe,CAAC,EAAE,GAAGD,OAAO,CAACG;MAAb,CAAD,CAAf;IACD;EACF,CAVc5C,EAWf,CAACyC,OAAD,CAXezC,CAAjB;EAcAyB,YAAY,CAAC;IACXU,OAAO,EAAEM,OAAO,CAACe,SAAR,CAAkBC,KADhB;IAEXnB;EAFW,CAAD,CAAZ;EAKAtC,0BAAM8B,SAAN9B,CAAgB,MAAK;IACnB,IAAI,CAACyC,OAAO,CAACyM,WAAR,CAAoBlD,KAAzB,EAAgC;MAC9BvJ,OAAO,CAACnC,eAAR,CAAwB4C,OAAxB,IAAmCT,OAAO,CAACuN,YAAR,EAAnC;MACAvN,OAAO,CAACyM,WAAR,CAAoBlD,KAApB,GAA4B,IAA5B;IACD;;IACD,IAAIvJ,OAAO,CAACyM,WAAR,CAAoBnL,KAAxB,EAA+B;MAC7BtB,OAAO,CAACyM,WAAR,CAAoBnL,KAApB,GAA4B,KAA5B;;MACAtB,OAAO,CAACe,SAAR,CAAkBC,KAAlB,CAAwBpB,IAAxB,CAA6B,EAA7B;IACD;;IACDI,OAAO,CAACoC,gBAAR;EACD,CAVD7E;EAYAgX,YAAY,CAACnV,OAAb,CAAqBxB,SAArB,GAAiCD,iBAAiB,CAChDC,SADgD,EAEhDoC,OAAO,CAACnC,eAFwC,CAAlD;EAKA,OAAO0W,YAAY,CAACnV,OAApB;AACF;;AClHA,aAAe;EACbqV,OAAO,EAAE,SADI;EAEbC,SAAS,EAAE,SAFE;EAGbC,SAAS,EAAE,SAHE;EAIbC,IAAI,EAAE,SAJO;EAKbC,SAAS,EAAE,SALE;EAMbC,SAAS,EAAE,SANE;EAObC,UAAU,EAAE,SAPC;EAQbC,IAAI,EAAE,SARO;EASbC,KAAK,EAAE;AATM,CAAf;ACIO,MAAMC,qBAAqB,GAAG;EACnCC,QAAQ,EAAE,EADyB;EAEnCC,UAAU,EAAE;AAFuB,CAA9B;AAKP,MAAMC,MAAM,GAAGC,2BAAOC,MAAoC;;;;;;;AAO1C,gBAACtW,KAAD,IACZA,KAAK,CAACuW,cAAN,GAAuB,EAAvB,GAA4B,GAAGC,MAAM,CAACb,IAAiB;;;;AAIzC,wBAAM,CAACD,SAAS;;CAZlC;AAgBAU,MAAM,CAACK,YAAP,GAAsB;EAAEvb,IAAI,EAAE;AAAR,CAAtB;AAEA,MAAMwb,YAAY,GAAGL,2BAAOD,MAAPC,CAAc;;;;;;;;;;;;;;;AAejB,wBAAM,CAACX,SAAS;;;;;;CAflC;AAuBA,MAAMiB,KAAK,GAAGN,2BAAO3S,KAAK;;;;;;;;CAA1B;AAUA,MAAMkT,KAAK,GAAGP,2BAAOQ,KAAK;;;;AAIR,wBAAM,CAACrB,OAAO;;CAJhC;;ACjDA,MAAMsB,MAAM,GAAG,SAAmC;EAAA,IAAlC;IAAEC,UAAF;IAAchW;EAAd,CAAkC;EAChD,MAAM;IAAES;EAAF,IAAcX,YAAY,CAAC;IAC/BE;EAD+B,CAAD,CAAhC;EAIA,OACEzC,gBACE,cADFA,CACE,QADFA,EACE;IAAA0Y,KAAK,EAAE;MACLC,OAAO,EAAE,MADJ;MAELC,UAAU,EAAE,QAFP;MAGLC,WAAW,EAAE,EAHR;MAILC,eAAe,EAAE;IAJZ;EAAP,CADF9Y,EAQEA;IACE0Y,KAAK,EACAjY,wDAAqB;MACxBsY,MAAM,EAAE,CADgB;MAExBC,OAAO,EAAE,CAFe;MAGxBC,UAAU,EAAE,GAHY;MAIxBrB,QAAQ,EAAE;IAJc,CAArB;EAFP,GASE5X;IACE0Y,KAAK,EAAE;MACLQ,UAAU,EAAE,UADP;MAELC,KAAK,EAAEjW,OAAO,GAAGgV,MAAM,CAACR,KAAV,GAAkBQ,MAAM,CAACZ;IAFlC;EADT,GAOO,QAPPtX,CATFA,EAgBU,GAhBVA,EAkBI,iBAlBJA,CARFA,EA2BEA,+BAACoY,YAADpY,EAAc;IAAAoZ,KAAK,EAAC,iBAAN;IAAwBC,OAAO,EAAE,MAAMZ,UAAU,CAAC,KAAD;EAAjD,CAAdzY,EAEe,QAFfA,CA3BFA,CADF;AAiCD,CAtCD;;ACYA,MAAMsZ,UAAU,GAAG,SAYP;EAAA,IAZQ;IAClBC,SADkB;IAElBC,QAFkB;IAGlB1W,OAHkB;IAIlB2W,YAJkB;IAKlBC,QALkB;IAMlBC,YANkB;IAOlBC,SAPkB;IAQlBhd,IARkB;IASlB0P,SATkB;IAUlB5O,IAVkB;IAWlBmc;EAXkB,CAYR;EACV,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B/Z,gBAAK,CAAC2C,QAAN3C,CAAe,KAAfA,CAAhC;EAEAA,gBAAK,CAAC8B,SAAN9B,CAAgB,MAAK;IACnB+Z,WAAW,CAAC,CAACF,WAAF,CAAX;EACD,CAFD7Z,EAEG,CAAC6Z,WAAD,CAFH7Z;EAIA,IAAInD,KAAK,GAAG4c,YAAY,GAAG9Y,GAAG,CAAC8Y,YAAD,EAAe/b,IAAf,CAAN,GAA6B,EAArD;EACA,IAAIsc,mBAAmB,GAAG,KAA1B;;EAEA,IAAI,CAACpb,gCAAY/B,KAAZ+B,CAAL,EAAyB;IACvB,IAAItB,6BAAST,KAATS,CAAJ,EAAqB;MACnB,IAAI;QACFT,KAAK,GACHmD,gBAAK,cAALA,CAAK,KAALA,EAAK;UAAA0Y,KAAK,EAAE;YAAEK,MAAM,EAAE;UAAV;QAAP,CAAL/Y,EACEA,gBAAM,cAANA,CAAM,MAANA,EAAM;UAAA0Y,KAAK,EAAE;YAAEd,QAAQ,EAAE;UAAZ;QAAP,CAAN5X,EACGia,IAAI,CAACC,SAAL,CAAerd,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CADHmD,CADFA,CADF;QAOAga,mBAAmB,GAAG,IAAtB;MACD,CATD,CASE,OAAMG,EAAN,EAAM;QACNtd,KAAK,GAAGmD,+DAAR;MACD;IACF,CAbD,MAaO,IAAI,OAAOnD,KAAP,KAAiB,QAArB,EAA+B;MACpCA,KAAK,GAAGud,MAAM,CAACvd,KAAD,CAAd;IACD;EACF;;EAED,OACEmD,+BAACsY,KAADtY,EAAM;IACJ0Y,KAAK,EAAE;MACLM,OAAO,EAAE,SADJ;MAELqB,KAAK,EAAE,MAFF;MAGLnB,UAAU,EAAE,SAHP;MAILoB,UAAU,EAAE,aACVd,QAAQ,GAAGtB,MAAM,CAACf,SAAV,GAAsBe,MAAM,CAACV,UACrC,EANG;MAOL+C,UAAU,EAAE;IAPP;EADH,CAANva,EAWEA,8CACEA,2CACEA;IAAIwa,MAAM,EAAC,KAAX;IAAiB9B,KAAK,EAAE;MAAE2B,KAAK,EAAE,EAAT;MAAaxC,UAAU,EAAE;IAAzB;EAAxB,GACE7X,+BAAC8X,MAAD9X,EACE;IAAAqZ,OAAO,EAAE,MAAMU,WAAW,CAAC,CAACD,QAAF,CAA1B;IACAV,KAAK,EAAC,oBADN;IAEAV,KAAK,EAAE;MACL+B,MAAM,EAAE,aAAavC,MAAM,CAACd,SAAW,EADlC;MAELsD,YAAY,EAAE,CAFT;MAGL1B,OAAO,EAAE,SAHJ;MAILL,OAAO,EAAE,cAJJ;MAKLf,QAAQ,EAAE,CALL;MAMLC,UAAU,EAAE,MANP;MAOLwC,KAAK,EAAE,EAPF;MAQLM,SAAS,EAAE,QARN;MASLC,WAAW,EAAE;IATR;EAFP,CADF5a,EAeG8Z,QAAQ,GAAG,GAAH,GAAS,GAfpB9Z,CADFA,EAkBEA,+BAAC8X,MAAD9X,EAAO;IACLqZ,OAAO,EAAE,MAAK;MACZ,IAAIE,SAAS,CAACsB,cAAd,EAA8B;QAC5BtB,SAAS,CAACsB,cAAV,CAAyB;UAAEC,QAAQ,EAAE;QAAZ,CAAzB;MACD;IACF,CALI;IAML1B,KAAK,EAAC,kBAND;IAOLV,KAAK;MACH+B,MAAM,EAAE,aAAavC,MAAM,CAACd,SAAS,EADlC;MAEHsD,YAAY,EAAE,CAFX;MAGH1B,OAAO,EAAE,SAHN;MAIHL,OAAO,EAAE,cAJN;MAKHf,QAAQ,EAAE,CALP;MAMHC,UAAU,EAAE,MANT;MAOH8C,SAAS,EAAE,QAPR;MAQHN,KAAK,EAAE;IARJ,GASCX,QAAQ,GACR,EADQ,GAER;MAAEqB,MAAM,EAAE,aAAV;MAAyBR,UAAU,EAAErC,MAAM,CAACd;IAA5C,CAXD;EAPA,CAAPpX,EAqBG0Z,QAAQ,GAAG,QAAH,GAAc,QArBzB1Z,CAlBFA,CADFA,EA2CEA;IACE0Y,KAAK,EAAE;MACLC,OAAO,EAAE,OADJ;MAELqC,QAAQ,EAAE;IAFL;EADT,GAMEhb,gBACE,cADFA,CACE,GADFA,EACE;IAAA0Y,KAAK;MACHK,MAAM,EAAE,CADL;MAEHC,OAAO,EAAE,CAFN;MAGHiC,GAAG,EAAE,CAHF;MAIHC,QAAQ,EAAE,UAJP;MAKHC,UAAU,EAAE,QALT;MAMHC,QAAQ,EAAE,QANP;MAOHC,YAAY,EAAE;IAPX,GAQA1D,qBARA,GAQqB;MACxBE,UAAU,EAAE;IADY,CARrB,CAAL;IAWAuB,KAAK,EAAE1b;EAXP,CADFsC,EAcGtC,IAdHsC,CANFA,CA3CFA,CADFA,CAXFA,EAgFG,CAAC8Z,QAAD,IACC9Z,8CACGpD,IAAI,IACHoD,2CACEA;IACEsb,KAAK,EAAC,OADR;IAEE5C,KAAK;MACH6C,YAAY,EAAE,CADX;MAEHtC,UAAU,EAAE,GAFT;MAGHuC,aAAa,EAAE;IAHZ,GAIA7D,qBAJA;EAFP,GAUK,OAVL3X,CADFA,EAYEA;IACE0Y,KAAK;MACHC,OAAO,EAAE,OADN;MAEHqC,QAAQ,EAAE;IAFP,GAGArD,qBAHA;EADP,GAOG/a,IAPHoD,CAZFA,CAFJA,EAyBG4Z,SAAS,IACR5Z,2CACEA;IACEsb,KAAK,EAAC,OADR;IAEE5C,KAAK;MACH6C,YAAY,EAAE,CADX;MAEHtC,UAAU,EAAE,GAFT;MAGHuC,aAAa,EAAE;IAHZ,GAIA7D,qBAJA;EAFP,GAUK,aAVL3X,CADFA,EAYEA;IACE0Y,KAAK;MACHC,OAAO,EAAE,OADN;MAEHqC,QAAQ,EAAE;IAFP,GAGArD,qBAHA;EADP,GAOGiC,SAPH5Z,CAZFA,CA1BJA,EAiDG2Z,YAAY,IACX3Z,2CACEA;IACEsb,KAAK,EAAC,OADR;IAEE5C,KAAK;MACH6C,YAAY,EAAE,CADX;MAEHtC,UAAU,EAAE,GAFT;MAGHuC,aAAa,EAAE;IAHZ,GAIA7D,qBAJA;EAFP,GAUK,UAVL3X,CADFA,EAYEA;IACE0Y,KAAK;MACHC,OAAO,EAAE,OADN;MAEHqC,QAAQ,EAAE;IAFP,GAGArD,qBAHA;EADP,GAOG,OAAOgC,YAAP,KAAwB,QAAxB,GACGA,YAAY,CAAC8B,IAAb,EADH,GAEGxB,IAAI,CAACC,SAAL,CAAeP,YAAf,CATN3Z,CAZFA,CAlDJA,EA2EG,CAACpB,gCAAY/B,KAAZ+B,CAAD,IACCoB,2CACEA;IACEsb,KAAK,EAAC,OADR;IAEE5C,KAAK;MACH6C,YAAY,EAAE,CADX;MAEHtC,UAAU,EAAE,GAFT;MAGHuC,aAAa,EAAE;IAHZ,GAIA7D,qBAJA;EAFP,GAUK,QAVL3X,CADFA,EAYEA;IAAA,eACkB,OAAkB,cADpC;IAEE0Y,KAAK,EACHjY;MAAAkY,OAAO,EAAE,OAAT;MACAqC,QAAQ,EAAE;IADV,GAEGrD,qBAFH;EAHJ,GAQG,CAACqC,mBAAD,IACCha;IACEoZ,KAAK,EAAEvc,KADT;IAEE6b,KAAK,EACAjY,wDAAqB;MACxBsY,MAAM,EAAE,CADgB;MAExBC,OAAO,EAAE;IAFe,CAArB;EAHP,GAQGnc,KARHmD,CATJA,EAoBGga,mBAAmB,IAClBha,gBACE,cADFA,CACE,KADFA,EACE;IAAA0Y,KAAK,kCACAf,qBADA,GACqB;MACxBoB,MAAM,EAAE,CADgB;MAExBC,OAAO,EAAE;IAFe,CADrB;EAAL,CADFhZ,EAOGnD,KAPHmD,CArBJA,CAZFA,CA5EJA,EA2HIA,2CACEA;IACEsb,KAAK,EAAC,OADR;IAEE5C,KAAK;MACH6C,YAAY,EAAE,CADX;MAEHtC,UAAU,EAAE,GAFT;MAGHuC,aAAa,EAAE;IAHZ,GAIA7D,qBAJA;EAFP,GAUK,UAVL3X,CADFA,EAYEA,2CACEA;IACE0Y,KAAK;MACHS,KAAK,EAAE7M,SAAS,GAAG4L,MAAM,CAACR,KAAV,GAAkBQ,MAAM,CAACZ;IADtC,GAEAK,qBAFA,GAEqB;MACxBC,QAAQ,EAAE;IADc,CAFrB;EADP,GAOGtL,SAAS,GAAG,MAAH,GAAY,OAPxBtM,CADFA,CAZFA,CA3HJA,EAqJIA,2CACEA;IACEsb,KAAK,EAAC,OADR;IAEE5C,KAAK;MACH6C,YAAY,EAAE,CADX;MAEHtC,UAAU,EAAE,GAFT;MAGHuC,aAAa,EAAE;IAHZ,GAIA7D,qBAJA;EAFP,GAUK,QAVL3X,CADFA,EAYEA,2CACEA;IACE0Y,KAAK,EACHjY;MAAA0Y,KAAK,EAAErW,OAAO,GAAGoV,MAAM,CAACR,KAAV,GAAkBQ,MAAM,CAACZ;IAAvC,GACGK,qBADH,GACwB;MACxBC,QAAQ,EAAE;IADc,CADxB;EAFJ,GAOG9U,OAAO,GAAG,MAAH,GAAY,OAPtB9C,CADFA,CAZFA,CArJJA,CAjFJA,CADF;AAoQD,CA7SD;;ACXA,MAAM0b,cAAc,GAAG;EAAA,IAAC;IACtBrb,SADsB;IAEtBsb,aAFsB;IAGtBC;EAHsB,CAAD;EAAA,OAKrB5b;IACE0Y,KAAK,EAAE;MACLmD,SAAS,EAAE;IADN;EADT,GAKE7b,gBAAC,cAADA,CAAC8b,0BAAD9b,EACE;IAAA+b,IAAI,EAAEJ,aAAN;IACAK,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAX,CADP;IAEAC,GAAG,EAAE;MAAED,OAAO,EAAE;IAAX,CAFL;IAGAE,MAAM,EAAE;MAAA,IAAC;QAAEzD;MAAF,CAAD;MAAA,OACN1Y;QACE0Y,KAAK;UACHM,OAAO,EAAE,UADN;UAEHL,OAAO,EAAE,OAFN;UAGH4B,UAAU,EAAE,OAHT;UAIH6B,SAAS,EAAe,mBAAM,CAAC9E,SAAW,EAJvC;UAKH+E,aAAa,EAAE;QALZ,GAMA3D,KANA;MADP,GAUE1Y,8CACEA,2CACEA,gBAAI,cAAJA,CAAI,IAAJA,EAAI;QAAAsb,KAAK,EAAC,OAAN;QAAc5C,KAAK,EAAIjY;UAAA4Z,KAAK,EAAE;QAAP,GAAc1C,qBAAd;MAAvB,CAAJ3X,EAEK,QAFLA,CADFA,EAIEA;QACE0Y,KAAK;UACHS,KAAK,EAAE9Y,SAAS,CAAC6C,OAAV,GAAoBgV,MAAM,CAACR,KAA3B,GAAmCQ,MAAM,CAACZ;QAD9C,GAEAK,qBAFA;MADP,GAMGtX,SAAS,CAAC6C,OAAV,GAAoB,MAApB,GAA6B,OANhClD,CAJFA,CADFA,EAcEA,2CACEA;QAAIsb,KAAK,EAAC,OAAV;QAAkB5C,KAAK,oBAAOf,qBAAP;MAAvB,GAEK,QAFL3X,CADFA,EAIEA;QACE0Y,KAAK;UACHS,KAAK,EAAE9Y,SAAS,CAACyC,OAAV,GAAoBoV,MAAM,CAACR,KAA3B,GAAmCQ,MAAM,CAACZ;QAD9C,GAEAK,qBAFA;MADP,GAMGtX,SAAS,CAACyC,OAAV,GAAoB,MAApB,GAA6B,OANhC9C,CAJFA,CAdFA,EA2BEA,2CACEA;QAAIsb,KAAK,EAAC,OAAV;QAAkB5C,KAAK,oBAAOf,qBAAP;MAAvB,GAEK,YAFL3X,CADFA,EAIEA;QACE0Y,KAAK,EACHjY;UAAA0Y,KAAK,EAAE9Y,SAAS,CAACkM,WAAV,GACH2L,MAAM,CAACR,KADJ,GAEHQ,MAAM,CAACZ;QAFX,GAGGK,qBAHH;MAFJ,GAQGtX,SAAS,CAACkM,WAAV,GAAwB,MAAxB,GAAiC,OARpCvM,CAJFA,CA3BFA,EA0CEA,2CACEA;QAAIsb,KAAK,EAAC,OAAV;QAAkB5C,KAAK,oBAAOf,qBAAP;MAAvB,GAEK,QAFL3X,CADFA,EAIEA;QACE0Y,KAAK,EACHjY;UAAA0Y,KAAK,EAAE9Y,SAAS,CAACwO,WAAV,GACHqJ,MAAM,CAACR,KADJ,GAEHQ,MAAM,CAACZ;QAFX,GAGGK,qBAHH;MAFJ,GAQGtX,SAAS,CAACwO,WARb7O,CAJFA,CA1CFA,EAyDEA,2CACEA;QACEsb,KAAK,EAAC,OADR;QAEE5C,KAAK,oBACAf,qBADA;MAFP,GAOK,aAPL3X,CADFA,EASEA;QACE0Y,KAAK,EACHjY;UAAA0Y,KAAK,EAAE9Y,SAAS,CAACyO,YAAV,GACHoJ,MAAM,CAACR,KADJ,GAEHQ,MAAM,CAACZ;QAFX,GAGGK,qBAHH;MAFJ,GAQGtX,SAAS,CAACyO,YAAV,GAAyB,MAAzB,GAAkC,OARrC9O,CATFA,CAzDFA,CAVFA,CADM;IAAA;EAHR,CADFA,CALFA,EAqGEA,gBAAC,cAADA,CAAC8X,MAAD9X,EACE;IAAA0Y,KAAK,EAAE;MACLK,MAAM,EAAE,CADH;MAELsB,KAAK,EAAE,MAFF;MAGLrB,OAAO,EAAE,UAHJ;MAILsD,aAAa,EAAE,MAJV;MAKL1E,QAAQ,EAAE,EALL;MAMLC,UAAU,EAAE,MANP;MAOLkD,MAAM,EAAE;IAPH,CAAP;IASA3B,KAAK,EAAC,yBATN;IAUAC,OAAO,EAAE,MAAK;MACZuC,gBAAgB,CAAC,CAACD,aAAF,CAAhB;IACD;EAZD,CADF3b,EAeEA;IACE0Y,KAAK,EAAE;MACLQ,UAAU,EAAE,UADP;MAELC,KAAK,EAAE9Y,SAAS,CAAC6C,OAAV,GAAoBgV,MAAM,CAACR,KAA3B,GAAmCQ,MAAM,CAACZ;IAF5C;EADT,GAOO,QAPPtX,CAfFA,EAsBU,GAtBVA,kBAuBe2b,aAAa,GAAG,KAAH,GAAW,IAvBvC3b,CArGFA,CALqB;AAAA,CAAvB;;ACZgB,oBAAWyD,KAAX,EAAuB8Y,OAAvB,EAAmC;EACjD,uCACK9Y,KADL,GACU;IACR+Y,OAAO,EAAED;EADD,CADV;AAID;;AAEe,qBAAY9Y,KAAZ,EAAwB8Y,OAAxB,EAAoC;EAClD,uCACK9Y,KADL,GACU;IACRgZ,UAAU,EAAEF;EADJ,CADV;AAIF;;ACDA,IAAIG,UAAU,GAAG,CAAjB;;AAEA,SAASC,aAAT,QAkBC;EAAA,IAlBqC;IACpC5W,MADoC;IAEpC6W,UAFoC;IAGpC5Z,aAHoC;IAIpCG,MAJoC;IAKpCJ,WALoC;IAMpCU,KANoC;IAOpCgW;EAPoC,CAkBrC;EACC,OACEzZ,gEACG+F,MAAM,IACLtF,MAAM,CAACoc,OAAP,CAAe9W,MAAf,EACG/H,MADH,CAEI;IAAA,IAAC,CAACN,IAAD,CAAD;IAAA,OACE,CAAEA,IAAI,IACJA,IAAI,CAACof,WADL,IAEApf,IAAI,CAACof,WAAL,GAAmBlU,QAAnB,CAA4BgU,UAA5B,CAFD,IAGE,CAAClf,IAAD,IAAS,CAACkf,UAHZ,IAICA,UAAU,KAAK,EAJjB,KAKAlf,IANF;EAAA,CAFJ,EAUGuG,GAVH,CAUO,QAAgBsB,KAAhB,KAAyB;IAAA,IAAxB,CAAC7H,IAAD,EAAOb,KAAP,CAAwB;IAC5B6f,UAAU;;IAEV,IAAI,EAAC7f,KAAK,KAAL,aAAK,WAAL,GAAK,MAAL,QAAK,CAAEqJ,EAAR,CAAJ,EAAgB;MACd,OACElG,+BAAC2c,aAAD3c,EAAcS;QACZ9B,GAAG,EAAEjB,IAAI,GAAGgf;MADA,GAER;QACF3W,MAAM,EAAElJ,KADN;QAEF+f,UAFE;QAGF5Z,aAHE;QAIFG,MAJE;QAKFJ,WALE;QAMFU,KANE;QAOFgW;MAPE,CAFQ,CAAdzZ,CADF;IAcD,CAfD,MAeO;MACL,MAAMiM,KAAK,GAAGtL,GAAG,CAACwC,MAAD,EAAStG,KAAK,CAACqJ,EAAN,CAASxI,IAAlB,CAAjB;MACA,MAAMic,YAAY,GAAGhZ,GAAG,CAACsL,KAAD,EAAQ,SAAR,EAAmB9N,SAAnB,CAAxB;MACA,MAAMyb,SAAS,GAAGjZ,GAAG,CAACsL,KAAD,EAAQ,MAAR,EAAgB9N,SAAhB,CAArB;MACA,MAAMvB,IAAI,GAAG+D,GAAG,CAAC9D,KAAD,EAAQ,UAAR,EAAoBsB,SAApB,CAAhB;MACA,MAAMmO,SAAS,GAAG,CAAC,CAAC3L,GAAG,CAACqC,aAAD,EAAgBnG,KAAK,CAACqJ,EAAN,CAASxI,IAAzB,CAAvB;MACA,MAAMgc,QAAQ,GAAG,CAAC,EAAE7c,KAAK,IAAIA,KAAK,CAACqJ,EAAN,CAASE,GAAT,CAAaxJ,IAAxB,CAAlB;MACA,MAAMkG,OAAO,GAAG,CAAC,CAACnC,GAAG,CAACoC,WAAD,EAAclG,KAAK,CAACqJ,EAAN,CAASxI,IAAvB,CAArB;MACA,MAAM8b,QAAQ,GAAG,CAAC,CAACvN,KAAnB;MACA,MAAM7F,GAAG,GAAGzF,GAAG,CAAC9D,KAAD,EAAQ,QAAR,CAAf;MAEA,OACEmD,gBACE,cADFA,CACE,SADFA,EACE;QAAArB,GAAG,EAAE,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEuH,EAAP,CAAUxI,IAAV,IAAiBgf,UAAtB;QACAhE,KAAK,EAAE;UACLqE,YAAY,EAAE,cAAc7E,MAAM,CAACf,SAAW,EADzC;UAEL4B,MAAM,EAAE;QAFH;MADP,CADF/Y,EAOEA,+BAACsZ,UAADtZ,EAAW;QACTuZ,SAAS,EAAEnT,GADF;QAETb,KAAK,EAAEA,KAFE;QAGTsU,WAAW,EAAEpW,KAAK,CAACgZ,UAHV;QAIT/e,IAAI,EAAEb,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEqJ,EAAP,CAAUxI,IAJP;QAKT4O,SAAS,EAAEA,SALF;QAMT1P,IAAI,EAAEA,IANG;QAOT4c,QAAQ,EAAEA,QAPD;QAQTE,QAAQ,EAAEA,QARD;QASTC,YAAY,EAAEA,YATL;QAUTC,SAAS,EAAEA,SAVF;QAWT9W,OAAO,EAAEA,OAXA;QAYT2W,YAAY,EAAEA;MAZL,CAAXzZ,CAPFA,CADF;IAwBD;EACF,CAhEH,CAFJA,CADF;AAsED;;AAED,MAAMgd,KAAK,GAAG,UAA4D;EAAA,IAA3D;IAAEva,OAAF;IAAWA,OAAO,EAAE;MAAE+I;IAAF;EAApB,CAA2D;EACxE,MAAMnL,SAAS,GAAGkC,YAAY,CAAC;IAC7BE;EAD6B,CAAD,CAA9B;EAGA,MAAM;IAAEM,WAAF;IAAeC,aAAf;IAA8BG;EAA9B,IAAyC9C,SAA/C;EACAA,SAAS,CAACyC,OAAV;EACA,MAAM;IAAEW,KAAF;IAASwZ;EAAT,IAAqBC,mCAAgB;IACzCnD;EADyC,CAAhBmD,CAA3B;EAGA,MAAM,GAAGC,OAAH,IAAcnd,gBAAK,CAAC2C,QAAN3C,CAAe,EAAfA,CAApB;EACA,MAAM,CAAC2b,aAAD,EAAgBC,gBAAhB,IAAoC5b,gBAAK,CAAC2C,QAAN3C,CAAe,KAAfA,CAA1C;EACA,MAAMyZ,YAAY,GAAGlV,QAAQ,CAAC;IAC5B9B;EAD4B,CAAD,CAA7B;EAGA,MAAM;IAAEyS,QAAF;IAAYnR;EAAZ,IAAsBqZ,OAAO,EAAnC;EACA,MAAMR,UAAU,GAAG7Y,KAAK,CAAC,QAAD,EAAW,EAAX,CAAxB;EAEAjC,gBAAU,MAAK;IACbqb,OAAO,CAAC,EAAD,CAAP;EACD,CAFDrb,EAEG,EAFHA;EAIA,OACE9B,gBACE,cADFA,CACE,KADFA,EACE;IAAA0Y,KAAK,EAAE;MACLC,OAAO,EAAE,MADJ;MAEL0E,gBAAgB,EAAE,WAFb;MAGLC,MAAM,EACwC;IAJzC;EAAP,CADFtd,EAQEA;IACE0Y,KAAK,EAAE;MACLC,OAAO,EAAE,MADJ;MAEL4E,mBAAmB,EAAW,SAFzB;MAGLF,gBAAgB,EAAE;IAHb;EADT,GAOErd,gBAAC,cAADA,CAAC8X,MAAD9X,EACE;IAAA0Y,KAAK,EAAE;MACL8E,WAAW,EAAE,aAAatF,MAAM,CAAChB,OAAS,EADrC;MAELoF,aAAa,EAAE,MAFV;MAGL1E,QAAQ,EAAE,EAHL;MAILC,UAAU,EAAE;IAJP,CAAP;IAMAuB,KAAK,EAAC,kCANN;IAOAC,OAAO,EAAE,MAAM8D,OAAO,CAAC,EAAD;EAPtB,CADFnd,EAWS,gBAXTA,CAPFA,EAmBEA,gBAAC,cAADA,CAAC8X,MAAD9X,EACE;IAAA0Y,KAAK,EAAE;MACL8E,WAAW,EAAE,aAAatF,MAAM,CAAChB,OAAS,EADrC;MAELoF,aAAa,EAAE,MAFV;MAGL1E,QAAQ,EAAE,EAHL;MAILC,UAAU,EAAE;IAJP,CAAP;IAMAuB,KAAK,EAAC,sBANN;IAOAC,OAAO,EAAE,MAAK;MACZ4D,OAAO,CAAClD,WAAR,CAAoB,CAACtW,KAAK,CAACgZ,UAA3B;IACD;EATD,CADFzc,EAYGyD,KAAK,CAACgZ,UAAN,GAAmB,cAAnB,GAAoC,YAZvCzc,CAnBFA,EAkCEA,gBAAC,cAADA,CAACqY,KAADrY,EACES;IAAAiY,KAAK,EAAE;MACLC,OAAO,EAAE,cADJ;MAEL+B,YAAY,EAAE,CAFT;MAGLL,KAAK,EAAE,MAHF;MAILtB,MAAM,EAAE,CAJH;MAKLC,OAAO,EAAE,UALJ;MAMLyE,gBAAgB,EAAE,MANb;MAOLC,UAAU,EAAE,MAPP;MAQL9F,QAAQ,EAAE,EARL;MASL6C,MAAM,EAAE,CATH;MAULtB,KAAK,EAAE,OAVF;MAWLwE,eAAe,EAAE,CAXZ;MAYLC,aAAa,EAAE,CAZV;MAaLrD,UAAU,EAAE;IAbP;EAAP,GAeIrF,QAAQ,CAAC,QAAD,CAfZ,EAgBA;IAAA2I,WAAW,EAAC,gBAAZ;IACAjhB,IAAI,EAAC;EADL,CAhBA,CADFoD,CAlCFA,CARFA,EAgEEA;IACE0Y,KAAK,EAAE;MACL0C,QAAQ,EAAE;IADL;EADT,GAKEpb,+BAAC2c,aAAD3c,EAAc;IACZ+F,MAAM,EAAEyF,OADI;IAEZoR,UAAU,EAAEA,UAFA;IAGZzZ,MAAM,EAAEA,MAHI;IAIZH,aAAa,EAAEA,aAJH;IAKZD,WAAW,EAAEA,WALD;IAMZ0W,YAAY,EAAEA,YANF;IAOZhW,KAAK,EAAEA;EAPK,CAAdzD,CALFA,CAhEFA,EAgFEA,+BAAC0b,cAAD1b,EACE;IAAAK,SAAS,EAAEA,SAAX;IACAsb,aAAa,EAAEA,aADf;IAEAC,gBAAgB,EAAEA;EAFlB,CADF5b,CAhFFA,CADF;AAwFD,CA7GD;;ACpGA,MAAM8d,IAAI,GAAG,UAQR;EAAA,IARS;IACZpF,KADY;IAEZuE;EAFY,CAQT;EACH,OACEjd;IACE+d,IAAI,EAAC,OADP;IAEEC,OAAO,EAAC,aAFV;IAGEtF,KAAK;MACH4E,MAAM,EAAE,EADL;MAEHtE,OAAO,EAAE,CAFN;MAGH0B,YAAY,EAAE,CAHX;MAIHH,UAAU,EAAErC,MAAM,CAACZ;IAJhB,GAKAoB,KALA,CAHP;IAUEW,OAAO,EAAE,MAAK;MACZ4D,OAAO,CAACxE,UAAR,CAAmB,IAAnB;IACD,CAZH;IAYG,cACU;EAbb,GAeEzY,gBAAM,cAANA,CAAM,MAANA,EAAM;IAAAie,CAAC,EAAC;EAAF,CAANje,CAfFA,EAgBEA,gBACE,cADFA,CACE,MADFA,EACE;IAAA0Y,KAAK,EAAE;MAAEwF,SAAS,EAAE;IAAb,CAAP;IACAD,CAAC,EAAC;EADF,CADFje,CAhBFA,EAoBEA,gBAAM,cAANA,CAAM,MAANA,EAAM;IAAAie,CAAC,EAAC;EAAF,CAANje,CApBFA,EAqBEA,gBACE,cADFA,CACE,MADFA,EACE;IAAA0Y,KAAK,EAAE;MAAEwF,SAAS,EAAE;IAAb,CAAP;IACAD,CAAC,EAAC;EADF,CADFje,CArBFA,EAyBEA;IAAMie,CAAC,EAAC;EAAR,EAzBFje,CADF;AA6BD,CAtCD;;ACEM,SAAUme,sBAAV,CACJC,SADI,EAGQ;EAAA,IADZC,QACY,uEADD,CACC;EAAA,IAAZC,QAAY,uEAAD,CAAC;EAEZ,MAAM,CAACC,CAAD,EAAIC,CAAJ,IAASJ,SAAS,CAAC3f,KAAV,CAAgB,GAAhB,CAAf;EACA,OAAO;IACL,CAAC8f,CAAD,GAAKF,QADA;IAEL,CAACG,CAAD,GAAKF;EAFA,CAAP;AAIF;;ACEO,MAAMG,SAAS,GAA6B,UAG9C;EAAA,IAH+C;IAClDhc,OADkD;IAElD2b,SAAS,GAAG;EAFsC,CAG/C;EACH,MAAM;IAAE3a,KAAF;IAASwZ;EAAT,IAAqBC,mCAAgB;IACzCzE;EADyC,CAAhByE,CAA3B;EAIA,MAAMhC,QAAQ,GAAGiD,sBAAsB,CAACC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAAvC;EAEA,OACEpe,gEACEA,gBAAC,cAADA,CAAC8b,0BAAD9b,EACE;IAAA+b,IAAI,EAAEtY,KAAK,CAAC+Y,OAAZ;IACAkC,QAAQ,EAAE,GADV;IAEA1C,KAAK,EACAvb,2CACH;MAAAya,QAAQ,EAAE,OAAV;MACAgD,SAAS,EAAEE,SAAS,CAACxV,QAAV,CAAmB,OAAnB,IACP,mBADO,GAEP,oBAHJ;MAIA+V,MAAM,EAAE;IAJR,CADG,CAHL;IAUAzC,GAAG,EACEzb,2CAAQ;MACXya,QAAQ,EAAE,OADC;MAEXgD,SAAS,EAAE,eAFA;MAGXS,MAAM,EAAE;IAHG,CAAR;EAXL,CADF3e,EAkBEA,gBACE,cADFA,CACE,KADFA,EACE;IAAA0Y,KAAK,kCACAwC,QADA,GACQ;MACXA,QAAQ,EAAE,OADC;MAEXoC,MAAM,EAAE,OAFG;MAGXjD,KAAK,EAAE,GAHI;MAIXsE,MAAM,EAAE,KAJG;MAKXpE,UAAU,EAAErC,MAAM,CAACV,UALR;MAMXmB,OAAO,EAAE,MANE;MAOXgC,SAAS,EAAE,MAPA;MAQXxB,KAAK,EAAE,OARI;MASXvB,QAAQ,EAAE,EATC;MAUXyF,gBAAgB,EAAE,WAVP;MAWXuB,UAAU,EACR;IAZS,CADR;EAAL,CADF5e,EAiBEA,gBAAC,cAADA,CAACwY,MAADxY,EAAQ;IAAAyY,UAAU,EAAEwE,OAAO,CAACxE,UAApB;IAAgChW,OAAO,EAAEA;EAAzC,CAARzC,CAjBFA,EAkBEA,+BAACgd,KAADhd,EAAO;IAAAyC,OAAO,EAAEA;EAAT,CAAPzC,CAlBFA,CAlBFA,CADFA,EAyCG,CAACyD,KAAK,CAAC+Y,OAAP,IACCxc,+BAAC8X,MAAD9X,EACE;IAAAoZ,KAAK,EAAC,gBAAN;IACAnB,cAAc,EACd,IAFA;IAEAS,KAAK;MACHwC,QAAQ,EAAE,OADP;MAEHyD,MAAM,EAAE;IAFL,GAGAR,sBAAsB,CAACC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAHtB,GAGuC;MAC1CpF,OAAO,EAAE,CADiC;MAE1CD,MAAM,EAAE,CAFkC;MAG1CwB,UAAU,EAAE;IAH8B,CAHvC;EAFL,CADFva,EAYEA,gBAAC,cAADA,CAAC8d,IAAD9d,EAAM;IAAAid,OAAO,EAAEA;EAAT,CAANjd,CAZFA,CA1CJA,CADF;AA4DD,CAtEM;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBD,SAAU6e,aAAV,CAAuDC,KAAvD,EAA+D;EACnE,OAAOC,OAAO,CAACC,OAAR,CAAgBF,KAAhB,EAAuBpgB,MAAvB,CAA8B,CAACugB,IAAD,EAAOtgB,GAAP,KAAc;IACjDsgB,IAAI,CAACtgB,GAAD,CAAJ,GAAuBmgB,KAAK,CAACngB,GAAD,CAA5B;IACA,OAAOsgB,IAAP;EACD,CAHM,EAGJ,EAHI,CAAP;AAID;;SAEeC,WACdC,UACA/gB,KACAE,cAAgB;EAEhB,OAAO6gB,QAAQ,CAACzgB,MAAT,CAAgB,CAACugB,IAAD,EAAOvhB,IAAP,KAAe;;IAEpCuhB,IAAI,CAACvhB,IAAD,CAAJ,GAAa0hB,sBAAEze,GAAFye,CAAMhhB,GAANghB,EAAW1hB,IAAX0hB,KAAoB9gB,YAAjC;IACA,OAAO2gB,IAAP;EACD,CAJM,EAIJ,EAJI,CAAP;AAKF;;ACXA,MAAMI,EAAE,GAAGC,SAAX;;AAEM,SAAUC,2BAAV,CAAsC9c,OAAtC,EAA2D;EAC/D,MAAM+c,gBAAgB,GAAGjb,QAAQ,CAAC;IAAE9B;EAAF,CAAD,CAAjC;EACA,MAAMpC,SAAS,GAAGkC,YAAY,CAAC;IAAEE;EAAF,CAAD,CAA9B;EAEA,MAAM,CAACgd,kBAAD,EAAqBC,qBAArB,IAA8C/c,eAAS,KAATA,CAApD;;EAEA,MAAMgd,iBAAiB,GAAI3a,OAAD,IAAuC;IAC/D,IACEA,OAAO,CAACX,IAAR,CAAa0H,MAAb,KAAwB,wBAAxB,IACA/G,OAAO,CAACX,IAAR,CAAazH,IAAb,KAAsB,MAFxB,EAGE;MACA;IACD;;IACDgK,MAAM,CAACgZ,WAAP,CAAmB;MACjB7T,MAAM,EAAE,wBADS;MAEjBnP,IAAI,EAAE;IAFW,CAAnB;IAIA8iB,qBAAqB,CAAC,IAAD,CAArB;EACD,CAZD;;EAcA5d,gBAAU,MAAK;IACb8E,MAAM,CAACiZ,gBAAP,CAAwB,SAAxB,EAAmCF,iBAAnC;IACA,OAAO,MAAM/Y,MAAM,CAACkZ,mBAAP,CAA2B,SAA3B,EAAsCH,iBAAtC,CAAb;EACD,CAHD7d,EAGG,EAHHA;EAKAie,yCAAqB,MAAK;IACxB,IAAI,CAACN,kBAAL,EAAyB;MACvB;IACD;;IAED,MAAMtF,KAKF0E,aAAa,CAACxe,SAAD,CALjB;IAAA,MAAM;MACJ8C,MAAM,EAAE6c,YADJ;MAEJjd,WAAW,EAAEkd,iBAFT;MAGJjd,aAAa,EAAEkd;IAHX,IAG8B/F,EAHpC;IAAA,MAIKgG,UAAU,cAJT,CAKL,QALK,EAKL,aALK,EAKL,eALK,CAIS,CAJf;;IAOA,MAAMC,cAAc,GAAG,CAAC,GAAG3d,OAAO,CAACkB,MAAR,CAAeqI,KAAnB,CAAvB;IAEA,MAAMpI,UAAU,GAAGsb,UAAU,CAACkB,cAAD,EAAiBZ,gBAAjB,EAAmC,EAAnC,CAA7B;IACA,MAAMzc,WAAW,GAAGmc,UAAU,CAACkB,cAAD,EAAiBH,iBAAjB,EAAoC,KAApC,CAA9B;IACA,MAAMjd,aAAa,GAAGkc,UAAU,CAC9BkB,cAD8B,EAE9BF,mBAF8B,EAG9B,KAH8B,CAAhC;IAKA,MAAMG,UAAU,GAAGnB,UAAU,CAC3BkB,cAD2B,EAE3BJ,YAF2B,CAA7B;IAKA,MAAM7c,MAAM,GAAG1C,MAAM,CAACoc,OAAP,CAAewD,UAAf,EAA2B3hB,MAA3B,CAAkC,CAACugB,IAAD,aAAuB;MAAA,IAAhB,CAACtgB,GAAD,EAAM9B,KAAN,CAAgB;MACtEoiB,IAAI,CAACtgB,GAAD,CAAJ,GAAY;QACV/B,IAAI,EAAEC,KAAK,SAAL,SAAK,KAAL,uBAAK,CAAED,IADH;QAEVoI,OAAO,EAAEnI,KAAK,SAAL,SAAK,KAAL,uBAAK,CAAEmI;MAFN,CAAZ;MAIA,OAAOia,IAAP;IACD,CANc,EAMZ,EANY,CAAf;IAQA,MAAMqB,YAAY,GAAGF,cAAc,CAAC1hB,MAAf,CAAsB,CAACugB,IAAD,EAAOvhB,IAAP,KAAe;;;MACxDuhB,IAAI,CAACvhB,IAAD,CAAJ,GAAa,CAAC,EAAC,wCAAEiD,GAAFye,CAAM3c,OAAO,CAAC+I,OAAd4T,EAAuB1hB,IAAvB0hB,OAA4B,IAA5B,IAA4BjF,aAA5B,GAA4B,MAA5B,GAA4BA,GAAEjU,EAA9B,MAAgC,IAAhC,IAAgCqa,aAAhC,GAAgC,MAAhC,GAAgCA,GAAEna,GAAlC,MAAqC,IAArC,IAAqCoa,aAArC,GAAqC,MAArC,GAAqCA,GAAE5jB,IAAxC,CAAd;MACA,OAAOqiB,IAAP;IACD,CAHoB,EAGlB,EAHkB,CAArB;IAKA,MAAMwB,oBAAoB,GAAkB;MAC1CpB,EAD0C;MAE1Chb,IAAI,EAAE;QACJT,UADI;QAEJvD,SAAS;UACP8C,MADO;UAEPJ,WAFO;UAGPC,aAHO;UAIPsd;QAJO,GAKJH,UALI;MAFL;IAFoC,CAA5C;IAaAvZ,MAAM,CAACgZ,WAAP,CAAmB;MACjB7T,MAAM,EAAE,wBADS;MAEjBnP,IAAI,EAAE,QAFW;MAGjB2f,OAAO,EAAEkE;IAHQ,CAAnB;EAKD,CAzDDV,EAyDG,CAACN,kBAAD,EAAqBD,gBAArB,EAAuCX,aAAa,CAACxe,SAAD,CAApD,CAzDH0f;EA2DA,OAAO;IAAEN;EAAF,CAAP;AACF;;ACxFA,IAAI,OAAO7Y,MAAP,KAAkB,WAAtB,EAAmC;EACjC8Z,+BACE;IACElE,OAAO,EAAE,KADX;IAEEC,UAAU,EAAE,KAFd;IAGEkE,UAAU,EAAE;EAHd,CADFD,EAME;IACEhjB,IAAI,EAAE,8BADR;IAEEkjB,WAAW,EAAE,EAFf;IAGEC,WAAW,EAAEja,MAAM,CAACka;EAHtB,CANFJ;AAYD;;AAEY,aAAO,GAA2Bhf,KAAxB,IAGlB;;;EACH,MAAMc,OAAO,GAAGtC,cAAc,EAA9B;EAEA,MAAM;IAAEuf;EAAF,IAAyBF,2BAA2B,CACxD,WAAK,SAAL,SAAK,KAAL,uBAAK,CAAE9c,OAAP,MAAc,IAAd,IAAc0X,aAAd,GAAcA,EAAd,GAAkB3X,OAAO,CAACC,OAD8B,CAA1D;;EAGA,IAAIgd,kBAAJ,EAAwB;IACtB,OAAO,IAAP;EACD;;EAED,OACEzf,+BAAC+gB,uCAAD/gB,EAAqB,IAArBA,EACEA,+BAACye,SAADze,EAAU;IACRyC,OAAO,EAAE,WAAK,KAAL,aAAK,KAAL,uBAAK,CAAEA,OAAP,MAAkB,IAAlB,IAAkB8d,aAAlB,GAAkBA,EAAlB,GAAkB/d,OAAO,CAACC,OAD3B;IAER2b,SAAS,EAAE1c,KAAK,KAAL,aAAK,KAAL,uBAAK,CAAE0c;EAFV,CAAVpe,CADFA,CADF;AAQF,CArBa","names":["element","type","value","Date","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","getEventValue","event","isObject","target","isCheckBoxInput","checked","name","substring","search","names","has","getNodeParentName","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","HookFormContext","React","createContext","useFormContext","useContext","getProxyFormState","formState","_proxyFormState","localProxyFormState","isRoot","Object","defineProperty","get","_key","keys","length","formStateData","isEmptyObject","find","shouldSubscribeByName","signalName","exact","convertToArrayPayload","some","currentName","startsWith","useSubscribe","props","_props","useRef","current","useEffect","tearDown","subscription","unsubscribe","disabled","subject","subscribe","next","callback","useFormState","methods","control","updateFormState","useState","_formState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","_name","_mounted","useCallback","shouldRenderFormState","_subjects","state","generateWatchOutput","_names","formValues","isGlobal","isString","watch","add","map","fieldName","watchAll","objectHasFunction","data","isFunction","useWatch","fieldValues","values","_formValues","updateValue","_getWatch","_removeUnmounted","appendErrors","validateAllFieldCriteria","message","types","isKey","test","input","replace","object","index","tempPath","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","fieldsNames","field","_f","currentField","ref","focus","refs","isWatched","isBlurEvent","watchName","slice","isWeb","window","HTMLElement","document","copy","Set","Blob","FileList","cloneObject","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","createSubject","_observers","observer","push","o","observers","deepEqual","object1","object2","isPrimitive","getTime","keys1","keys2","val1","includes","val2","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isHTMLElement","owner","ownerDocument","ElementClass","defaultView","isMultipleSelect","isRadioOrCheckbox","isRadioInput","live","isConnected","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","defaultValues","defaultResult","validResult","getCheckboxValue","options","option","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","defaultReturn","getRadioValue","previous","every","isFileInput","files","selectedOptions","isCheckBox","getFieldValueAs","getResolverOptions","_fields","criteriaMode","shouldUseNativeValidation","set","RegExp","rule","isRegex","source","mount","error","join","foundError","pop","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","isValidElement","getValidateError","isMessage","isBoolean","validationData","validateField","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","valueDate","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","defaultOptions","shouldFocusError","_options","submitCount","isSubmitting","isSubmitSuccessful","_defaultValues","shouldUnregister","_stateFlags","action","unMount","array","delayErrorCallback","timer","validateFields","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","wait","clearTimeout","setTimeout","_updateValid","shouldSkipRender","resolver","_executeSchema","executeBuildInValidation","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","argA","argB","getDirtyFields","_getDirty","updateErrors","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","getFieldValue","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","isFieldDirty","output","isPreviousFieldTouched","isPreviousFormDirty","isPreviousFieldDirty","isCurrentFieldPristine","shouldRenderByError","fieldState","previousFieldError","shouldUpdateValid","delayError","updatedFormState","v","context","executeSchemaAndUpdateState","shouldOnlyCheckValid","valid","fieldReference","fieldError","unregister","getValues","_getFieldArray","forEach","selectRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","isFieldArray","cloneValue","shouldSkipValidation","hasValidation","deps","watched","previousErrorLookupResult","schemaErrorLookup","errorLookupResult","fieldNames","Promise","shouldFocus","getFieldState","invalid","clearErrors","inputName","setError","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","register","disabledIsDefined","getRuleValue","fieldRef","querySelectorAll","radioOrCheckbox","isNameInFieldArray","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","resetField","reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","keepDirtyValues","closest","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","shouldSelect","select","_formControl","createFormControl","primary","secondary","lightBlue","blue","lightPink","errorPink","buttonBlue","link","green","paraGraphDefaultStyle","fontSize","lineHeight","Button","styled","button","hideBackground","colors","defaultProps","CircleButton","Input","Table","table","Header","setVisible","style","display","alignItems","paddingLeft","backgroundColor","margin","padding","fontWeight","transition","color","title","onClick","PanelTable","refObject","hasError","fieldsValues","isNative","errorMessage","errorType","collapseAll","collapse","setCollapse","isValueWrappedInPre","JSON","stringify","_a","String","width","borderLeft","background","valign","border","borderRadius","textAlign","marginRight","scrollIntoView","behavior","cursor","maxWidth","top","position","whiteSpace","overflow","textOverflow","align","paddingRight","verticalAlign","trim","FormStateTable","showFormState","setShowFormState","alignSelf","Animate","play","start","opacity","end","render","borderTop","pointerEvents","textTransform","payload","visible","isCollapse","childIndex","PanelChildren","searchTerm","entries","toLowerCase","borderBottom","Panel","actions","useStateMachine","setData","useForm","gridTemplateRows","height","gridTemplateColumns","borderRight","WebkitAppearance","appearance","gridColumnStart","gridColumnEnd","placeholder","Logo","fill","viewBox","d","transform","getPositionByPlacement","placement","defaultX","defaultY","x","y","DevToolUI","duration","zIndex","fontFamily","proxyToObject","proxy","Reflect","ownKeys","perv","nestToFlat","flatKeys","_","id","uuid","useExportControlToExtension","nestedFormValues","isExtensionEnabled","setIsExtensionEnabled","handleInitMessage","postMessage","addEventListener","removeEventListener","useDeepCompareEffect","nestedErrors","nestedDirtyFields","nestedTouchedFields","formStatus","flatFieldNames","flatErrors","nativeFields","_b","_c","updateMessagePayload","createStore","filterName","middleWares","storageType","localStorage","StateMachineProvider"],"sources":["/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isDateObject.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isObject.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getEventValue.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getNodeParentName.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/compact.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isUndefined.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/get.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/constants.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useFormContext.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getProxyFormState.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isEmptyObject.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useSubscribe.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useFormState.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isString.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/generateWatchOutput.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isFunction.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/objectHasFunction.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useWatch.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/appendErrors.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isKey.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/stringToPath.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/set.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/focusFieldBy.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/isWatched.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isWeb.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/cloneObject.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/unset.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/createSubject.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isPrimitive.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/deepEqual.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/getValidationModes.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isBoolean.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isFileInput.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isHTMLElement.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isMultipleSelect.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isRadioInput.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/live.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getDirtyFields.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getCheckboxValue.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getFieldValueAs.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getRadioValue.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getFieldValue.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getResolverOptions.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isRegex.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getRuleValue.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/hasValidation.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/skipValidation.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/utils/isMessage.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getValidateError.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/getValueAndMessage.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/validateField.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/logic/createFormControl.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/node_modules/react-hook-form/src/useForm.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/colors.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/styled.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/header.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/panelTable.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/formStateTable.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/settingAction.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/panel.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/logo.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/position.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/devToolUI.tsx","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/extension/utils.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/extension/useExportControlToExtension.ts","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/node_modules/@hookform/devtools/src/devTool.tsx"],"sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(obj: T, path: string, defaultValue?: unknown): any => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path as keyof T])\n      ? defaultValue\n      : obj[path as keyof T]\n    : result;\n};\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n>(): UseFormReturn<TFieldValues> =>\n  React.useContext(HookFormContext) as unknown as UseFormReturn<TFieldValues>;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <TFieldValues extends FieldValues, TContext = any>(\n  props: FormProviderProps<TFieldValues, TContext>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <TFieldValues extends FieldValues>(\n  formState: FormState<TFieldValues>,\n  _proxyFormState: ReadFormState,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {} as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (_proxyFormState[_key] !== VALIDATION_MODE.all) {\n          _proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport { ReadFormState } from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends Record<string, any>, K extends ReadFormState>(\n  formStateData: T,\n  _proxyFormState: K,\n  isRoot?: boolean,\n) => {\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  exact && signalName\n    ? name === signalName\n    : !name ||\n      !signalName ||\n      name === signalName ||\n      convertToArrayPayload(name).some(\n        (currentName) =>\n          currentName &&\n          (currentName.startsWith(signalName) ||\n            signalName.startsWith(currentName)),\n      );\n","import React from 'react';\n\nimport { Subject, Subscription } from './utils/createSubject';\n\ntype Props<T> = {\n  disabled?: boolean;\n  subject: Subject<T>;\n  callback: (value: T) => void;\n};\n\nexport function useSubscribe<T>(props: Props<T>) {\n  const _props = React.useRef(props);\n  _props.current = props;\n\n  React.useEffect(() => {\n    const tearDown = (subscription: Subscription | false) => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    };\n\n    const subscription =\n      !props.disabled &&\n      _props.current.subject.subscribe({\n        next: _props.current.callback,\n      });\n\n    return () => tearDown(subscription);\n  }, [props.disabled]);\n}\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport {\n  FieldValues,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\n  props?: UseFormStateProps<TFieldValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n  const _mounted = React.useRef(true);\n\n  _name.current = name;\n\n  const callback = React.useCallback(\n    (value: { name?: InternalFieldName }) =>\n      _mounted.current &&\n      shouldSubscribeByName(\n        _name.current as InternalFieldName,\n        value.name,\n        exact,\n      ) &&\n      shouldRenderFormState(value, _localProxyFormState.current) &&\n      updateFormState({\n        ...control._formState,\n        ...value,\n      }),\n    [control, exact],\n  );\n\n  useSubscribe({\n    disabled,\n    callback,\n    subject: control._subjects.state,\n  });\n\n  React.useEffect(() => {\n    _mounted.current = true;\n    return () => {\n      _mounted.current = false;\n    };\n  }, []);\n\n  return getProxyFormState(\n    formState,\n    control._proxyFormState,\n    _localProxyFormState.current,\n    false,\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { FieldValues, InternalFieldName, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default (\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n) => {\n  const isArray = Array.isArray(names);\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names as InternalFieldName);\n    return get(formValues, names as InternalFieldName);\n  }\n\n  if (isArray) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName as InternalFieldName),\n        get(formValues, fieldName as InternalFieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport shouldSubscribeByName from './logic/shouldSubscribeByName';\nimport isObject from './utils/isObject';\nimport isUndefined from './utils/isUndefined';\nimport objectHasFunction from './utils/objectHasFunction';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: UnpackNestedValue<DeepPartialSkipArrayKey<TFieldValues>>;\n  control?: Control<TFieldValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends FieldPath<TFieldValues>[] = FieldPath<TFieldValues>[],\n>(): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  const callback = React.useCallback(\n    (formState: { name?: InternalFieldName; values?: FieldValues }) => {\n      if (\n        shouldSubscribeByName(\n          _name.current as InternalFieldName,\n          formState.name,\n          exact,\n        )\n      ) {\n        const fieldValues = generateWatchOutput(\n          _name.current as InternalFieldName | InternalFieldName[],\n          control._names,\n          formState.values || control._formValues,\n        );\n\n        updateValue(\n          isUndefined(_name.current) ||\n            (isObject(fieldValues) && !objectHasFunction(fieldValues))\n            ? { ...fieldValues }\n            : Array.isArray(fieldValues)\n            ? [...fieldValues]\n            : isUndefined(fieldValues)\n            ? defaultValue\n            : fieldValues,\n        );\n      }\n    },\n    [control, exact, defaultValue],\n  );\n\n  useSubscribe({\n    disabled,\n    subject: control._subjects.watch,\n    callback,\n  });\n\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? control._getWatch(name as InternalFieldName)\n      : defaultValue,\n  );\n\n  React.useEffect(() => {\n    control._removeUnmounted();\n  });\n\n  return value;\n}\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name: string) => boolean,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isFunction from './isFunction';\nimport isObject from './isObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n    for (const key in data) {\n      if (isFunction(data[key])) {\n        copy = data;\n        break;\n      }\n      copy[key] = cloneObject(data[key]);\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter((data) => !isUndefined(data)).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default function createSubject<T>(): Subject<T> {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n}\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is HTMLElement => {\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  const ElementClass =\n    owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement;\n  return value instanceof ElementClass;\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<U>(data: U, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: any,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import { Field, NativeFieldValue } from '../types';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n    ? value === '' || isNullOrUndefined(value)\n      ? NaN\n      : +value\n    : valueAsDate && isString(value)\n    ? new Date(value)\n    : setValueAs\n    ? setValueAs(value)\n    : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n    return;\n  }\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? undefined\n    : isRegex(rule)\n    ? rule.source\n    : isObject(rule)\n    ? isRegex(rule.value)\n      ? rule.value.source\n      : rule.value\n    : rule;\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","export default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<{\n    isOnSubmit: boolean;\n    isOnBlur: boolean;\n    isOnChange: boolean;\n    isOnTouch: boolean;\n    isOnAll: boolean;\n  }>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import React from 'react';\n\nimport { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  InternalFieldErrors,\n  Message,\n  NativeFieldValue,\n} from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends NativeFieldValue>(\n  field: Field,\n  inputValue: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled,\n  } = field._f;\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n      (isBoolean(inputValue) && !inputValue) ||\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\n      (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || +inputValue;\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  Ref,\n  ResolverResult,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport focusFieldBy from './focusFieldBy';\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  };\n  let _fields = {};\n  let _defaultValues = cloneObject(_options.defaultValues) || {};\n  let _formValues = _options.shouldUnregister\n    ? {}\n    : cloneObject(_defaultValues);\n  let _stateFlags = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  } as Names;\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  let validateFields: Record<InternalFieldName, number> = {};\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    watch: createSubject(),\n    array: createSubject(),\n    state: createSubject(),\n  };\n\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(callback, wait);\n    };\n\n  const _updateValid = async (shouldSkipRender?: boolean) => {\n    let isValid = false;\n\n    if (_proxyFormState.isValid) {\n      isValid = _options.resolver\n        ? isEmptyObject((await _executeSchema()).errors)\n        : await executeBuildInValidation(_fields, true);\n\n      if (!shouldSkipRender && isValid !== _formState.isValid) {\n        _formState.isValid = isValid;\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n\n    return isValid;\n  };\n\n  const _updateFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method) {\n      _stateFlags.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        _proxyFormState.errors &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        _proxyFormState.touchedFields &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _stateFlags.mount && _updateValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let isFieldDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n    if (_proxyFormState.isDirty) {\n      const isPreviousFormDirty = _formState.isDirty;\n\n      _formState.isDirty = output.isDirty = _getDirty();\n      isFieldDirty = isPreviousFormDirty !== output.isDirty;\n    }\n\n    if (_proxyFormState.dirtyFields && (!isBlurEvent || shouldDirty)) {\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n      const isCurrentFieldPristine = deepEqual(\n        get(_defaultValues, name),\n        fieldValue,\n      );\n\n      isCurrentFieldPristine\n        ? unset(_formState.dirtyFields, name)\n        : set(_formState.dirtyFields as TFieldValues, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      isFieldDirty =\n        isFieldDirty ||\n        isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n    }\n\n    if (isBlurEvent && !isPreviousFieldTouched) {\n      set(_formState.touchedFields as TFieldValues, name, isBlurEvent);\n      output.touchedFields = _formState.touchedFields;\n      isFieldDirty =\n        isFieldDirty ||\n        (_proxyFormState.touchedFields &&\n          isPreviousFieldTouched !== isBlurEvent);\n    }\n\n    isFieldDirty && shouldRender && _subjects.state.next(output);\n\n    return isFieldDirty ? output : {};\n  };\n\n  const shouldRenderByError = async (\n    name: InternalFieldName,\n    isValid: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ): Promise<void> => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      _proxyFormState.isValid && _formState.isValid !== isValid;\n\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n\n    validateFields[name]--;\n\n    if (\n      _proxyFormState.isValidating &&\n      !Object.values(validateFields).some((v) => v)\n    ) {\n      _subjects.state.next({\n        isValidating: false,\n      });\n      validateFields = {};\n    }\n  };\n\n  const _executeSchema = async (name?: InternalFieldName[]) =>\n    _options.resolver\n      ? await _options.resolver(\n          { ..._formValues } as TFieldValues,\n          _options.context,\n          getResolverOptions(\n            name || _names.mount,\n            _fields,\n            _options.criteriaMode,\n            _options.shouldUseNativeValidation,\n          ),\n        )\n      : ({} as ResolverResult<TFieldValues>);\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _executeSchema();\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors as FieldErrors<TFieldValues>;\n    }\n\n    return errors;\n  };\n\n  const executeBuildInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f: fieldReference, ...fieldValue } = field;\n\n        if (fieldReference) {\n          const fieldError = await validateField(\n            field,\n            get(_formValues, fieldReference.name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          );\n\n          if (fieldError[fieldReference.name]) {\n            context.valid = false;\n\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          if (!shouldOnlyCheckValid) {\n            fieldError[fieldReference.name]\n              ? set(\n                  _formState.errors,\n                  fieldReference.name,\n                  fieldError[fieldReference.name],\n                )\n              : unset(_formState.errors, fieldReference.name);\n          }\n        }\n\n        fieldValue &&\n          (await executeBuildInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) => (\n    name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues)\n  );\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) => {\n    const fieldValues = {\n      ...(_stateFlags.mount\n        ? _formValues\n        : isUndefined(defaultValue)\n        ? _defaultValues\n        : isString(names)\n        ? { [names]: defaultValue }\n        : defaultValue),\n    };\n\n    return generateWatchOutput(names, _names, fieldValues, isGlobal);\n  };\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _stateFlags.mount ? _formValues : _defaultValues,\n        name,\n        props.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isWeb && isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (selectRef) =>\n              (selectRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(selectRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    !checkboxRef.disabled &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.watch.next({\n              name,\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        !isPrimitive(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: _formValues,\n      });\n\n      if (\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n\n        _subjects.state.next({\n          name,\n          dirtyFields: _formState.dirtyFields,\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({});\n    _subjects.watch.next({\n      name,\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    const target = event.target;\n    let name = target.name;\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type\n        ? getFieldValue(field._f)\n        : getEventValue(event);\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(\n        name,\n        fieldValue,\n        isBlurEvent,\n        false,\n      );\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.watch.next({\n          name,\n          type: event.type,\n        });\n\n      if (shouldSkipValidation) {\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({});\n\n      validateFields[name] = validateFields[name] ? +1 : 1;\n\n      _subjects.state.next({\n        isValidating: true,\n      });\n\n      if (_options.resolver) {\n        const { errors } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(\n          _formState.errors,\n          _fields,\n          name,\n        );\n        const errorLookupResult = schemaErrorLookup(\n          errors,\n          _fields,\n          previousErrorLookupResult.name || name,\n        );\n\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (\n          await validateField(\n            field,\n            get(_formValues, name),\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n\n        isValid = await _updateValid(true);\n      }\n\n      field._f.deps &&\n        trigger(\n          field._f.deps as FieldPath<TFieldValues> | FieldPath<TFieldValues>[],\n        );\n\n      shouldRenderByError(name, isValid, error, fieldState);\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    _subjects.state.next({\n      isValidating: true,\n    });\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuildInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuildInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      (_proxyFormState.isValid && isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver ? { isValid } : {}),\n      errors: _formState.errors,\n      isValidating: false,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      focusFieldBy(\n        _fields,\n        (key) => get(_formState.errors, key),\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ..._defaultValues,\n      ...(_stateFlags.mount ? _formValues : {}),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n      ? get(values, fieldNames as InternalFieldName)\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name\n      ? convertToArrayPayload(name).forEach((inputName) =>\n          unset(_formState.errors, inputName),\n        )\n      : (_formState.errors = {} as FieldErrors<TFieldValues>);\n\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = ((get(_fields, name, { _f: {} }) as Field)._f || {}).ref;\n\n    set(_formState.errors, name, {\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: unknown,\n  ) =>\n    isFunction(name)\n      ? _subjects.watch.subscribe({\n          next: (info) =>\n            name(\n              _getWatch(undefined, defaultValue as DeepPartial<TFieldValues>),\n              info as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue as DeepPartial<TFieldValues>,\n          true,\n        );\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (get(_fields, fieldName)) {\n        if (!options.keepValue) {\n          unset(_fields, fieldName);\n          unset(_formValues, fieldName);\n        }\n\n        !options.keepError && unset(_formState.errors, fieldName);\n        !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n        !options.keepTouched && unset(_formState.touchedFields, fieldName);\n        !_options.shouldUnregister &&\n          !options.keepDefaultValue &&\n          unset(_defaultValues, fieldName);\n      }\n    }\n\n    _subjects.watch.next({});\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _updateValid();\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n\n    set(_fields, name, {\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    field\n      ? disabledIsDefined &&\n        set(\n          _formValues,\n          name,\n          options.disabled\n            ? undefined\n            : get(_formValues, name, getFieldValue(field._f)),\n        )\n      : updateValidAndValue(name, true, options.value);\n\n    return {\n      ...(disabledIsDefined ? { disabled: options.disabled } : {}),\n      ...(_options.shouldUseNativeValidation\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(!!Array.isArray(get(_defaultValues, name))\n                        ? [{}]\n                        : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\n    (onValid, onInvalid) => async (e) => {\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        e.persist && e.persist();\n      }\n      let hasNoPromiseError = true;\n      let fieldValues: any = cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (_options.resolver) {\n          const { errors, values } = await _executeSchema();\n          _formState.errors = errors as FieldErrors<TFieldValues>;\n          fieldValues = values;\n        } else {\n          await executeBuildInValidation(_fields);\n        }\n\n        if (isEmptyObject(_formState.errors)) {\n          _subjects.state.next({\n            errors: {} as FieldErrors<TFieldValues>,\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          if (onInvalid) {\n            await onInvalid({ ..._formState.errors }, e);\n          }\n\n          _options.shouldFocusError &&\n            focusFieldBy(\n              _fields,\n              (key) => get(_formState.errors, key),\n              _names.mount,\n            );\n        }\n      } catch (err) {\n        hasNoPromiseError = false;\n        throw err;\n      } finally {\n        _formState.isSubmitted = true;\n        _subjects.state.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful:\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\n          submitCount: _formState.submitCount + 1,\n          errors: _formState.errors,\n        });\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, get(_defaultValues, name))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values =\n      formValues && !isEmptyObject(formValues)\n        ? cloneUpdatedValues\n        : _defaultValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              try {\n                isHTMLElement(fieldReference) &&\n                  fieldReference.closest('form')!.reset();\n                break;\n              } catch {}\n            }\n          }\n        }\n\n        _fields = {};\n      }\n\n      _formValues = props.shouldUnregister\n        ? keepStateOptions.keepDefaultValues\n          ? cloneObject(_defaultValues)\n          : {}\n        : cloneUpdatedValues;\n\n      _subjects.array.next({\n        values,\n      });\n\n      _subjects.watch.next({\n        values,\n      });\n    }\n\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _stateFlags.mount =\n      !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n\n    _stateFlags.watch = !!props.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields:\n        keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\n          ? _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n          ? getDirtyFields(_defaultValues, formValues)\n          : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : ({} as FieldNamesMarkedBoolean<TFieldValues>),\n      errors: keepStateOptions.keepErrors\n        ? _formState.errors\n        : ({} as FieldErrors<TFieldValues>),\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name)._f;\n    const fieldRef = field.refs ? field.refs[0] : field.ref;\n    fieldRef.focus();\n    options.shouldSelect && fieldRef.select();\n  };\n\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _stateFlags() {\n        return _stateFlags;\n      },\n      set _stateFlags(value) {\n        _stateFlags = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport {\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldValues,\n  FormState,\n  UseFormProps,\n  UseFormReturn,\n} from './types';\nimport { useSubscribe } from './useSubscribe';\n\n/**\n * Custom hook to mange the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object,\n>(\n  props: UseFormProps<TFieldValues, TContext> = {},\n): UseFormReturn<TFieldValues, TContext> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext> | undefined\n  >();\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {} as FieldNamesMarkedBoolean<TFieldValues>,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    errors: {} as FieldErrors<TFieldValues>,\n  });\n\n  if (_formControl.current) {\n    _formControl.current.control._options = props;\n  } else {\n    _formControl.current = {\n      ...createFormControl(props),\n      formState,\n    };\n  }\n\n  const control = _formControl.current.control;\n\n  const callback = React.useCallback(\n    (value: FieldValues) => {\n      if (shouldRenderFormState(value, control._proxyFormState, true)) {\n        control._formState = {\n          ...control._formState,\n          ...value,\n        };\n\n        updateFormState({ ...control._formState });\n      }\n    },\n    [control],\n  );\n\n  useSubscribe({\n    subject: control._subjects.state,\n    callback,\n  });\n\n  React.useEffect(() => {\n    if (!control._stateFlags.mount) {\n      control._proxyFormState.isValid && control._updateValid();\n      control._stateFlags.mount = true;\n    }\n    if (control._stateFlags.watch) {\n      control._stateFlags.watch = false;\n      control._subjects.state.next({});\n    }\n    control._removeUnmounted();\n  });\n\n  _formControl.current.formState = getProxyFormState(\n    formState,\n    control._proxyFormState,\n  );\n\n  return _formControl.current;\n}\n","export default {\n  primary: '#0e101c',\n  secondary: '#bf1650',\n  lightBlue: '#516391',\n  blue: '#1e2a4a',\n  lightPink: '#ec5990',\n  errorPink: '#fbecf2',\n  buttonBlue: '#191d3a',\n  link: '#ff7aa8',\n  green: '#1bda2b',\n};\n","import styled from '@emotion/styled';\n\nimport colors from './colors';\n\nexport const paraGraphDefaultStyle = {\n  fontSize: 13,\n  lineHeight: '20px',\n};\n\nconst Button = styled.button<{ hideBackground?: boolean }>`\n  appearance: none;\n  margin: 0;\n  border: 0;\n  color: white;\n  padding: 5px !important;\n  border-radius: 0 !important;\n  background: ${(props: { hideBackground?: boolean }) =>\n    props.hideBackground ? `` : `${colors.blue} !important`};\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`;\n\nButton.defaultProps = { type: 'button' };\n\nconst CircleButton = styled(Button)`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 4px 0 auto;\n  background: none !important;\n  display: flex;\n  width: 25px;\n  height: 25px;\n  justify-content: center;\n  line-height: 14px !important;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n\n  &:active {\n    background: black;\n  }\n`;\n\nconst Input = styled.input`\n  &::placeholder {\n    color: #b3b3b3;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n`;\n\nconst Table = styled.table`\n  transition: 0.3s all;\n\n  &:hover {\n    background: ${colors.primary};\n  }\n`;\n\nexport { Button, CircleButton, Input, Table };\n","import * as React from 'react';\nimport { Control, useFormState } from 'react-hook-form';\n\nimport colors from './colors';\nimport { CircleButton, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  setVisible: any;\n  control: Control;\n};\n\nconst Header = ({ setVisible, control }: Props) => {\n  const { isValid } = useFormState({\n    control,\n  });\n\n  return (\n    <header\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 10,\n        backgroundColor: 'transparent',\n      }}\n    >\n      <p\n        style={{\n          ...paraGraphDefaultStyle,\n          margin: 0,\n          padding: 0,\n          fontWeight: 400,\n          fontSize: 12,\n        }}\n      >\n        <span\n          style={{\n            transition: '0.5s all',\n            color: isValid ? colors.green : colors.lightPink,\n          }}\n        >\n          ■\n        </span>{' '}\n        React Hook Form\n      </p>\n      <CircleButton title=\"Close dev panel\" onClick={() => setVisible(false)}>\n        ✕\n      </CircleButton>\n    </header>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport { get } from 'react-hook-form';\nimport isUndefined from 'lodash/isUndefined';\nimport isObject from 'lodash/isObject';\n\nimport colors from './colors';\nimport { Button, Table, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  isNative: boolean;\n  errorMessage: string | undefined;\n  errorType: string | undefined;\n  hasError: boolean;\n  type: string | undefined;\n  isTouched: boolean;\n  isDirty: boolean;\n  index: number;\n  fieldsValues: any;\n  name: string;\n  collapseAll: boolean;\n  refObject: any;\n};\n\nconst PanelTable = ({\n  refObject,\n  hasError,\n  isDirty,\n  fieldsValues,\n  isNative,\n  errorMessage,\n  errorType,\n  type,\n  isTouched,\n  name,\n  collapseAll,\n}: Props) => {\n  const [collapse, setCollapse] = React.useState(false);\n\n  React.useEffect(() => {\n    setCollapse(!collapseAll);\n  }, [collapseAll]);\n\n  let value = fieldsValues ? get(fieldsValues, name) : '';\n  let isValueWrappedInPre = false;\n\n  if (!isUndefined(value)) {\n    if (isObject(value)) {\n      try {\n        value = (\n          <pre style={{ margin: 0 }}>\n            <code style={{ fontSize: 12 }}>\n              {JSON.stringify(value, null, 2)}\n            </code>\n          </pre>\n        );\n        isValueWrappedInPre = true;\n      } catch {\n        value = <span>[Nested Object]</span>;\n      }\n    } else if (typeof value !== 'string') {\n      value = String(value);\n    }\n  }\n\n  return (\n    <Table\n      style={{\n        padding: '5px 8px',\n        width: '100%',\n        transition: '.3s all',\n        borderLeft: `2px solid ${\n          hasError ? colors.secondary : colors.buttonBlue\n        }`,\n        background: 'none',\n      }}\n    >\n      <thead>\n        <tr>\n          <td valign=\"top\" style={{ width: 85, lineHeight: '22px' }}>\n            <Button\n              onClick={() => setCollapse(!collapse)}\n              title=\"Toggle field table\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                width: 20,\n                textAlign: 'center',\n                marginRight: 8,\n              }}\n            >\n              {collapse ? '+' : '-'}\n            </Button>\n            <Button\n              onClick={() => {\n                if (refObject.scrollIntoView) {\n                  refObject.scrollIntoView({ behavior: 'smooth' });\n                }\n              }}\n              title=\"Scroll into view\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                textAlign: 'center',\n                width: 'calc(100% - 30px)',\n                ...(isNative\n                  ? {}\n                  : { cursor: 'not-allowed', background: colors.lightBlue }),\n              }}\n            >\n              {isNative ? 'Native' : 'Custom'}\n            </Button>\n          </td>\n          <td\n            style={{\n              display: 'block',\n              maxWidth: 140,\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                padding: 0,\n                top: 0,\n                position: 'relative',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                ...paraGraphDefaultStyle,\n                lineHeight: '24px',\n              }}\n              title={name}\n            >\n              {name}\n            </p>\n          </td>\n        </tr>\n      </thead>\n      {!collapse && (\n        <tbody>\n          {type && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {type}\n              </td>\n            </tr>\n          )}\n          {errorType && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                ERROR Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {errorType}\n              </td>\n            </tr>\n          )}\n          {errorMessage && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                MESSAGE:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {typeof errorMessage === 'string'\n                  ? errorMessage.trim()\n                  : JSON.stringify(errorMessage)}\n              </td>\n            </tr>\n          )}\n          {!isUndefined(value) && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Value:\n              </td>\n              <td\n                data-testid={`${name}-field-value`}\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {!isValueWrappedInPre && (\n                  <p\n                    title={value}\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </p>\n                )}\n                {isValueWrappedInPre && (\n                  <div\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </div>\n                )}\n              </td>\n            </tr>\n          )}\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Touched:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isTouched ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isTouched ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Dirty:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isDirty ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isDirty ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n        </tbody>\n      )}\n    </Table>\n  );\n};\n\nexport default PanelTable;\n","import * as React from 'react';\nimport { Animate } from 'react-simple-animate';\n\nimport colors from './colors';\nimport { Button, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  formState: any;\n  showFormState: boolean;\n  setShowFormState: (payload: boolean) => void;\n};\n\nconst FormStateTable = ({\n  formState,\n  showFormState,\n  setShowFormState,\n}: Props) => (\n  <div\n    style={{\n      alignSelf: 'end',\n    }}\n  >\n    <Animate\n      play={showFormState}\n      start={{ opacity: 0 }}\n      end={{ opacity: 1 }}\n      render={({ style }) => (\n        <table\n          style={{\n            padding: '5px 10px',\n            display: 'block',\n            background: 'black',\n            borderTop: `1px solid ${colors.lightPink}`,\n            pointerEvents: 'none',\n            ...style,\n          }}\n        >\n          <tbody>\n            <tr>\n              <td align=\"right\" style={{ width: 90, ...paraGraphDefaultStyle }}>\n                Valid:\n              </td>\n              <td\n                style={{\n                  color: formState.isValid ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isValid ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Dirty:\n              </td>\n              <td\n                style={{\n                  color: formState.isDirty ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isDirty ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Submitted:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitted\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitted ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Count:\n              </td>\n              <td\n                style={{\n                  color: formState.submitCount\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.submitCount}\n              </td>\n            </tr>\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Submitting:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitting\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitting ? 'true' : 'false'}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      )}\n    />\n    <Button\n      style={{\n        margin: 0,\n        width: '100%',\n        padding: '8px 10px',\n        textTransform: 'none',\n        fontSize: 12,\n        lineHeight: '14px',\n        cursor: 'pointer',\n      }}\n      title=\"Toggle form state panel\"\n      onClick={() => {\n        setShowFormState(!showFormState);\n      }}\n    >\n      <span\n        style={{\n          transition: '0.5s all',\n          color: formState.isValid ? colors.green : colors.lightPink,\n        }}\n      >\n        ■\n      </span>{' '}\n      Form State: {showFormState ? 'OFF' : 'ON'}\n    </Button>\n  </div>\n);\n\nexport default FormStateTable;\n","export function setVisible(state: any, payload: any) {\n  return {\n    ...state,\n    visible: payload,\n  };\n}\n\nexport function setCollapse(state: any, payload: any) {\n  return {\n    ...state,\n    isCollapse: payload,\n  };\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Control, useForm, useWatch, useFormState, get } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\n\nimport colors from './colors';\nimport PanelTable from './panelTable';\nimport FormStateTable from './formStateTable';\nimport { Button, Input } from './styled';\nimport { setCollapse } from './settingAction';\n\nlet childIndex = 0;\n\nfunction PanelChildren<T, K, L, M, G>({\n  fields,\n  searchTerm,\n  touchedFields,\n  errors,\n  dirtyFields,\n  state,\n  fieldsValues,\n}: {\n  fields: T;\n  fieldsValues: K;\n  state: {\n    isCollapse: boolean;\n  };\n  searchTerm: string;\n  touchedFields: M;\n  errors: L;\n  dirtyFields: G;\n}) {\n  return (\n    <>\n      {fields &&\n        Object.entries(fields)\n          .filter(\n            ([name]) =>\n              ((name &&\n                name.toLowerCase &&\n                name.toLowerCase().includes(searchTerm)) ||\n                (!name && !searchTerm) ||\n                searchTerm === '') &&\n              name,\n          )\n          .map(([name, value], index) => {\n            childIndex++;\n\n            if (!value?._f) {\n              return (\n                <PanelChildren\n                  key={name + childIndex}\n                  {...{\n                    fields: value,\n                    searchTerm,\n                    touchedFields,\n                    errors,\n                    dirtyFields,\n                    state,\n                    fieldsValues,\n                  }}\n                />\n              );\n            } else {\n              const error = get(errors, value._f.name);\n              const errorMessage = get(error, 'message', undefined);\n              const errorType = get(error, 'type', undefined);\n              const type = get(value, 'ref.type', undefined);\n              const isTouched = !!get(touchedFields, value._f.name);\n              const isNative = !!(value && value._f.ref.type);\n              const isDirty = !!get(dirtyFields, value._f.name);\n              const hasError = !!error;\n              const ref = get(value, '_f.ref');\n\n              return (\n                <section\n                  key={value?._f.name + childIndex}\n                  style={{\n                    borderBottom: `1px dashed ${colors.secondary}`,\n                    margin: 0,\n                  }}\n                >\n                  <PanelTable\n                    refObject={ref}\n                    index={index}\n                    collapseAll={state.isCollapse}\n                    name={value?._f.name}\n                    isTouched={isTouched}\n                    type={type}\n                    hasError={hasError}\n                    isNative={isNative}\n                    errorMessage={errorMessage}\n                    errorType={errorType}\n                    isDirty={isDirty}\n                    fieldsValues={fieldsValues}\n                  />\n                </section>\n              );\n            }\n          })}\n    </>\n  );\n}\n\nconst Panel = ({ control, control: { _fields } }: { control: Control }) => {\n  const formState = useFormState({\n    control,\n  });\n  const { dirtyFields, touchedFields, errors } = formState;\n  formState.isDirty;\n  const { state, actions } = useStateMachine({\n    setCollapse,\n  });\n  const [, setData] = React.useState({});\n  const [showFormState, setShowFormState] = React.useState(false);\n  const fieldsValues = useWatch({\n    control,\n  });\n  const { register, watch } = useForm();\n  const searchTerm = watch('search', '');\n\n  useEffect(() => {\n    setData({});\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateRows: '56px auto',\n        height:\n          process.env.NODE_ENV === 'test' ? '100vh' : 'calc(100vh - 40px)',\n      }}\n    >\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `1fr 1fr`,\n          gridTemplateRows: '28px 28px',\n        }}\n      >\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Update values and state the form\"\n          onClick={() => setData({})}\n        >\n          ♺ REFRESH\n        </Button>\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Toggle entire fields\"\n          onClick={() => {\n            actions.setCollapse(!state.isCollapse);\n          }}\n        >\n          {state.isCollapse ? '[-] COLLAPSE' : '[+] EXPAND'}\n        </Button>\n\n        <Input\n          style={{\n            display: 'inline-block',\n            borderRadius: 0,\n            width: '100%',\n            margin: 0,\n            padding: '5px 10px',\n            WebkitAppearance: 'none',\n            appearance: 'none',\n            fontSize: 14,\n            border: 0,\n            color: 'white',\n            gridColumnStart: 1,\n            gridColumnEnd: 4,\n            background: 'black',\n          }}\n          {...register('search')}\n          placeholder=\"Filter name...\"\n          type=\"search\"\n        />\n      </div>\n\n      <div\n        style={{\n          overflow: 'auto',\n        }}\n      >\n        <PanelChildren\n          fields={_fields}\n          searchTerm={searchTerm}\n          errors={errors}\n          touchedFields={touchedFields}\n          dirtyFields={dirtyFields}\n          fieldsValues={fieldsValues}\n          state={state}\n        />\n      </div>\n\n      <FormStateTable\n        formState={formState}\n        showFormState={showFormState}\n        setShowFormState={setShowFormState}\n      />\n    </div>\n  );\n};\n\nexport default Panel;\n","import * as React from 'react';\n\nimport colors from './colors';\n\nconst Logo = ({\n  style,\n  actions,\n}: {\n  style?: Record<string, any>;\n  actions: {\n    setVisible: (arg: boolean) => void;\n  };\n}) => {\n  return (\n    <svg\n      fill=\"white\"\n      viewBox=\"0 0 100 100\"\n      style={{\n        height: 14,\n        padding: 3,\n        borderRadius: 2,\n        background: colors.lightPink,\n        ...style,\n      }}\n      onClick={() => {\n        actions.setVisible(true);\n      }}\n      aria-label=\"React Hook Form Logo\"\n    >\n      <path d=\"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\" />\n    </svg>\n  );\n};\n\nexport default Logo;\n","export type PLACEMENT =\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right';\n\nexport function getPositionByPlacement(\n  placement: PLACEMENT,\n  defaultX = 0,\n  defaultY = 0,\n) {\n  const [x, y] = placement.split('-');\n  return {\n    [x]: defaultX,\n    [y]: defaultY,\n  };\n}\n","import * as React from 'react';\nimport { Control } from 'react-hook-form';\nimport { Animate } from 'react-simple-animate';\n\nimport Header from './header';\nimport Panel from './panel';\nimport colors from './colors';\nimport Logo from './logo';\nimport { Button } from './styled';\nimport { useStateMachine } from 'little-state-machine';\nimport { setVisible } from './settingAction';\nimport { PLACEMENT, getPositionByPlacement } from './position';\n\ninterface DevtoolUIProps {\n  control: Control<any>;\n  placement?: PLACEMENT;\n}\n\nexport const DevToolUI: React.FC<DevtoolUIProps> = ({\n  control,\n  placement = 'top-right',\n}) => {\n  const { state, actions } = useStateMachine({\n    setVisible,\n  });\n\n  const position = getPositionByPlacement(placement, 0, 0);\n\n  return (\n    <>\n      <Animate\n        play={state.visible}\n        duration={0.2}\n        start={{\n          ...position,\n          position: 'fixed',\n          transform: placement.includes('right')\n            ? 'translateX(280px)'\n            : 'translateX(-280px)',\n          zIndex: 99999,\n        }}\n        end={{\n          ...position,\n          position: 'fixed',\n          transform: 'translateX(0)',\n          zIndex: 99999,\n        }}\n      >\n        <div\n          style={{\n            ...position,\n            position: 'fixed',\n            height: '100vh',\n            width: 250,\n            zIndex: 99999,\n            background: colors.buttonBlue,\n            display: 'grid',\n            textAlign: 'left',\n            color: 'white',\n            fontSize: 14,\n            gridTemplateRows: '40px auto',\n            fontFamily:\n              \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n          }}\n        >\n          <Header setVisible={actions.setVisible} control={control} />\n          <Panel control={control} />\n        </div>\n      </Animate>\n\n      {!state.visible && (\n        <Button\n          title=\"Show dev panel\"\n          hideBackground\n          style={{\n            position: 'fixed',\n            zIndex: 99999,\n            ...getPositionByPlacement(placement, 3, 3),\n            padding: 3,\n            margin: 0,\n            background: 'none',\n          }}\n        >\n          <Logo actions={actions} />\n        </Button>\n      )}\n    </>\n  );\n};\n","import _ from 'lodash';\n\nexport function proxyToObject<T extends Record<string, any>>(proxy: T) {\n  return Reflect.ownKeys(proxy).reduce((perv, key) => {\n    perv[key as keyof T] = proxy[key as keyof T];\n    return perv;\n  }, {} as T);\n}\n\nexport function nestToFlat<V>(\n  flatKeys: string[],\n  obj: object,\n  defaultValue?: V,\n) {\n  return flatKeys.reduce((perv, name) => {\n    // nested field may be `undefined`\n    perv[name] = _.get(obj, name) || defaultValue;\n    return perv;\n  }, {} as Record<string, V>);\n}\n","import _ from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { Control, useFormState, useWatch } from 'react-hook-form';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { v4 as uuid } from 'uuid';\nimport { MessageData, UpdatePayload } from './types';\nimport { nestToFlat, proxyToObject } from './utils';\n\nconst id = uuid();\n\nexport function useExportControlToExtension(control: Control<any>) {\n  const nestedFormValues = useWatch({ control });\n  const formState = useFormState({ control });\n\n  const [isExtensionEnabled, setIsExtensionEnabled] = useState(false);\n\n  const handleInitMessage = (message: MessageEvent<MessageData>) => {\n    if (\n      message.data.source !== 'react-hook-form-bridge' ||\n      message.data.type !== 'INIT'\n    ) {\n      return;\n    }\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'WELCOME',\n    } as MessageData);\n    setIsExtensionEnabled(true);\n  };\n\n  useEffect(() => {\n    window.addEventListener('message', handleInitMessage);\n    return () => window.removeEventListener('message', handleInitMessage);\n  }, []);\n\n  useDeepCompareEffect(() => {\n    if (!isExtensionEnabled) {\n      return;\n    }\n\n    const {\n      errors: nestedErrors,\n      dirtyFields: nestedDirtyFields,\n      touchedFields: nestedTouchedFields,\n      ...formStatus\n    } = proxyToObject(formState);\n\n    const flatFieldNames = [...control._names.mount];\n\n    const formValues = nestToFlat(flatFieldNames, nestedFormValues, '');\n    const dirtyFields = nestToFlat(flatFieldNames, nestedDirtyFields, false);\n    const touchedFields = nestToFlat(\n      flatFieldNames,\n      nestedTouchedFields,\n      false,\n    );\n    const flatErrors = nestToFlat<{ type?: string; message?: string }>(\n      flatFieldNames,\n      nestedErrors,\n    );\n\n    const errors = Object.entries(flatErrors).reduce((perv, [key, value]) => {\n      perv[key] = {\n        type: value?.type as string,\n        message: value?.message as string,\n      };\n      return perv;\n    }, {} as Record<string, { type?: string; message?: string }>);\n\n    const nativeFields = flatFieldNames.reduce((perv, name) => {\n      perv[name] = !!_.get(control._fields, name)?._f?.ref?.type;\n      return perv;\n    }, {} as Record<string, boolean>);\n\n    const updateMessagePayload: UpdatePayload = {\n      id,\n      data: {\n        formValues,\n        formState: {\n          errors,\n          dirtyFields,\n          touchedFields,\n          nativeFields,\n          ...formStatus,\n        },\n      },\n    };\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'UPDATE',\n      payload: updateMessagePayload,\n    } as MessageData);\n  }, [isExtensionEnabled, nestedFormValues, proxyToObject(formState)]);\n\n  return { isExtensionEnabled };\n}\n","import { createStore, StateMachineProvider } from 'little-state-machine';\nimport * as React from 'react';\nimport { Control, FieldValues, useFormContext } from 'react-hook-form';\nimport { DevToolUI } from './devToolUI';\nimport { useExportControlToExtension } from './extension/useExportControlToExtension';\nimport type { PLACEMENT } from './position';\n\nif (typeof window !== 'undefined') {\n  createStore(\n    {\n      visible: false,\n      isCollapse: false,\n      filterName: '',\n    },\n    {\n      name: '__REACT_HOOK_FORM_DEVTOOLS__',\n      middleWares: [],\n      storageType: window.localStorage,\n    },\n  );\n}\n\nexport const DevTool = <T extends FieldValues>(props?: {\n  control?: Control<T>;\n  placement?: PLACEMENT;\n}) => {\n  const methods = useFormContext();\n\n  const { isExtensionEnabled } = useExportControlToExtension(\n    props?.control ?? methods.control,\n  );\n  if (isExtensionEnabled) {\n    return null;\n  }\n\n  return (\n    <StateMachineProvider>\n      <DevToolUI\n        control={props?.control ?? methods.control}\n        placement={props?.placement}\n      />\n    </StateMachineProvider>\n  );\n};\n\nexport type { PLACEMENT };\n"]},"metadata":{},"sourceType":"script"}