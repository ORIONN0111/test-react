{"ast":null,"code":"var _jsxFileName = \"/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport styles from './App.css';\nimport pic from \"./images/Image.png\";\nimport * as React from \"react\";\nimport escapeStringRegexp from \"escape-string-regexp\"; // import { View, StyleSheet, Button, Alert } from 'react-native';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const {\n    innerWidth: width\n  } = window;\n  var imagevw = 925;\n  var imagevh = 588;\n  const height = width * imagevh / imagevw;\n  let count = 40;\n  const nodeList = [[228, 200], [203, 132], [349, 210], [432, 250], [505, 237], [506, 264], [540, 255], [511, 151], [543, 117], [432, 174], [554, 194], [321, 151], [459, 206], [245, 133], [186, 190], [222, 172], [573, 119], [387, 251], [563, 165], [337, 256], [460, 166], [505, 174], [473, 313], [219, 95], [368, 121], [368, 126], [368, 131], [165, 133], [280, 123], [273, 297], [258, 251], [300, 259], [305, 191], [262, 184], [428, 207], [395, 404], [686, 318], [346, 481], [247, 103], [464, 368], [688, 495], [331, 271]];\n  const [searchKeyword, updateSearchKeyword] = React.useState(\"\");\n\n  const onInput = event => {\n    // 入力キーワードをstateに格納する\n    updateSearchKeyword(event.currentTarget.value);\n  };\n\n  const filteredList = props.list.filter(item => {\n    // ユーザー入力を安全に正規表現にする（このときすべて小文字化で正規化する）\n    const escapedText = escapeStringRegexp(searchKeyword.toLowerCase()); // 小文字で比較して部分一致するものだけを残す\n\n    return new RegExp(escapedText).test(item.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"view\", {\n    className: \"base\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: pic,\n      alt: \"map\",\n      className: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), function () {\n      let list = [];\n      let name;\n\n      for (let i = 0; i <= 40; i++) {\n        const pos1 = {\n          left: 228 * width / imagevw,\n          top: 200 * height / imagevh\n        };\n        let w = nodeList[i][0] * width / imagevw;\n        let h = nodeList[i][1] * height / imagevh;\n        list.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"base-place\",\n          style: {\n            left: w,\n            top: h\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this));\n      }\n\n      return list;\n    }(), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search-keyword\",\n      type: \"text\" // onInput={onInput}\n      ,\n      placeholder: \"input search keyword\",\n      className: \"search-area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4HDLTKE/Raksa4i/Bfgy+PJSlaE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","styles","pic","React","escapeStringRegexp","App","props","innerWidth","width","window","imagevw","imagevh","height","count","nodeList","searchKeyword","updateSearchKeyword","useState","onInput","event","currentTarget","value","filteredList","list","filter","item","escapedText","toLowerCase","RegExp","test","name","i","pos1","left","top","w","h","push"],"sources":["/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport styles from './App.css';\nimport pic from \"./images/Image.png\";\nimport * as React from \"react\";\nimport escapeStringRegexp from \"escape-string-regexp\";\n\n// import { View, StyleSheet, Button, Alert } from 'react-native';\n\ninterface Props {\n  list: string[];\n}\n\nfunction App(props: Props) {\n  const { innerWidth: width} = window;\n  var imagevw = 925\n  var imagevh = 588\n  const height = width * imagevh / imagevw\n  let count = 40\n\n  const nodeList = [\n[228,200],\n[203,132],\n[349,210],\n[432,250],\n[505,237],\n[506,264],\n[540,255],\n[511,151],\n[543,117],\n[432,174],\n[554,194],\n[321,151],\n[459,206],\n[245,133],\n[186,190],\n[222,172],\n[573,119],\n[387,251],\n[563,165],\n[337,256],\n[460,166],\n[505,174],\n[473,313],\n[219,95],\n[368,121],\n[368,126],\n[368,131],\n[165,133],\n[280,123],\n[273,297],\n[258,251],\n[300,259],\n[305,191],\n[262,184],\n[428,207],\n[395,404],\n[686,318],\n[346,481],\n[247,103],\n[464,368],\n[688,495],\n[331,271],\n];\n\nconst [searchKeyword, updateSearchKeyword] = React.useState(\"\");\n\nconst onInput = (event: React.FormEvent<HTMLInputElement>) => {\n  // 入力キーワードをstateに格納する\n  updateSearchKeyword(event.currentTarget.value);\n};\n\nconst filteredList = props.list.filter((item) => {\n  // ユーザー入力を安全に正規表現にする（このときすべて小文字化で正規化する）\n  const escapedText = escapeStringRegexp(searchKeyword.toLowerCase());\n  // 小文字で比較して部分一致するものだけを残す\n  return new RegExp(escapedText).test(item.toLowerCase());\n});\n\n  return (\n    <view className='base'>\n    <img src={pic} alt=\"map\" className='map'>\n    </img>\n    {function() {\n      let list = []\n      let name\n      for (let i = 0; i <= 40; i++) {\n        const pos1 = {left:228 * width / imagevw, top:200 * height / imagevh}\n        let w = nodeList[i][0] * width / imagevw\n        let h = nodeList[i][1] * height / imagevh\n        list.push(<div\n          className='base-place'\n          style={{left:w,top:h}}\n        ></div>)\n      }\n      return list\n    }()}\n    <input\n          id=\"search-keyword\"\n          type=\"text\"\n          // onInput={onInput}\n          placeholder={\"input search keyword\"}\n          className=\"search-area\"\n        />\n    </view>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}