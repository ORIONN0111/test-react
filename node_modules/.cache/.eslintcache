[{"/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/index.tsx":"1","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/reportWebVitals.ts":"2","/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/App.tsx":"3"},{"size":554,"mtime":1664735509901,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1664735509903,"results":"6","hashOfConfig":"5"},{"size":4817,"mtime":1667852082362,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hmt5sk",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/index.tsx",[],[],"/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/reportWebVitals.ts",[],[],"/Users/x19012xx/Documents/GitHub/orionn0111.github.io/test-react/src/App.tsx",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32"],[],"import { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\n// import { Cube } from './Cube';\n// import { SearchForm } from './Search';\nimport './styles.css'\nimport data from \"./data.json\";\nimport * as THREE from 'three';\nimport type { Mesh } from 'three';\nimport { FC, useRef } from 'react';\nimport { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n\tGrid,\n\tButton,\n\tBox,\n\tTextField,\n\tAutocomplete,\n\tTypography,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n} from '@mui/material';\nvar sendId = -10;\n\nfunction App() {\n\tconst [count, setNum] = useState(0);\n\tconst { control, handleSubmit, setValue, getValues } = useForm({\n\t\tmode: 'onChange',\n\t\tdefaultValues: {\n\t\t\tsingle: {},\n\t\t},\n\t});\n\tconst magnification = 0.01;\n\tconst cubeRef = useRef<Mesh>(null);\n\n\n\tconst handleClickOpen = () => {\n\t\t// setOpen(true);\n\t\tconsole.log('handleC');\n\t};\n\tconst handleClose = () => {\n\t\t// setOpen(false);\n\t\tconsole.log('handleClo');\n\t};\n\tconst handleChange = (e: any) => {\n\t\t// console.log(e.target.id);\n\t\tsendId = e.id;\n\t\tconst new_count = e.id;\n\t\tsetNum(new_count)\n\t\tconsole.log(sendId);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Canvas\n\t\t\t\t\tcamera={{\n\t\t\t\t\t\tfov: 45,\n\t\t\t\t\t\tnear: 0.1,\n\t\t\t\t\t\tfar: 1000,\n\t\t\t\t\t\tposition: [0, 0, 10]\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<mesh ref={cubeRef}>\n\t\t\t\t\t\t<mesh>\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{/* ボックスを置く */}\n\t\t\t\t\t\t\t\t{function () {\n\t\t\t\t\t\t\t\t\tlet list = [];\n\t\t\t\t\t\t\t\t\tfor (let i = 0; i < data.place.length; i++) {\n\t\t\t\t\t\t\t\t\t\tlet w = data.place[i].x - 925 / 2;\n\t\t\t\t\t\t\t\t\t\tlet h = -data.place[i].y + 588 / 2;\n\t\t\t\t\t\t\t\t\t\tconsole.log(sendId);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif(i===sendId-1){\n\t\t\t\t\t\t\t\t\t\t\tlist.push(\n\t\t\t\t\t\t\t\t\t\t\t\t<mesh position={[w * magnification, h * magnification, 15 * magnification * 10]} key={[\"boxkey\",i].join('')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<boxBufferGeometry args={[10 * data.place[i].w * magnification, 10 * data.place[i].h * magnification, 10 * data.place[i].d * magnification]} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<meshNormalMaterial  attach=\"material\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</mesh>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tlist.push(\n\t\t\t\t\t\t\t\t\t\t\t<mesh position={[w * magnification, h * magnification, 15 * magnification * 10]} key={[\"boxkey\",i].join('')}>\n\t\t\t\t\t\t\t\t\t\t\t\t<boxBufferGeometry args={[10 * data.place[i].w * magnification, 10 * data.place[i].h * magnification, 10 * data.place[i].d * magnification]} />\n\t\t\t\t\t\t\t\t\t\t\t\t<meshNormalMaterial wireframe />\n\t\t\t\t\t\t\t\t\t\t\t</mesh>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn list;\n\t\t\t\t\t\t\t\t}()}\n\t\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{/* 地面を作る */}\n\t\t\t\t\t\t\t\t{function () {\n\t\t\t\t\t\t\t\t\tlet list = [];\n\t\t\t\t\t\t\t\t\tlet xAd = 250;\n\t\t\t\t\t\t\t\t\tlet yAd = 250;\n\t\t\t\t\t\t\t\t\tfor (let i = 0; i < data.ground.length; i++) {\n\t\t\t\t\t\t\t\t\t\tfor (let v = 0; v < data.ground[i].length; v++) {\n\t\t\t\t\t\t\t\t\t\t\tlet a = 2000 / data.ground[i].length;\n\t\t\t\t\t\t\t\t\t\t\tlet b = 1200 / data.ground.length;\n\t\t\t\t\t\t\t\t\t\t\tconst maskPts = [];\n\t\t\t\t\t\t\t\t\t\t\tmaskPts.push(new THREE.Vector2((a - a * (v - 1) / 2 + xAd) * magnification, (b - b * (i - 1) / 2 + yAd) * magnification));\n\t\t\t\t\t\t\t\t\t\t\tmaskPts.push(new THREE.Vector2((a - a * (v - 1) / 2 + xAd) * magnification, (b - b * (i - 0) / 2 + yAd) * magnification));\n\t\t\t\t\t\t\t\t\t\t\tmaskPts.push(new THREE.Vector2((a - a * (v - 0) / 2 + xAd) * magnification, (b - b * (i - 0) / 2 + yAd) * magnification));\n\t\t\t\t\t\t\t\t\t\t\tmaskPts.push(new THREE.Vector2((a - a * (v - 0) / 2 + xAd) * magnification, (b - b * (i - 1) / 2 + yAd) * magnification));\n\t\t\t\t\t\t\t\t\t\t\tconst maskShape: any = new THREE.Shape(maskPts);\n\t\t\t\t\t\t\t\t\t\t\tlist.push(\n\t\t\t\t\t\t\t\t\t\t\t\t<mesh position={[0, 0, data.ground[i][data.ground.length - v]]} key={[\"groundKey\",i,\"k\",v].join('')}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<shapeBufferGeometry attach=\"geometry\" args={[maskShape]} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<meshStandardMaterial color='hotpink' />\n\t\t\t\t\t\t\t\t\t\t\t\t</mesh>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn list;\n\t\t\t\t\t\t\t\t}()}\n\t\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t</mesh>\n\t\t\t\t\t\t<meshPhongMaterial color=\"aqua\" />\n\t\t\t\t\t</mesh>\n\t\t\t\t\t<ambientLight args={[0xffffff]} intensity={0.2} />\n\t\t\t\t\t<directionalLight position={[1, 1, 1]} intensity={0.8} />\n\t\t\t\t\t<OrbitControls />\n\t\t\t\t</Canvas>\n\t\t\t\t{/* <SearchForm /> */}\n\t\t\t</div>\n\t\t\t{/* <footer> */}\n\t\t\t<div className=\"form\" >\n\t\t\t\t<form onSubmit={handleSubmit(handleClickOpen)}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname=\"single\"\n\t\t\t\t\t\trender={({ }) => (\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\toptions={data.place}\n\t\t\t\t\t\t\t\trenderOption={(props, option) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li {...props} key={option.id} id={option.id.toString()}>\n\t\t\t\t\t\t\t\t\t\t\t{option.label}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"施設名\" />}\n\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e.target)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t{/* </footer> */}\n\t\t</>\n\t);\n}\n\nexport default App;",{"ruleId":"33","severity":1,"message":"34","line":9,"column":10,"nodeType":"35","messageId":"36","endLine":9,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":13,"column":2,"nodeType":"35","messageId":"36","endLine":13,"endColumn":6},{"ruleId":"33","severity":1,"message":"38","line":14,"column":2,"nodeType":"35","messageId":"36","endLine":14,"endColumn":8},{"ruleId":"33","severity":1,"message":"39","line":15,"column":2,"nodeType":"35","messageId":"36","endLine":15,"endColumn":5},{"ruleId":"33","severity":1,"message":"40","line":18,"column":2,"nodeType":"35","messageId":"36","endLine":18,"endColumn":12},{"ruleId":"33","severity":1,"message":"41","line":19,"column":2,"nodeType":"35","messageId":"36","endLine":19,"endColumn":8},{"ruleId":"33","severity":1,"message":"42","line":20,"column":2,"nodeType":"35","messageId":"36","endLine":20,"endColumn":15},{"ruleId":"33","severity":1,"message":"43","line":21,"column":2,"nodeType":"35","messageId":"36","endLine":21,"endColumn":15},{"ruleId":"33","severity":1,"message":"44","line":22,"column":2,"nodeType":"35","messageId":"36","endLine":22,"endColumn":19},{"ruleId":"33","severity":1,"message":"45","line":23,"column":2,"nodeType":"35","messageId":"36","endLine":23,"endColumn":13},{"ruleId":"33","severity":1,"message":"46","line":28,"column":9,"nodeType":"35","messageId":"36","endLine":28,"endColumn":14},{"ruleId":"33","severity":1,"message":"47","line":29,"column":33,"nodeType":"35","messageId":"36","endLine":29,"endColumn":41},{"ruleId":"33","severity":1,"message":"48","line":29,"column":43,"nodeType":"35","messageId":"36","endLine":29,"endColumn":52},{"ruleId":"33","severity":1,"message":"49","line":43,"column":8,"nodeType":"35","messageId":"36","endLine":43,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":140,"column":16,"nodeType":"52","messageId":"53","endLine":140,"endColumn":19},"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'count' is assigned a value but never used.","'setValue' is assigned a value but never used.","'getValues' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected"]